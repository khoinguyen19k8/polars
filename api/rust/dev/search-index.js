var searchIndex = new Map(JSON.parse('[["polars",{"t":"","n":["VERSION","apply_method_all_arrow_series","chunked_array","datatypes","df","docs","enable_string_cache","error","frame","functions","io","lazy","prelude","series","testing","time","using_string_cache","ChunkLenIter","ChunkedArray","ChunkedArrayLayout","Multi","MultiNoNull","Single","SingleNoNull","StructChunked","__clone_box","_apply_fields","_can_fast_explode","_sum_as_f64","add","","","","","","","","","","","","add_to","agg_list","","","","","","","","all","all_kleene","amortized_iter","","amortized_iter_with_name","","any","any_kleene","append","apply","","","","","","apply_amortized","apply_amortized_generic","","apply_amortized_same_type","apply_as_ints","","apply_in_place","apply_into_string_amortized","apply_kernel","","","","apply_kernel_cast","","","","apply_mut","","","apply_nonnull_values_generic","apply_to_inner","","apply_to_slice","","","","","","apply_values","","","","","","apply_views","arg_sort","","","","","","arg_sort_multiple","","","","","arg_unique","","","","","arithmetic","as_array","as_binary","","as_list","as_ref","as_ref_dtype","as_string","","binary_zip_and_apply_amortized","bitand","","","bitor","","","bitxor","","","borrow","","borrow_mut","","builder","cast","","cast_and_apply_in_place","cast_unchecked","","","","","","","cast_with_options","","","","","","","","checked_div","checked_div_num","chunk_lengths","","chunks","chunks_mut","clear","clone","clone_into","clone_to_uninit","collect","collect_cheap_metadata","comparison","concat_compact","cont_slice","copy_metadata","copy_metadata_cast","data_views","default","deref","","deref_mut","","div","","","","divide","drop","","","drop_nulls","dtype","equal","","","","","","","","","","equal_missing","","","","","","","","","","explode_and_offsets","","extend","field_by_name","fields_as_series","fill_null_with_values","","","filter","","","","first","first_non_null","float","fmt","","","","","","","for_each","for_each_amortized","","from","","","from_chunk_iter","from_chunk_iter_like","from_chunks","from_chunks_and_dtype","from_columns","from_iter","","","","","","","","","","","","from_iter_options","","","","","from_iter_trusted_length","","","","","","","","","","","","from_iter_values","","","","","from_iterator_par","from_par_iter","","","","","","","","from_par_iter_with_dtype","from_series","from_slice","","","","","from_slice_options","","","","","from_trusted_len_iter_rev","","from_vec","from_vec_validity","full","","","","","","","","full_null","","","","","","","","","full_null_like","full_null_with_dtype","","get","get_any_value","","","","","","","","","get_any_value_unchecked","","","","","","","","","get_as_series","","get_distinct_count","get_fast_explode_list","get_flags","get_inner","","get_max_value","get_min_value","get_object","get_object_unchecked","get_row_encoded","get_row_encoded_array","get_unchecked","get_values_size","","","","group_tuples","","","","","","","","group_tuples_perfect","gt","","","","","","","","","gt_eq","","","","","","","","","has_nulls","head","init","","init_rand","inner_dtype","","interior_mut_metadata","into","","into_column","into_date","into_datetime","into_decimal","into_decimal_unchecked","into_duration","into_iter","","","","","","","","into_no_null_iter","into_series","","into_time","is_empty","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_optimal_aligned","is_sorted_flag","iter","iter_chunks","iter_offsets","iter_validities","iterator","join_compact","last","last_non_null","layout","legacy_div","","legacy_div_scalar","","legacy_div_scalar_lhs","","len","","lhs_div","lhs_rem","lhs_sub","limit","lt","","","","","","","","","lt_eq","","","","","","","","","max","","max_reduce","","","","mean","","median","","","median_reduce","","","merge_metadata","metadata","","metadata_arc","metadata_dyn","metadata_mut","metadata_owned_arc","min","","min_max","min_reduce","","","","mmap_slice","","mul","","","","multiply","n_chunks","n_unique","","","name","new","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","new_empty","new_from_index","","","","","","","","","new_from_vec","new_from_vec_and_validity","new_vec","new_with_dims","none_to_nan","not","","not_equal","","","","","","","","","","not_equal_missing","","","","","","","","","","null_count","object","offsets","","ops","par_iter","","par_iter_indexed","","prod_reduce","prune_empty_chunks","quantile","","","quantile_reduce","","","rand_bernoulli","rand_normal","rand_standard_normal","rand_uniform","rechunk","ref_field","reinterpret_signed","","","","","","","","","","","reinterpret_unsigned","","","","","","","","","","","rem","","","","remainder","rename","reverse","","","","","","","","rolling_map","rolling_map_float","sample_frac","sample_n","scatter","","","scatter_single","","","","scatter_with","","","","set","","","","set_fast_explode","set_fast_explode_list","set_inner_dtype","set_null_count","set_sorted_flag","shift","","","","","","","","","shift_and_fill","","","","","","","","shrink_to_fit","slice","","sort","","","","","","sort_with","","","","","","split_at","","std","std_reduce","","","struct_fields","sub","","","","subtract","sum","","sum_reduce","","","tail","take","","take_chunked_unchecked","take_opt_chunked_unchecked","take_unchecked","","","","","","","","temporal","to_bytes_hashes","to_canonical","to_decimal","to_logical","","to_ndarray","","to_owned","to_string_unchecked","to_vec","to_vec_null_aware","true_div","","true_div_scalar","","true_div_scalar_lhs","","try_apply_amortized","try_apply_amortized_generic","","try_apply_amortized_same_type","try_apply_amortized_to_list","try_apply_fields","try_apply_into_string_amortized","try_apply_nonnull_values_generic","try_from","","try_from_chunk_iter","try_into","","try_zip_and_apply_amortized","type_id","","unique","","","","","unnest","unpack_series_matching_type","unset_fast_explode_list","value_unchecked","var","var_reduce","","","vec_hash","","","","","","","","","","","","","","","","vec_hash_combine","","","","","","","","","","","","","","","","vzip","","width","with_chunk","with_chunk_like","with_chunks","with_name","with_nullable_idx","with_outer_validity","with_outer_validity_chunked","with_sorted_flag","wrapping_abs","","wrapping_add","","wrapping_add_scalar","","wrapping_floor_div","","wrapping_floor_div_scalar","","wrapping_floor_div_scalar_lhs","","wrapping_mod","","wrapping_mod_scalar","","wrapping_mod_scalar_lhs","","wrapping_mul","","wrapping_mul_scalar","","wrapping_neg","","wrapping_sub","","wrapping_sub_scalar","","wrapping_sub_scalar_lhs","","wrapping_trunc_div","","wrapping_trunc_div_scalar","","wrapping_trunc_div_scalar_lhs","","zip_and_apply_amortized","zip_and_apply_amortized_same_type","zip_outer_validity","zip_with","","ArithmeticChunked","Out","Scalar","TrueDivOut","legacy_div","legacy_div_scalar","legacy_div_scalar_lhs","true_div","true_div_scalar","true_div_scalar_lhs","wrapping_abs","wrapping_add","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul_scalar","wrapping_neg","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","AnonymousListBuilder","AnonymousOwnedListBuilder","BinViewChunkedBuilder","BinaryChunkedBuilder","BooleanChunkedBuilder","ChunkedBuilder","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListNullChunkedBuilder","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","NewChunkedArray","NullChunkedBuilder","PrimitiveChunkedBuilder","StringChunkedBuilder","__clone_box","","","","append_array","append_empty","","append_iter","","append_iter_values","append_null","","","","","","","","","","","","","append_opt_array","append_opt_series","","append_opt_slice","append_option","","append_series","","","","","","","","append_slice","append_trusted_len_iter","","append_value","","","","append_values_iter","","borrow","","","","","","","","","","","borrow_mut","","","","","","","","","","","builder","clone","","","","clone_into","","","","clone_to_uninit","","","","default","","deref","","","","","","","","","","","deref_mut","","","","","","","","","","","drop","","","","","","","","","","","fast_explode","","","","","field","","","","","finish","","","","","","","","","","fixed_size_list","from","","","","","","","","","","","from_iter_options","from_iter_values","from_slice","from_slice_options","get_list_builder","init","","","","","","","","","","","inner_array","","","","","into","","","","","","","","","","","list","new","","","","","","","","","","","new_with_values_type","shrink_to_fit","","","","to_owned","","","","try_from","","","","","","","","","","","try_into","","","","","","","","","","","type_id","","","","","","","","","","","vzip","","","","","","","","","","","AnonymousListBuilder","AnonymousOwnedListBuilder","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListNullChunkedBuilder","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","append_null","append_opt_series","append_series","builder","fast_explode","field","finish","get_list_builder","inner_array","CastOptions","NonStrict","Overflowing","Strict","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","","","fmt","from","hash","init","into","strict","to_owned","try_from","try_into","type_id","vzip","ChunkedCollectInferIterExt","ChunkedCollectIterExt","collect_ca","collect_ca_like","collect_ca_trusted","collect_ca_trusted_like","collect_ca_trusted_with_dtype","collect_ca_with_dtype","try_collect_ca","try_collect_ca_like","try_collect_ca_trusted","try_collect_ca_trusted_like","try_collect_ca_trusted_with_dtype","try_collect_ca_with_dtype","Canonical","canonical","ChunkedCollectParIterExt","FromParIterWithDtype","collect_ca_with_dtype","from_par_iter_with_dtype","BoolIterNoNull","FixedSizeListIterNoNull","PolarsIterator","SomeIterator","borrow","","","borrow_mut","","","deref","","","deref_mut","","","drop","","","from","","","init","","","into","","","into_iter","","","new","","next","","","next_back","","","par","size_hint","","","try_from","","","try_into","","","type_id","","","vzip","","","list","string","Conflict","DEFAULT","DISTINCT_COUNT","FAST_EXPLODE_LIST","","IMMetadata","Keep","Locked","MAX_VALUE","MIN_VALUE","Metadata","MetadataCollectable","MetadataEnv","MetadataFlags","MetadataMerge","MetadataProperties","MetadataReadGuard","MetadataTrait","New","SORTED","SORTED_ASC","SORTED_DSC","Unlocked","__clone_box","","","","","all","","bitand","","bitand_assign","","bitor","","bitor_assign","","bits","","","","bitxor","","bitxor_assign","","borrow","","","","","","","borrow_mut","","","","","","","clone","","","","","clone_into","","","","","clone_to_uninit","","","","","collect_cheap_metadata","complement","","contains","","default","","","","deref","","","","","","","","deref_mut","","","","","","","difference","","disabled","distinct_count","","","distinct_count_opt","drop","","","","","","","empty","","enabled","eq","","experimental_enabled","extend","","fast_explode_list","fast_explode_list_opt","filter_props","filter_props_cast","flags","flags_opt","fmt","","","","","","","","","","","","from","","","","","","","from_bits","","from_bits_retain","","","","from_bits_truncate","","from_iter","","from_name","","get_distinct_count","get_fast_explode_list","","get_flags","","","get_max_value","get_min_value","get_mut","get_sorted_flag","init","","","","","","","insert","","intersection","","intersects","","into","","","","","","","into_iter","","is_all","","is_empty","","","is_sorted","is_sorted_any","is_sorted_ascending","is_sorted_descending","iter","","iter_names","","log","logfile","max_value","","","max_value_opt","merge","min_value","","","min_value_opt","new","not","","read","remove","","set","","set_distinct_count","set_fast_explode_list","","set_flags","set_max_value","set_min_value","set_sorted_ascending","set_sorted_descending","set_sorted_flag","","sorted","sorted_opt","sub","","sub_assign","","symmetric_difference","","take","to_owned","","","","","toggle","","try_from","","","","","","","try_into","","","","","","","try_read","try_write","type_id","","","","","","","union","","upcast","vzip","","","","","","","with_cheap_metadata","write","ObjectArray","ObjectValueIter","PolarsObject","PolarsObjectSafe","__clone_box","_split_at_unchecked","arr_from_iter","","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_any","","as_any_mut","borrow","borrow_mut","builder","check_bound","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","dtype","eq","equal","fmt","from","","full_null","get","get_dtype","if_then_else","if_then_else_broadcast_both","if_then_else_broadcast_false","if_then_else_broadcast_true","init","into","into_iter","is_null_unchecked","is_valid_unchecked","","iter","","len","null_count","registry","set_polars_allow_extension","set_validity","slice","slice_typed","slice_typed_unchecked","slice_unchecked","split_at_boxed","split_at_boxed_unchecked","to_boxed","","to_owned","try_arr_from_iter","","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_from","try_into","type_id","type_name","","validity","value","value_unchecked","","values_iter","","vzip","with_validity","","with_validity_typed","ObjectChunkedBuilder","append_null","","append_option","append_value","","append_value_from_any","borrow","borrow_mut","default","deref","deref_mut","drop","finish","from","init","into","new","to_series","try_from","try_into","type_id","vzip","AnonymousObjectBuilder","BuilderConstructor","ObjectConverter","ObjectRegistry","append_null","append_option","append_value","borrow","borrow_mut","builder_constructor","deref","deref_mut","drop","fmt","from","get_object_builder","get_object_converter","get_object_physical_type","init","into","is_object_builder_registered","physical_dtype","register_object_builder","to_series","try_from","try_into","type_id","vzip","Backward","ChunkAgg","ChunkAnyValue","ChunkApply","ChunkApplyKernel","ChunkBytes","ChunkCast","ChunkCompare","ChunkExpandAtIndex","ChunkExplode","ChunkFillNullValue","ChunkFilter","ChunkFull","ChunkFullNull","ChunkQuantile","ChunkReverse","ChunkRollApply","ChunkSet","ChunkShift","ChunkShiftFill","ChunkSort","ChunkTake","ChunkTakeUnchecked","ChunkUnique","ChunkVar","ChunkZip","FillNullLimit","FillNullStrategy","Forward","FuncRet","IsFirstDistinct","IsLastDistinct","Item","Max","MaxBound","Mean","Min","MinBound","None","One","Reinterpret","SlicedArray","Some","SortMultipleOptions","SortOptions","Zero","__clone_box","","","_sum_as_f64","apply","apply_kernel","apply_kernel_cast","apply_to_slice","apply_values","arg_sort","arg_sort_multiple","arg_unique","arity","borrow","","","borrow_mut","","","cast","cast_unchecked","cast_with_options","clone","","","clone_into","","","clone_to_uninit","","","default","","deref","","","deref_mut","","","descending","","drop","","","eq","","","equal","equal_missing","equivalent","","","","","","explode","explode_and_offsets","fill_null","fill_null_with_values","filter","float_sorted_arg_max","fmt","","","from","","","","","full","","full_null","gather","get_any_value","get_any_value_unchecked","gt","gt_eq","hash","","","init","","","into","","","is_first_distinct","is_last_distinct","lt","lt_eq","maintain_order","","max","mean","median","min","min_max","multithreaded","","n_unique","new","","new_from_index","not_equal","not_equal_missing","nulls_last","","offsets","quantile","reinterpret_signed","reinterpret_unsigned","reverse","rolling_map","scatter_single","scatter_with","search_sorted","set","shift","shift_and_fill","slice_typed","slice_typed_unchecked","sort","","sort_with","std","sum","take","take_unchecked","to_byte_slices","to_owned","","","try_from","","","try_into","","","type_id","","","unique","var","vzip","","","with_maintain_order","","with_multithreaded","","with_nulls_last","","with_nulls_last_multi","with_order_descending","","with_order_descending_multi","with_order_reversed","","zip","zip_with","BinaryFnMut","Ret","","","TernaryFnMut","UnaryFnMut","apply_binary_kernel_broadcast","apply_binary_kernel_broadcast_owned","binary","binary_elementwise","binary_elementwise_for_each","binary_elementwise_into_string_amortized","binary_elementwise_values","binary_mut_values","binary_mut_with_options","binary_owned","binary_to_series","binary_unchecked_same_type","broadcast_binary_elementwise","broadcast_binary_elementwise_values","broadcast_try_binary_elementwise","ternary_elementwise","try_binary","try_binary_elementwise","try_binary_mut_with_options","try_binary_unchecked_same_type","try_ternary_elementwise","try_unary_elementwise","try_unary_elementwise_values","try_unary_mut_with_options","unary_elementwise","unary_elementwise_values","unary_kernel","unary_kernel_owned","unary_mut_values","unary_mut_with_options","float_arg_max_sorted_ascending","float_arg_max_sorted_descending","_update_gather_sorted_flag","check_bounds_ca","check_bounds_nulls","Any","Left","Right","SearchSortedSide","__clone_box","binary_search_ca","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","","","fmt","from","hash","init","into","lower_bound_chunks","to_owned","try_from","try_into","type_id","vzip","SlicedArray","_broadcast_bools","arg_bottom_k","arg_sort_multiple","options","slice_typed","slice_typed_unchecked","_arg_bottom_k","_get_rows_encoded","_get_rows_encoded_arr","_get_rows_encoded_ca","_get_rows_encoded_ca_unordered","_get_rows_encoded_compat_array","_get_rows_encoded_unordered","encode_rows_vertical_par_unordered","encode_rows_vertical_par_unordered_broadcast_nulls","SlicedArray","SortMultipleOptions","SortOptions","descending","","maintain_order","","multithreaded","","nulls_last","","slice_typed","slice_typed_unchecked","conversion","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","parse_fixed_offset","parse_time_zone","time_to_time64ns","validate_time_zone","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","Any","AnyValue","Array","","","ArrayChunked","ArrayCollectIterExt","ArrayFromIter","ArrayFromIterDtype","ArrowDataType","ArrowTimeUnit","AsRefDataType","Binary","","","BinaryChunked","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryView","Boolean","","","BooleanChunked","BooleanType","CatIter","Categorical","","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","CategoricalOwned","CategoricalType","CompatLevel","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataType","Date","","Date32","Date64","DateChunked","DateType","Datetime","","DatetimeChunked","DatetimeOwned","DatetimeType","Decimal","","","Decimal256","DecimalChunked","DecimalType","Dictionary","Duration","","","DurationChunked","DurationType","EMPTY","EMPTY_REF","Enum","","EnumOwned","Extension","FalseT","Field","FieldRef","FixedSizeBinary","FixedSizeList","FixedSizeListType","Float","Float16","Float32","","","Float32Chunked","Float32Type","Float64","","","Float64Chunked","Float64Type","GetAnyValue","Global","GlobalRevMapMerger","HasViews","HashMap","","IDX_DTYPE","IdxArr","IdxCa","IdxType","InitHashMaps","InitHashMaps2","Int","Int128Chunked","Int128Type","Int16","","","Int16Chunked","Int16Type","Int32","","","Int32Chunked","Int32Type","Int64","","","Int64Chunked","Int64Type","Int8","","","Int8Chunked","Int8Type","Interval","IntoScalar","IsNested","IsObject","IsStruct","LargeBinary","LargeList","LargeUtf8","Lexical","List","","","ListChunked","ListType","Local","Logical","LogicalType","Map","Microsecond","Microseconds","Millisecond","Milliseconds","Nanosecond","Nanoseconds","Native","Null","","","NumericNative","Object","","ObjectChunked","ObjectOwned","ObjectType","OwnedObject","OwnedPhysical","Physical","","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","PlRandomState","PlSmallStr","PolarsDataType","PolarsFloatType","PolarsIntegerType","PolarsNumericType","PolarsType","RevMapping","Second","StaticArray","Str","String","","StringChunked","StringOwned","StringType","Struct","","","StructOwned","StructType","Time","","Time32","Time64","TimeChunked","TimeType","TimeUnit","TimeZone","Timestamp","TrueDivPolarsType","TrueT","UInt16","","","UInt16Chunked","UInt16Type","UInt32","","","UInt32Chunked","UInt32Type","UInt64","","","UInt64Chunked","UInt64Type","UInt8","","","UInt8Chunked","UInt8Type","Union","Unknown","","UnknownKind","Utf8","Utf8View","ValueIterT","ValueT","ZeroablePhysical","ZeroableValueT","__clone_box","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","_can_fast_unique","_iter_struct_av","_materialize_struct_av","_with_fast_unique","add","","add_to","","","","","","","","","","","","","","","append","","append_null","append_value","arg_sort","arr_from_iter","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","array_leaf_dtype","as_borrowed","as_date_iter","as_datetime_iter","as_ref","","","","","","as_ref_dtype","as_slice","as_str","as_time_iter","borrow","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","borrow_mut","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","boxed","build_local","call_categorical_merge_operation","cast","","cast_leaf","cast_time_unit","","cast_with_options","","","","","","","categorical","checked_div","","","","","","","","","","","clone","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","clone_into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","clone_to_uninit","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cmp","coerce","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","compare","contains_categoricals","contains_objects","contains_views","create_enum_dtype","days","default","","","","","","","","deref","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","deref_mut","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","div","divide","","","","","","","","","","","","drain_iter_and_finish","drop","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dtype","","","","","","","","","","encode_hex","encode_hex_upper","eq","","","","","","","","","","","eq_missing","equal","","","equal_missing","","","equivalent","","","","","","","","","","","","","","","","","","","","","","","","","","","field","find","finish","","","fmt","","","","","","","","","","","","","","","","from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","from_arrow","from_cats_and_rev_map_unchecked","from_duration","from_duration_options","from_global_indices_unchecked","from_iter","","","","","","","","from_naive_date","from_naive_date_options","from_naive_datetime","from_naive_datetime_options","from_naive_time","from_naive_time_options","from_static","from_str","from_string","from_string_to_enum","from_vec","from_zeroable_vec","full","full_null","","get","","get_any_value","","","","","","","get_any_value_unchecked","","","","","","","get_categories","get_dtype","","","","","","","","","","","","","","","","","","","","","","","","","","get_optional","get_rev_map","get_shape","get_str","get_unchecked","","gt","","","gt_eq","","","hash","","","","","","","","hash_impl","hour","hours","idx","implode","init","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","inner_dtype","","into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","into_column","","into_iter","into_scalar","into_series","","","","","","into_static","into_string","is_array","is_binary","is_bool","is_boolean","is_categorical","is_date","is_decimal","is_empty","is_enum","","is_float","","is_global","is_integer","","is_known","is_list","is_local","is_logical","is_nan","is_nested","","is_nested_null","","is_null","","is_numeric","","is_object","is_ord","is_primitive","is_signed_integer","","is_string","is_struct","is_temporal","is_unsigned_integer","","is_view","iter","iter_str","last","leaf_dtype","len","","lit","lt","","","lt_eq","","","make_categoricals_compatible","make_list_categoricals_compatible","matches_schema_type","materialize","max_reduce","merge_dtypes","merge_map","microseconds","milliseconds","min_reduce","minute","minutes","mul","multiply","","","","","","","","","","","","n_unique","name","","","nanosecond","nanoseconds","new","","","","","","","","","","","","","new_logical","newest","next","not_equal","","","not_equal_missing","","","null_count","oldest","parse_from_str_slice","","partial_cmp","","","physical","","precision","register_value","remainder","","","","","","","","","","","","round","","same_src","scale","second","seconds","set_name","set_time_unit","","set_time_unit_and_time_zone","set_time_zone","size_hint","sort","sort_with","str_value","strftime","","","strict_cast","sub","subtract","","","","","","","","","","","","time_unit","","time_zone","to_arrow","","","","to_arrow_field","to_ascii","to_enum","to_global","to_local","to_logical_type","to_owned","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","to_physical","to_physical_type","to_scale","to_string","","","","","","","tot_eq","truncate","","try_arr_from_iter","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_extract","try_from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","try_into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","try_strict_cast","try_to_arrow","try_to_compact_string","","","","type_id","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","underlying_physical_type","unique","uses_lexical_ordering","value","value_counts","value_unchecked","value_within_range","values_iter","vzip","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","with_capacity","","with_validity_typed","write_char","write_fmt","write_str","zero_sum","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","Global","GlobalRevMapMerger","Lexical","Local","Physical","RevMapping","call_categorical_merge_operation","finish","make_categoricals_compatible","make_list_categoricals_compatible","revmap","string_cache","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","StringCacheHolder","borrow","borrow_mut","default","deref","deref_mut","disable_string_cache","drop","","enable_string_cache","from","hold","init","into","try_from","try_into","type_id","using_string_cache","vzip","eager","lazy","CategoricalRemappingWarning","ColumnNotFound","ComputeError","Context","Duplicate","Err","ErrString","IO","InvalidOperation","MapWithoutReturnDtypeWarning","NoData","Ok","OutOfBounds","PolarsError","PolarsResult","PolarsWarning","SQLInterface","SQLSyntax","SchemaFieldNotFound","SchemaMismatch","ShapeMismatch","StringCacheMismatch","StructFieldNotFound","UserWarning","as_ref","borrow","","","borrow_mut","","","constants","context","context_trace","deref","","","","deref_mut","","","drop","","","feature_gated","fmt","","","","","from","","","","","","","","","","get_warning_function","init","","","into","","","map_err","new_static","polars_bail","polars_ensure","polars_err","polars_warn","set_warning_function","to_compute_err","to_string","","try_from","","","try_into","","","try_to_compact_string","","type_id","","","vzip","","","wrap_msg","error","","msg","","FALSE","LENGTH_LIMIT_MSG","TRUE","Any","DataFrame","First","Ignore","Last","None","NullStrategy","PhysRecordBatchIter","Propagate","RecordBatchIter","UniqueKeepStrategy","__clone_box","","","_add_columns","_add_series","_apply_columns","_apply_columns_par","_filter_seq","_select_impl","_select_impl_unchecked","_select_with_schema_impl","_slice_and_realloc","align_chunks","apply","apply_at_idx","as_single_chunk","as_single_chunk_par","borrow","","","","","borrow_mut","","","","","chunk_lengths","clear","clone","","","clone_into","","","clone_to_uninit","","","column","","columns","default","","deref","","","","","deref_mut","","","","","drop","","","","","","drop_in_place","drop_many","drop_many_amortized","drop_nulls","dtypes","empty","empty_with_arrow_schema","empty_with_schema","eq","","equals","equals_missing","equivalent","","","estimated_size","explode","","explode_impl","extend","fields","fill_null","filter","fmt","","","","from","","","","","from_iter","","from_rows","from_rows_and_schema","from_rows_iter_and_schema","get","get_column_index","get_column_names","get_column_names_owned","get_column_names_str","get_columns","get_columns_mut","get_row","get_row_amortized","get_row_amortized_unchecked","get_supertype","group_by","","group_by_dynamic","group_by_stable","group_by_with_series","hash","head","height","hstack","hstack_mut","hstack_mut_unchecked","index","","","","","","","","init","","","","","insert_column","into","","","","","into_iter","","into_struct","is_duplicated","is_empty","is_unique","iter","iter_chunks","","iter_chunks_physical","lazy","len","materialized_column_iter","max_horizontal","mean_horizontal","min_horizontal","n_chunks","","new","new_no_checks","new_no_length_checks","new_with_broadcast","new_with_broadcast_no_checks","next","","null_count","par_materialized_column_iter","partition_by","partition_by_stable","pipe","pipe_mut","pipe_with_args","pop","ptr_equal","rename","replace","replace_column","replace_or_add","reverse","rolling","row","sample_frac","sample_n","sample_n_literal","schema","schema_equal","select","select_at_idx","select_by_range","select_columns","select_physical","select_with_schema","select_with_schema_unchecked","set_column_names","shape","shift","should_rechunk","shrink_to_fit","size_hint","","slice","","slice_par","sort","sort_in_place","split_at","","split_chunks","split_chunks_by_n","sum_horizontal","tail","take","take_columns","take_unchecked","take_unchecked_impl","to_df","to_ndarray","to_owned","","","to_string","transpose","transpose_impl","try_apply","try_apply_at_idx","try_from","","","","","","","try_from_rows_iter_and_schema","try_get_column_index","try_into","","","","","try_to_compact_string","type_id","","","","","unique","unique_impl","unique_stable","unnest","upsample","upsample_stable","vstack","vstack_mut","vstack_mut_unchecked","vzip","","","","","width","with_column","with_column_and_schema","with_column_unchecked","with_row_index","with_row_index_mut","Column","IntoColumn","Scalar","ScalarColumn","Series","__clone_box","","add","","","","agg_first","agg_last","agg_list","agg_max","agg_mean","agg_median","agg_min","agg_n_unique","agg_quantile","agg_sum","agg_var","append","arg_sort","array","as_materialized_series","","as_scalar_column","as_series","as_single_value_series","binary","binary_offset","bit_repr","bitand","","","bitor","","bitxor","","bool","borrow","","borrow_mut","","cast","","cast_unchecked","","cast_with_options","","categorical","clear","clone","","clone_into","","clone_to_uninit","","date","datetime","decimal","default","deref","","deref_mut","","div","","","","divide","drop","","drop_nulls","dtype","","duration","eq","equal","equal_missing","equals","equals_missing","explode","extend","extend_constant","f32","f64","field","fill_null","filter","fmt","","from","","","","from_single_value_series","full_null","gather_every","get","get_data_ptr","get_flags","get_object","get_unchecked","gt","gt_eq","has_nulls","","head","i16","i32","i64","i8","idx","init","","into","","into_column","","","into_frame","into_materialized_series","is_empty","","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_sorted_flag","len","","list","lt","lt_eq","max_reduce","min_reduce","mul","","","","name","","new","","new_empty","","new_from_index","new_scalar","not_equal","not_equal_missing","null_count","phys_iter","product","rechunk","rem","","","","rename","reshape_array","reshape_list","resize","reverse","sample_frac","sample_n","set_sorted_flag","shift","shrink_to_fit","shuffle","slice","sort","split_at","str","strict_cast","","struct_","sub","","","","tail","take","take_materialized_series","","take_slice","take_slice_unchecked","take_unchecked","to_owned","","to_physical_repr","to_series","try_from","","try_into","","type_id","","u16","u32","u64","u8","unique","unique_stable","vec_hash","vec_hash_combine","vzip","","with_name","wrapping_trunc_div_scalar","zip_with","zip_with_same_type","UnpivotArgsIR","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","","","fmt","from","hash","index","init","into","on","to_owned","try_from","try_into","type_id","value_name","variable_name","vzip","BorrowIdxItem","Count","First","GroupBy","GroupByMethod","Groups","GroupsIdx","GroupsIndicator","GroupsProxy","GroupsProxyIter","GroupsProxyParIter","GroupsSlice","Idx","","IdxItem","Implode","IntoGroupsProxy","Last","Max","Mean","Median","Min","NUnique","NanMax","NanMin","Quantile","Slice","","SlicedGroups","Std","Sum","Var","__clone_box","","","","agg_list","aggregations","all","apply","as_list_chunked","borrow","","","","","","","","borrow_mut","","","","","","","","clone","","","","clone_into","","","","clone_to_uninit","","","","count","default","","deref","","","","","","","","","deref_mut","","","","","","","","df","drive_unindexed","drop","","","","","","","","","eq","","equivalent","","","","","","expr","first","","","first_mut","fmt","","","","","fmt_group_by_column","from","","","","","","","","","","","","","from_iter","from_par_iter","get","get_groups","get_groups_mut","group_count","group_tuples","groups","idx_mut","init","","","","","","","","into","","","","","","","","into_idx","into_iter","","","into_par_iter","","","is_empty","","is_sorted_flag","iter","","keys","keys_sliced","last","len","","max","mean","median","min","n_unique","new","","next","nth","par_apply","par_iter","","quantile","select","slice","sort","","std","sum","take_group_firsts","take_group_lasts","take_groups","take_groups_mut","to_owned","","","","to_string","try_from","","","","","","","","try_into","","","","","","","","try_to_compact_string","type_id","","","","","","","","unroll","unwrap_idx","unwrap_slice","var","vzip","","","","","","","","include_nulls","groups","rolling","AggList","TakeExtremum","_agg_helper_idx","_agg_helper_idx_no_null","_agg_helper_slice","_agg_helper_slice_no_null","_rolling_apply_agg_window_no_nulls","_rolling_apply_agg_window_nulls","_slice_from_offsets","_use_rolling_kernels","agg_list","take_max","take_min","PhysicalAggExpr","evaluate","root_name","All","","AnyValueBuffer","AnyValueBufferTrusted","Boolean","","Date","Datetime","Duration","Float32","","Float64","","Int16","","Int32","","Int64","","Int8","","Null","","Row","String","","Struct","Time","UInt16","","UInt32","","UInt64","","UInt8","","__clone_box","","","add","add_unchecked_borrowed_physical","add_unchecked_owned_physical","borrow","","","borrow_mut","","","clone","","","clone_into","","","clone_to_uninit","","","coerce_dtype","default","deref","","","deref_mut","","","drop","","","eq","equivalent","","","fmt","from","","","","","infer_schema","init","","","into","","","into_series","","new","","","reset","","rows_to_schema_first_non_null","rows_to_schema_supertypes","rows_to_supertypes","to_owned","","","try_from","","","try_into","","","type_id","","","vzip","","","concat_df_diagonal","concat_df_horizontal","Abs","Add","Agg","AggExpr","AggGroups","Alias","All","AllColumns","AllColumnsSingle","AllHorizontal","AllowedOptimizations","Always","Ambiguous","And","AnonymousFunction","AnonymousScan","AnonymousScanArgs","AnonymousScanOptions","Any","","","","AnyHorizontal","AnyValue","Arc","ArgAgg","ArgUnique","ArgWhere","ArithmeticChunked","Array","","","","ArrayChunked","ArrayCollectIterExt","ArrayExpr","ArrayFromIter","ArrayFromIterDtype","ArrayNameSpace","ArrayRef","ArrowDataType","ArrowField","ArrowSchema","ArrowTimeUnit","AsBinary","AsList","AsOf","AsOfOptions","AsRefDataType","AsString","AsStruct","AsofJoin","AsofJoinBy","AsofStrategy","Auto","Average","BOOLEAN_RE","Backward","","BackwardFill","Base64Encode","BaseUtcOffset","BatchedCsvReader","BatchedParquetReader","Binary","","","","BinaryChunked","BinaryChunkedBuilder","BinaryExpr","","BinaryNameSpaceImpl","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryUdfOutputField","BinaryView","Boolean","","","","","BooleanChunked","BooleanChunkedBuilder","BooleanFunction","BooleanType","BorrowIdxItem","Both","","Bounds","BoundsIter","Brotli","BrotliLevel","C","CLUSTER_WITH_COLUMNS","COMM_SUBEXPR_ELIM","COMM_SUBPLAN_ELIM","Cache","Cast","CastTimeUnit","CatIter","Categorical","","","CategoricalChunked","CategoricalChunkedBuilder","CategoricalFunction","CategoricalMergeOperation","CategoricalNameSpace","CategoricalOrdering","CategoricalOwned","CategoricalType","Cbrt","Ceil","Century","ChainedThen","ChainedWhen","ChunkAgg","ChunkAggSeries","ChunkAnyValue","ChunkApply","ChunkApplyKernel","ChunkBytes","ChunkCast","ChunkCompare","ChunkExpandAtIndex","ChunkExplode","ChunkFillNullValue","ChunkFilter","ChunkFull","ChunkFullNull","ChunkId","ChunkJoinOptIds","ChunkQuantile","ChunkReverse","ChunkRollApply","ChunkSet","ChunkShift","ChunkShiftFill","ChunkSort","ChunkTake","ChunkTakeUnchecked","ChunkUnique","ChunkVar","ChunkZip","ChunkedArray","ChunkedBuilder","ChunkedCollectInferIterExt","ChunkedCollectIterExt","ChunkedSet","Clip","ClosedInterval","ClosedWindow","Coalesce","CoalesceColumns","Column","","ColumnBinaryUdf","ColumnNotFound","Columns","","ColumnsUdf","Combine","CommentPrefix","CompatLevel","ComputeError","ConcatExpr","ConcatHorizontal","ConcatVertical","Contains","Context","ConvertTimeZone","Count","","CountMatches","Cross","CrossJoin","CsvEncoding","CsvParseOptions","CsvReadOptions","CsvReader","CsvWriter","CsvWriterOptions","CumCount","CumMax","CumMin","CumProd","CumSum","DSTOffset","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataFrame","DataFrameJoinOps","DataFrameOps","DataFrameScan","DataPoint","","DataType","","Date","","","","Date32","Date64","DateChunked","DateMethods","DateTime","DateType","Datetime","","","DatetimeArgs","DatetimeChunked","DatetimeFunction","DatetimeMethods","DatetimeOwned","DatetimeType","Day","Decimal","","","","Decimal256","DecimalChunked","DecimalType","Dense","DfTake","Dictionary","Diff","Distinct","Divide","DropNans","DropNulls","DslPlan","Dtype","DtypeColumn","Duplicate","Duration","","","","","","DurationArgs","DurationChunked","DurationMethods","DurationType","DynArgs","DynamicGroupOptions","EAGER","Earliest","EndsWith","Enum","","EnumOwned","Eq","EqValidity","Err","Exclude","Excluded","ExclusiveOr","Explode","","Expr","ExprEvalExtension","ExprNameNameSpace","ExtContext","ExtendConstant","Extension","Extract","ExtractAll","ExtractGroups","FAST_PROJECTION","FILE_CACHING","FLOAT_RE","FLOAT_RE_DECIMAL","FalseT","Field","","FieldByIndex","FieldByName","FieldRef","FieldsMapper","FieldsNameMapper","FileMetadata","FileMetadataRef","FillNull","FillNullLimit","FillNullStrategy","FillNullWithStrategy","Filter","","Find","First","","","FixedSizeBinary","FixedSizeList","FixedSizeListType","Float","","Float16","Float32","","","","Float32Chunked","Float32Type","Float64","","","","Float64Chunked","Float64Type","Floor","FloorDivide","Fortran","Forward","","ForwardFill","Friday","FromData","FromDataBinary","FromDataUtf8","Full","FuncRet","Function","FunctionExpr","FunctionOutputField","Gather","GatherEvery","Generic","GetAnyValue","GetCategories","GetOutput","Global","GlobalRevMapMerger","GroupBy","","GroupByMethod","Groups","GroupsIdx","GroupsIndicator","GroupsProxy","GroupsProxyIter","GroupsProxyParIter","GroupsSlice","GroupsToRows","Gt","GtEq","Gzip","GzipLevel","HConcat","HStack","HasViews","HashMap","","Head","HexEncode","Higher","Hour","IDX_DTYPE","INTEGER_RE","IO","IR","IS_ARROW","Idx","","IdxArr","IdxCa","IdxItem","IdxSize","IdxType","Implode","","InProcessQuery","IndexColumn","IndexOrder","IndexToUsize","InitHashMaps","InitHashMaps2","Inner","InnerJoinIds","Int","","Int128Chunked","Int128Type","Int16","","","","Int16Chunked","Int16Type","Int32","","","","Int32Chunked","Int32Type","Int64","","","","Int64Chunked","Int64Type","Int8","","","","Int8Chunked","Int8Type","InterSect","Interpolate","InterpolateBy","InterpolationMethod","Interval","IntoColumn","IntoGroupsProxy","IntoLazy","IntoListNameSpace","IntoScalar","IntoSeries","IntoVec","InvalidOperation","IpcCompression","IpcReader","IpcScanOptions","IpcStreamReader","IpcStreamWriter","IpcStreamWriterOption","IpcWriter","IpcWriterOptions","IsBetween","IsFinite","IsFirstDistinct","","IsIn","IsInfinite","IsLastDistinct","","IsLeapYear","IsNan","IsNested","IsNotNan","IsNotNull","IsNull","IsObject","IsStruct","IsoYear","Item","Join","","JoinArgs","JoinBuilder","JoinCoalesce","JoinDispatch","JoinOptions","JoinSpecific","JoinType","JoinValidation","Json","JsonEncode","JsonFormat","JsonLineReader","JsonLines","JsonReader","JsonWriter","JsonWriterOptions","KeepColumns","KeepName","LZ4","Label","LargeBinary","LargeBinaryArray","LargeList","LargeListArray","LargeStringArray","LargeUtf8","Last","","","Latest","LazyCsvReader","LazyFileListReader","LazyFrame","LazyGroupBy","LazyJsonLineReader","Left","","","","","","LeftJoinIds","Len","LenBytes","LenChars","Lexical","LhsNumOps","Linear","","List","","","","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListChunked","ListExpr","ListFromIter","ListNameSpace","ListNameSpaceExtension","ListNameSpaceImpl","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","ListType","Literal","","LiteralValue","Local","Logical","LogicalAnd","LogicalOr","LogicalType","LossyUtf8","Lower","LowerBound","Lowercase","Lt","LtEq","Lz4Raw","Lzo","ManyToMany","ManyToOne","Map","MapFunction","Max","","","","MaxBound","MaxHorizontal","Mean","","","MeanHorizontal","Median","","Microsecond","","Microseconds","Midpoint","Millennium","Millisecond","","Milliseconds","Min","","","","MinBound","MinHorizontal","Minus","Minute","Mode","Modulus","Monday","Month","Multi","MultipleFields","Multiply","NEW_STREAMING","NULL","NUnique","","Name","Named","NamedFrom","NamedFromOwned","NanMax","NanMin","Nanosecond","","Nanoseconds","Native","Nearest","","","Necessary","Negate","NestedType","Never","NewChunkedArray","NoData","NoNull","NonExistent","NonNumeric","None","","","","","","Not","NotEq","NotEqValidity","Nth","Null","","","","","","","NullCount","NullValues","NullableChunkId","NullableIdxSize","NumOpsDispatch","NumOpsDispatchChecked","NumericNative","Object","","ObjectChunked","ObjectOwned","ObjectType","Ok","One","OneToMany","OneToOne","Operator","OptFlags","Or","Ordinal","OrdinalDay","OtherScalar","Out","OutOfBounds","Output","Over","OwnedBatchedCsvReader","OwnedObject","OwnedPhysical","POLARS_TEMP_DIR_BASE_PATH","PREDICATE_PUSHDOWN","PROJECTION_PUSHDOWN","ParallelStrategy","ParquetCompression","ParquetOptions","ParquetReader","ParquetStatistics","ParquetWriteOptions","ParquetWriter","Physical","","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","PlRandomState","PlSmallStr","Plus","PolarsDataType","PolarsError","PolarsFloatType","PolarsIntegerType","PolarsIterator","PolarsNumericType","PolarsObject","PolarsResult","PolarsRound","PolarsTemporalGroupby","PolarsTruncate","PolarsType","PolarsUpsample","Pow","PowFunction","Prefiltered","PrefixFields","PrimitiveChunkedBuilder","Quantile","","QuantileAggSeries","QuantileInterpolOptions","Quarter","QuoteStyle","ROW_ESTIMATE","Raise","","Random","","Range","","Rank","RankMethod","RankOptions","Reinterpret","RenameAlias","RenameAliasFn","RenameFields","RepeatBy","Replace","","ReplaceStrict","ReplaceTimeZone","Reshape","RevMapping","Reverse","","Right","","","","","","Rolling","RollingCovOptions","RollingExpr","RollingExprBy","RollingGroupOptions","RollingOptionsDynamicWindow","RollingOptionsFixedWindow","RollingQuantileParams","RollingSeries","RollingVarParams","Root","Round","","RoundSF","RoundSeries","RowGroupIterColumns","RowGroups","SIMPLIFY_EXPR","SLICE_PUSHDOWN","SQLInterface","SQLSyntax","STREAMING","Saturday","Scalar","","","Scan","ScanArgsAnonymous","ScanArgsIpc","ScanArgsParquet","Schema","SchemaExt","SchemaFieldNotFound","SchemaMismatch","SchemaNamesAndDtypes","SchemaRef","SearchSortedSide","Second","","Select","Selector","","SerReader","SerWriter","SerializeOptions","Series","","","SeriesJoin","SeriesMethods","SeriesOpsTime","SeriesRank","SeriesSealed","SeriesTrait","SetSortedFlag","ShapeMismatch","Shift","ShiftAndFill","ShrinkType","Single","Sink","Slice","","","","","SlicedArray","SlicedGroups","Snappy","Some","","Sort","","SortBy","SortMultipleOptions","SortOptions","SpecialEq","Split","SplitExact","SplitN","SplitNChars","Sqrt","StartBy","StartsWith","StaticArray","StatisticsOptions","Std","","Str","StrCat","String","","","StringCacheHolder","StringCacheMismatch","StringChunked","StringChunkedBuilder","StringExpr","StringFunction","StringMethods","StringNameSpaceImpl","StringOwned","StringType","StripChars","StripCharsEnd","StripCharsStart","StripPrefix","StripSuffix","Strptime","StrptimeOptions","Struct","","","StructArray","StructChunked","StructExpr","StructFieldNotFound","StructFunction","StructNameSpace","StructOwned","StructType","Sub","SubPlan","SuffixFields","Sum","","SumHorizontal","Sunday","TYPE_COERCION","Tail","TakeChunked","TemporalExpr","TemporalFunction","TemporalMethods","Ternary","Then","Thursday","Time","","","","Time32","Time64","TimeChunked","TimeMethods","TimeStamp","TimeType","TimeUnit","TimeZone","Timestamp","Titlecase","ToDecimal","ToDummies","ToInteger","ToPhysical","ToString","TotalDays","TotalHours","TotalMicroseconds","TotalMilliseconds","TotalMinutes","TotalNanoseconds","TotalSeconds","TrueDivOut","TrueDivPolarsType","TrueDivide","TrueT","Truncate","Tuesday","UInt16","","","","UInt16Chunked","UInt16Type","UInt32","","","","UInt32Chunked","UInt32Type","UInt64","","","","UInt64Chunked","UInt64Type","UInt8","","","","UInt8Chunked","UInt8Type","URL_ENCODE_CHAR_SET","UdfSchema","Uncompressed","Union","","UnionArgs","Unique","UniqueKeepStrategy","Unknown","","UnknownKind","UnpivotArgsDSL","UnpivotArgsIR","UpperBound","Uppercase","UserDefinedFunction","Utf8","","Utf8View","ValueCounts","ValueIterT","ValueT","Var","","VarAggSeries","VecHash","Wednesday","Week","WeekDay","When","Wildcard","Window","","WindowBound","WindowMapping","WindowType","WithFields","WithTimeUnit","Xor","Year","ZSTD","Zero","ZeroablePhysical","ZeroableValueT","Zstd","ZstdLevel","__clone_box","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","_coalesce_full_join","_collect_post_opt","_create_left_df_from_slice","_full_join_from_series","_internal","_join_suffix_name","_rename_fields_impl","_split_at_unchecked","_sum_as_f64","","_take_chunked_unchecked","_take_chunked_unchecked_seq","_take_opt_chunked_unchecked","_take_opt_chunked_unchecked_seq","_to_dummies","_with_eager","_with_predicate","abs","","add","","","add_ms","add_ns","add_to","add_us","agg","agg_groups","aggregations","alias","all","","","all_horizontal","allocator","allow_parallel","","allows_predicate_pushdown","allows_projection_pushdown","allows_slice_pushdown","ambiguous","and","anonymous_scan","any","any_horizontal","append","append_null","","append_opt_series","append_option","append_series","append_value","apply","","","apply_binary","apply_children","apply_kernel","apply_kernel_cast","apply_many","apply_many_private","apply_multiple","apply_to_slice","apply_values","arange","arced","arg_max","","","","arg_min","","","","arg_sort","","","arg_sort_by","arg_sort_multiple","arg_unique","","","arg_where","args","","arity","arr","arr_from_iter","","","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","","","array","arrow_schema","as_any","","","","as_any_mut","","as_any_value","as_binary","as_date","as_date_not_exact","as_datetime","as_datetime_not_exact","as_fd","as_list","as_ptr","as_raw_fd","as_ref","","as_ref_dtype","as_series","as_single_ptr","as_slice","as_string","as_struct","as_time","assume_init","","avg","backward_fill","base64_decode","base64_encode","base_utc_offset","batch_size","batched","","","","","batched_borrowed","binary","","binary_expr","bitand","","","bitand_assign","bitor","","bitor_assign","bits","","bitxor","","","bitxor_assign","borrow","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","borrow_mut","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bottom_k","boxed","buffer","builder","cache","","","","call","","call_categorical_merge_operation","call_udf","","call_unchecked","cancel","cast","","","","","","cast_all","cast_unchecked","cast_with_options","","","cat","","cause","cbrt","ceil","","center","century","check_bound","check_schema","checked_div","","checked_div_num","chunk_lengths","chunk_size","chunkedarray","chunks","chunks_mut","clip","","clip_max","","clip_min","","clone","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","clone_inner","clone_into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","clone_to_uninit","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","closed_window","","","cloud","cloud_options","","","","","cmp","","coalesce","","","","coalesce_columns","col","collect","collect_all","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","collect_ca","collect_ca_like","collect_ca_trusted","collect_ca_trusted_like","collect_ca_trusted_with_dtype","collect_ca_with_dtype","collect_concurrently","collect_schema","cols","column_order","column_orders","columns","columns_to_dummies","comment_prefix","compare","","complement","compression","","","compute_schema","concat","","concat_expr","concat_impl","","concat_lf_diagonal","concat_lf_horizontal","concat_list","concat_str","contains","","","","","contains_chunked","","contains_literal","convert_inner_type","convert_to_unsigned_index","count","","","count_matches","count_matches_many","count_rows","count_rows_from_slice","create_enum_dtype","create_left_df_chunked","created_by","cross_join","","cross_join_dfs","cum_count","","cum_fold_exprs","cum_max","","cum_min","","cum_prod","","cum_reduce_exprs","cum_sum","","cumulative_eval","data_page_size","datatypes","date_format","date_ranges","datetime","","datetime_format","datetime_range","datetime_ranges","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","day","","","","days","","","days_only","ddof","","decimal_comma","decrement_strong_count","decrement_strong_count_in","default","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","default_arrays","default_join_ids","deref","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","deref_mut","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","descending","","","describe","describe_optimized_plan","describe_optimized_plan_tree","describe_plan","describe_plan_tree","describe_tree_format","description","deserialize","df","","diagonal","diff","","","difference","display","distinct_count","","div","","divide","dot","downcast","downcast_unchecked","downgrade","drop","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","drop_nans","drop_no_validate","drop_nulls","","","dst_offset","dt","","dtype","","","","","","","dtype_col","dtype_cols","dtype_overwrite","duration","empty","","encode_hex","encode_hex_upper","encoding","ends_with","ends_with_chunked","ensure_duration_matches_dtype","ensure_is_constant_duration","ensure_matching_schema","ensure_sorted_arg","eol_char","eq","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","eq_missing","equal","equal_missing","equivalenteval","every","exact","exclude","exclude_dtype","execute","expand_paths","expand_paths_hive","expanded_from_single_directory","explain","explode","","","explode_and_offsets","expr","extend","extend_constant","extract","","extract_all","extract_all_many","extract_groups","fast_explode","fetch","","fetch_blocking","field","","field_by_index","field_by_name","field_by_names","fields","fields_to_cast","fill_nan","","fill_null","","","fill_null_with_strategy","fill_null_with_values","filter","","","","find","find_chunked","find_literal","finish","","","","","","","","","","","","","","","","","","","","finish_no_glob","","","finish_with_scan_ops","finishes_this_batch","first","","","","fixed_size_list","flatten","float_precision","float_scientific","float_sorted_arg_max","float_type","floor","","floor_div","floor_div_series","flush","fmt","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fmt_group_by_column","fmt_str","fn_params","","fold_exprs","force_parallel","","format","format_str","forward_fill","fromfrom_arrow_schema","from_bits","from_bits_retain","","from_bits_truncate","from_data_default","from_data_unchecked_default","","from_iter","","","","from_iter_binary_trusted_len","from_iter_binview_trusted_len","from_iter_bool_trusted_len","from_iter_options","from_iter_primitive_trusted_len","from_iter_trusted_length","","from_iter_utf8_trusted_len","from_iter_values","from_name","from_par_iter","","from_partitioned_ds","from_path","from_raw","from_raw_in","from_slice","from_slice_options","from_str","from_trusted_len_iter_rev","","from_type","from_vec","","from_zeroable_vec","full","","","","full_join","","full_null","","","fun","function_expr","function_with_options","gather","","gather_every","ge","get","","","","","get_any_value","","get_any_value_unchecked","","get_categories","get_current_optimizations","get_datatype","get_dtype","get_earliest_bounds_ms","get_earliest_bounds_ns","get_earliest_bounds_us","get_field","","","get_fields","get_fields_lens","get_glob_start_idx","get_metadata","","get_mut","get_mut_unchecked","get_object","get_object_chunked_unchecked","get_output","get_overlapping_bounds_iter","get_parse_options","get_reader_bytes","get_schema","get_unchecked","","","glob","","","group_by","group_by_dynamic","","group_by_stable","group_by_values","group_by_windows","group_tuples","gt","","","gt_eq","","has_header","has_nulls","hash","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hash_join_inner","hash_join_outer","head","","","hex_decode","hex_encode","hive_options","","hor_str_concat","hour","","","","hours","","how","","idx","ignore_errors","impl_duration","impl_replace_time_zone","impl_replace_time_zone_fast","implode","in_nanoseconds_window","include_bom","","include_boundaries","include_file_paths","","include_header","","increment_strong_count","increment_strong_count_in","index","","index_cols","index_column","","indexes_to_usizes","infer_file_schema","infer_schema_len","","infer_schema_length","","init","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","inner","inner_array","inner_join","","inner_mut","input_fields","insert","int_range","int_ranges","interpol","interpolate","","","interpolate_by","","","intersection","intersects","into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","into_column","","","into_data","into_inner","","into_iter","","","","","into_list_name_space","","into_raw","into_raw_with_allocator","into_reader_with_file_handle","into_scalar","into_series","","","into_vec","","is_all","is_arithmetic","is_asof","is_between","","is_cloud_url","is_comparison","is_constant_duration","is_empty","","","is_finished","is_finite","is_first_distinct","","","is_full","is_full_days","is_in","","is_infinite","is_last_distinct","","","is_leap_year","","","is_nan","","is_not_nan","is_not_null","","","is_null","","","","","is_null_idx","is_nullable","is_positive_idx_uncertain","is_read_vectored","is_scalar","is_series","is_sorted","is_tty","is_valid_bit_pattern","is_valid_join","is_write_vectored","is_zero","iso_year","","","iter","","","iter_fields","iter_names","iter_names_and_dtypes","join","","","","join_asof_by","join_builder","join_literal","join_many","join_nulls","","join_where","json_encode","keep","key_value_metadata","","label","last","","","","","lazy","","le","left_by","left_join","","left_on","legacy_div","legacy_div_scalar","legacy_div_scalar_lhs","len","","","","","limit","","line_terminator","list","lit","","","","","","logical_and","logical_or","logical_plan","","low_memory","","","","","lower_bound","lst_arg_max","lst_arg_min","lst_concat","lst_diff","lst_get","lst_join","lst_lengths","lst_max","lst_mean","lst_median","lst_min","lst_n_unique","lst_reverse","lst_shift","lst_slice","lst_sort","lst_std","lst_sum","lst_unique","lst_unique_stable","lst_var","lt","","","lt_eq","","maintain_order","","","","","","make_categoricals_compatible","make_list_categoricals_compatible","make_mut","map","","","map_binary","map_children","map_datetime_dtype_timezone","map_dtype","","map_dtypes","map_expr","map_field","map_fields","","map_list","map_list_multiple","map_many","map_many_private","map_multiple","map_numeric_to_float_dtype","map_parse_options","map_to_float_dtype","map_to_list_and_array_inner_dtype","map_to_list_supertype","map_to_supertype","materialize","materialize_empty_df","materialize_projection","max","","","","","","max_reduce","","max_row_group_height","max_value","","mean","","","","","","median","","","","","","","median_reduce","","memory_mapped","merge_dtypes","metadata","method","microsecond","microseconds","","millennium","milliseconds","","min","","","","","","min_max","min_periods","","","min_reduce","","min_value","","minute","","","","minutes","","missing_is_null","mode","","month","","","","months","months_only","mul","","","multiply","multithreaded","","n_chunks","n_rows","","","","","","","","n_threads","","n_unique","","","","","name","","","","","","nan_max","nan_min","nan_propagating_aggregate","nanosecond","","","nanoseconds","","","ne","needs_checks","neg","","negate","negate_bitwise","negative","negative_to_usize","neq","neq_missing","nested_sum_type","new","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","new_cyclic","new_empty","new_from_index","","new_from_str","new_in","new_int_range","new_multi","new_null","new_paths","","new_single","new_uninit","new_uninit_in","new_uninit_slice","new_uninit_slice_in","new_with_sources","","new_zeroed","new_zeroed_in","new_zeroed_slice","new_zeroed_slice_in","next","","next_batch","next_batches","","","nodes","nodes_owned","not","","","not_equal","not_equal_missing","nth","null","","","","null_count","","","","","null_values","nulls_last","","num_rows","","offset","","","offsets","on","","","optimize","options","or","ordinal","","ordinal_day","ordinal_year","otherwise","","output_schema","over","over_with_options","overwrite_schema","parallel","","","parse","parse_from_str_slice","","","parse_options","parsed_int","partial_cmp","","path","period","","pi","pin","pin_in","polars_bail","polars_ensure","polars_err","polars_warn","pow","predicate","prefix","prefix_fields","private_left_join_multiple_keys","prob","prod_reduce","product","profile","projection","propagate_nulls","provide","ptr_eq","quantile","","","","quantile_reduce","","quarter","","","queue","quote_char","","quote_style","raise_if_empty","rank","","read","read_buf","read_parallel","read_to_end","read_to_string","read_varint","read_vectored","rechunk","","","","","","","","reduce_exprs","reinterpret_signed","reinterpret_unsigned","rem","","remainder","remove","remove_bom","rename","","rename_fields","repeat","repeat_by","","replace","","","replace_all","replace_dtype","replace_literal","replace_literal_all","replace_or_default","replace_strict","","replace_time_zone","reshape","resolve_homedir","return_type","reverse","","","","","","right_by","right_on","rolling","","","rolling_map","","","rolling_map_float","rolling_max","","rolling_max_by","","rolling_mean","","rolling_mean_by","","rolling_median","rolling_median_by","rolling_min","","rolling_min_by","","rolling_quantile","","rolling_quantile_by","","rolling_std","","rolling_std_by","","rolling_sum","","rolling_sum_by","","rolling_var","","rolling_var_by","","round","","","round_ms","round_ns","round_sig_figs","","round_us","row_group_size","row_groups","row_index","","","","","","","rows_left","rows_right","same_type","","sample_frac","sample_n","sample_size","scan","scan_ipc","scan_ipc_files","scan_ipc_sources","scan_parquet","scan_parquet_files","scan_parquet_sources","scatter","scatter_single","scatter_with","schema","","","","","","","","","schema_descr","schema_inference","schema_only","schema_overwrite","schema_with_arenas","search_sorted","second","","","","seconds","","seek","select","select_seq","separator","","serialize_options","series","set","","set_cached_arena","set_low_memory","set_parallel","set_rechunk","","","","","set_sorted_flag","set_validity","shift","","","","","","shift_and_fill","","","should_coalesce","shrink_dtype","shrink_to_fit","","shuffle","sink_csv","sink_ipc","sink_json","sink_parquet","size_bytes","skip_rows","","","skip_rows_after_header","slice","","","","","","","slice_typed","","slice_typed_unchecked","","slice_unchecked","","sliced","sliced_unchecked","sort","","","","","","sort_by","sort_by_exprs","sort_with","","source","sources","","","split","split_at","split_at_boxed","split_at_boxed_unchecked","split_exact","split_exact_inclusive","split_helper","split_inclusive","split_to_struct","splitn","sqrt","start_by","starts_with","starts_with_chunked","statistics","std","","","","","","std_reduce","","store","str","str_head","str_join","str_len_bytes","str_len_chars","str_reverse","str_slice","str_tail","strategy","strftime","strict","strict_cast","strings","strip_chars","","strip_chars_end","","strip_chars_start","","strip_prefix","","strip_suffix","","strong_count","struct_","sub","","","","sub_assign","subtract","suffix","","","","suffix_fields","sum","","","","","","sum_reduce","","super_type","swap_operands","symmetric_difference","sync_update","tail","","","","take","","take_chunked_unchecked","take_opt_chunked_unchecked","take_slice","take_slice_unchecked","take_unchecked","","take_validity","ternary_expr","then","","time_format","time_ranges","time_unit","","time_zone","timestamp","to_alp","","to_alp_optimized","to_any_value","to_array","to_arrow","to_boxed","to_byte_slices","to_dot","to_dummies","","to_field","to_integer","to_list","to_lowercase","","to_opt","to_owned","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","to_physical","to_physical_type","to_string","","","","","","","","","","","","","","to_supertype","to_supertypes","to_titlecase","to_uppercase","","to_writer","","toggle","tolerance","tolerance_str","top_k","tot_eq_kernel","tot_eq_kernel_broadcast","tot_ne_kernel","tot_ne_kernel_broadcast","true_div","true_div_scalar","true_div_scalar_lhs","truncate","truncate_impl","truncate_ms","","truncate_ns","","truncate_ragged_lines","truncate_us","","try_arr_from_iter","","","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","","","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_collect_ca","try_collect_ca_like","try_collect_ca_trusted","try_collect_ca_trusted_like","try_collect_ca_trusted_with_dtype","try_collect_ca_with_dtype","try_from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","try_from_thrift","try_get_field","try_into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","try_into_reader_with_file_path","try_map_dtype","try_map_dtypes","try_map_expr","try_map_field","try_negative_to_usize","try_new","","","","","try_new_in","try_new_uninit","try_new_uninit_in","try_new_zeroed","try_new_zeroed_in","try_parse_dates","try_pin","try_pin_in","try_serialize","","","try_to_compact_string","","","","","","","","","","","","","try_unwrap","type_id","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","type_name","udf","union","unique","","","","","","unique_generic","unique_stable","","","","unique_stable_generic","unnest","unwrap","unwrap_or_clone","update","update_with_inference_result","upper_bound","upsample","upsample_stable","use_statistics","","","utf8","validate","validation","validity","","value","","value_counts","","value_name","","value_unchecked","values","values_iter","","var","","","","","","var_reduce","","variable_name","","vec_hash","vec_hash_combine","version","view","vzip","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","weak_count","week","","","weekday","","","weeks","","weeks_only","weights","when","","","window_size","","","with","with_ambiguous","with_batch_size","","","with_cache","with_capacity","","with_chunk_size","","with_cloud_options","","with_cluster_with_columns","with_coalesce","with_column","with_columns","","","","","","with_columns_seq","with_comment_prefix","","with_compat_level","","with_compression","","","","with_context","with_data_page_size","with_date_format","with_datetime_format","with_day","with_days","with_decimal_comma","","with_dtype","with_dtype_overwrite","","with_encoding","","with_eol_char","","with_extension","with_fields","with_float_precision","with_float_scientific","with_fractional_seconds","with_glob","with_has_header","","with_hive_partition_columns","","with_hms","","with_hour","with_hours","with_ignore_errors","","","","","with_include_file_path","","with_include_file_paths","","with_infer_schema_length","","","with_json_format","","with_line_terminator","with_low_memory","","with_metadata","with_microsecond","with_microseconds","with_milliseconds","with_minute","with_minutes","with_missing_is_null","","with_month","with_n_rows","","","","","","","","","with_n_threads","","with_nanoseconds","with_null_value","with_null_values","","with_optimizations","with_parse_options","with_path","","with_paths","with_predicate","","with_predicate_pushdown","with_projection","","","","","","with_projection_pushdown","with_quote_char","","","with_quote_style","with_raise_if_empty","","with_rechunk","","","","","with_row_estimate","with_row_group_size","with_row_index","","","","","","","","","","","with_same_dtype","with_sample_size","with_schema","","","","","with_schema_modify","with_schema_overwrite","","","","with_second","with_seconds","with_separator","","","with_simplify_expr","with_skip_rows","","with_skip_rows_after_header","","with_slice","with_slice_pushdown","with_sources","","","with_statistics","with_suffix","with_time_format","with_time_unit","with_time_zone","with_truncate_ragged_lines","","with_try_parse_dates","","with_type_coercion","with_validity","","with_validity_typed","","with_weeks","with_year","without_optimizations","wrapping_abs","wrapping_add","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul_scalar","wrapping_neg","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","write","write_df_to_file","","write_partitioned_dataset","write_varint","write_vectored","xor","year","","","","zip","zip_with","expr","input","","interpol","propagate_nans","","quantile","closed","ignore_nulls","","aggs","apply","args","by_column","contexts","df","dsl","expr","exprs","file_info","file_options","function","id","input","","","","","","","","","","","input_left","input_right","inputs","","keys","left_on","len","maintain_order","node","offset","options","","","","","","payload","predicate","predicates","right_on","scan_type","schema","slice","sort_options","sources","version","by","","dtype","expr","","","","","falsy","function","","","","idx","input","","","","left","length","offset","op","options","","","","","order_by","output_type","partition_by","predicate","returns_scalar","right","sort_options","truthy","decimals","digits","has_max","has_min","limit","","method","n","name","normalize","offset","options","parallel","return_dtype","reverse","","","","","seed","","sort","include_nulls","groups","rolling","dtype","high","low","error","","msg","","delimiter","","dtype","ignore_nulls","","inclusive","literal","","","n","","pat","strict","","time_unit","time_zone","Auto","Post","Pre","PrefilterMaskSetting","borrow","borrow_mut","calc_prefilter_cost","deref","deref_mut","drop","from","init","init_from_env","into","read_this_row_group","should_prefilter","to_deserializer","try_from","try_into","type_id","vzip","AggList","TakeExtremum","_agg_helper_idx","_agg_helper_idx_no_null","_agg_helper_slice","_agg_helper_slice_no_null","_rolling_apply_agg_window_no_nulls","_rolling_apply_agg_window_nulls","_slice_from_offsets","_use_rolling_kernels","agg_list","take_max","take_min","BinaryFnMut","Ret","","","TernaryFnMut","UnaryFnMut","apply_binary_kernel_broadcast","apply_binary_kernel_broadcast_owned","binary","binary_elementwise","binary_elementwise_for_each","binary_elementwise_into_string_amortized","binary_elementwise_values","binary_mut_values","binary_mut_with_options","binary_owned","binary_to_series","binary_unchecked_same_type","broadcast_binary_elementwise","broadcast_binary_elementwise_values","broadcast_try_binary_elementwise","ternary_elementwise","try_binary","try_binary_elementwise","try_binary_mut_with_options","try_binary_unchecked_same_type","try_ternary_elementwise","try_unary_elementwise","try_unary_elementwise_values","try_unary_mut_with_options","unary_elementwise","unary_elementwise_values","unary_kernel","unary_kernel_owned","unary_mut_values","unary_mut_with_options","ArrayNameSpace","AsArray","array_arg_max","array_arg_min","array_get","array_join","array_max","array_median","array_min","array_n_unique","array_reverse","array_shift","array_sort","array_std","array_sum","array_unique","array_unique_stable","array_var","as_array","BinaryNameSpace","borrow","borrow_mut","contains_literal","deref","deref_mut","drop","ends_with","from","init","into","size_bytes","starts_with","try_from","try_into","type_id","vzip","Boolean","Buffer","Categorical","CategoricalField","Date","Datetime","DatetimeField","DecimalFloat32","DecimalFloat64","Float32","Float64","Int16","Int32","Int64","Int8","UInt16","UInt32","UInt64","UInt8","Utf8","Utf8Field","add","add_null","borrow","","","","borrow_mut","","","","deref","","","","deref_mut","","","","drop","","","","dtype","from","","","","init","","","","init_buffers","into","","","","into_series","try_from","","","","try_into","","","","type_id","","","","vzip","","","","buf","time_unit","time_zone","CategoricalNameSpace","DateMethods","DatetimeMethods","DurationMethods","RollingOptionsDynamicWindow","SeriesOpsTime","StringMethods","TimeMethods","as_date","as_date_not_exact","as_datetime","as_datetime_not_exact","as_time","closed_window","day","","days","fn_params","hour","","hours","is_leap_year","","iso_year","","microseconds","milliseconds","min_periods","minute","","minutes","month","","nanosecond","","nanoseconds","ordinal","","parse_from_str_slice","","","quarter","","rolling_max","rolling_max_by","rolling_mean","rolling_mean_by","rolling_min","rolling_min_by","rolling_quantile","rolling_quantile_by","rolling_std","rolling_std_by","rolling_sum","rolling_sum_by","rolling_var","rolling_var_by","second","","seconds","string","week","","weekday","window_size","year","","AsString","DateDMY","DateYMD","DatetimeDMY","DatetimeYMD","DatetimeYMDZ","Pattern","StringMethods","__clone_box","as_date","as_date_not_exact","as_datetime","as_datetime_not_exact","as_string","as_time","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","eq","equivalent","","","fmt","from","hash","infer","init","into","is_inferable","to_owned","try_from","try_into","type_id","vzip","DatetimeInfer","Error","StrpTimeParser","TryFromWithUnit","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","from","infer_pattern_single","init","into","logical_type","parse","parse_bytes","","","pattern","to_owned","try_from","try_from_with_unit","","","try_into","type_id","vzip","Aws","Azure","CloudOptions","CloudType","File","Gcp","Hf","Http","__clone_box","borrow","","borrow_mut","","clone","clone_into","clone_to_uninit","default","deref","","deref_mut","","drop","","eq","","equivalent","","","fmt","from","","from_str","from_untyped_config","hash","init","","into","","max_retries","options","to_owned","try_from","","try_into","","type_id","","vzip","","with_max_retries","Aws","Azure","CloudOptions","CloudType","File","Gcp","Hf","Http","max_retries","GZIP","SupportedCompression","ZLIB","ZSTD","borrow","borrow_mut","check","deref","deref_mut","drop","from","init","into","maybe_decompress_bytes","try_from","try_into","type_id","vzip","Any","AnyValue","Array","","","ArrayChunked","ArrayCollectIterExt","ArrayFromIter","ArrayFromIterDtype","ArrowDataType","ArrowTimeUnit","AsRefDataType","Binary","","","BinaryChunked","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryView","Boolean","","","BooleanChunked","BooleanType","CatIter","Categorical","","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","CategoricalOwned","CategoricalType","CompatLevel","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataType","Date","","Date32","Date64","DateChunked","DateType","Datetime","","DatetimeChunked","DatetimeOwned","DatetimeType","Decimal","","","Decimal256","DecimalChunked","DecimalType","Dictionary","Duration","","","DurationChunked","DurationType","Enum","","EnumOwned","Extension","FalseT","Field","FieldRef","FixedSizeBinary","FixedSizeList","FixedSizeListType","Float","Float16","Float32","","","Float32Chunked","Float32Type","Float64","","","Float64Chunked","Float64Type","GetAnyValue","Global","GlobalRevMapMerger","HasViews","HashMap","","IDX_DTYPE","IdxArr","IdxCa","IdxType","InitHashMaps","InitHashMaps2","Int","Int128Chunked","Int128Type","Int16","","","Int16Chunked","Int16Type","Int32","","","Int32Chunked","Int32Type","Int64","","","Int64Chunked","Int64Type","Int8","","","Int8Chunked","Int8Type","Interval","IntoScalar","IsNested","IsObject","IsStruct","LargeBinary","LargeList","LargeUtf8","Lexical","List","","","ListChunked","ListType","Local","Logical","LogicalType","Map","Microsecond","Microseconds","Millisecond","Milliseconds","Nanosecond","Nanoseconds","Native","Null","","","NumericNative","Object","","ObjectChunked","ObjectOwned","ObjectType","OwnedObject","OwnedPhysical","Physical","","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","PlRandomState","PlSmallStr","PolarsDataType","PolarsFloatType","PolarsIntegerType","PolarsNumericType","PolarsType","RevMapping","Second","StaticArray","Str","String","","StringChunked","StringOwned","StringType","Struct","","","StructOwned","StructType","Time","","Time32","Time64","TimeChunked","TimeType","TimeUnit","TimeZone","Timestamp","TrueDivPolarsType","TrueT","UInt16","","","UInt16Chunked","UInt16Type","UInt32","","","UInt32Chunked","UInt32Type","UInt64","","","UInt64Chunked","UInt64Type","UInt8","","","UInt8Chunked","UInt8Type","Union","Unknown","","UnknownKind","Utf8","Utf8View","ValueIterT","ValueT","ZeroablePhysical","ZeroableValueT","arr_from_iter","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_ref_dtype","as_slice","call_categorical_merge_operation","cast","cast_with_options","categorical","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","create_enum_dtype","dtype","","finish","from_vec","from_zeroable_vec","full","full_null","get","get_any_value","get_any_value_unchecked","get_dtype","get_unchecked","","into_scalar","iter","last","make_categoricals_compatible","make_list_categoricals_compatible","merge_dtypes","name","new","","try_arr_from_iter","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","value","value_unchecked","values_iter","with_capacity","","with_validity_typed","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","Global","GlobalRevMapMerger","Lexical","Local","Physical","RevMapping","call_categorical_merge_operation","finish","make_categoricals_compatible","make_list_categoricals_compatible","revmap","string_cache","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","StringCacheHolder","disable_string_cache","enable_string_cache","using_string_cache","impl_replace_time_zone","impl_replace_time_zone_fast","replace_time_zone","FromData","FromDataBinary","FromDataUtf8","from_data_default","from_data_unchecked_default","","DateLikeNameSpace","base_utc_offset","borrow","borrow_mut","cast_time_unit","century","combine","convert_time_zone","date","datetime","day","deref","deref_mut","drop","dst_offset","from","hour","init","into","is_leap_year","iso_year","microsecond","millennium","millisecond","minute","month","nanosecond","ordinal_day","quarter","replace_time_zone","round","second","strftime","time","timestamp","to_string","total_days","total_hours","total_microseconds","total_milliseconds","total_minutes","total_nanoseconds","total_seconds","truncate","try_from","try_into","type_id","vzip","week","weekday","with_time_unit","year","PhysicalAggExpr","evaluate","root_name","AnonymousBuilder","borrow","borrow_mut","default","deref","deref_mut","drop","finish","from","init","into","is_empty","new","push","push_null","try_from","try_into","type_id","vzip","width","float_arg_max_sorted_ascending","float_arg_max_sorted_descending","Abs","All","AllHorizontal","Any","AnyHorizontal","ArgUnique","ArgWhere","ArrayExpr","AsStruct","BackwardFill","Base64Encode","BaseUtcOffset","BinaryExpr","Boolean","BooleanFunction","CastTimeUnit","Categorical","CategoricalFunction","Cbrt","Ceil","Century","Clip","Coalesce","Combine","ConcatExpr","ConcatHorizontal","ConcatVertical","Contains","ConvertTimeZone","CountMatches","CumCount","CumMax","CumMin","CumProd","CumSum","DSTOffset","Date","Datetime","DatetimeFunction","Day","Diff","DropNans","DropNulls","Duration","EndsWith","ExtendConstant","Extract","ExtractAll","ExtractGroups","FieldByIndex","FieldByName","FillNull","FillNullWithStrategy","Find","Floor","ForwardFill","FunctionExpr","GatherEvery","Generic","GetCategories","Head","HexEncode","Hour","Interpolate","InterpolateBy","IsBetween","IsFinite","IsFirstDistinct","IsIn","IsInfinite","IsLastDistinct","IsLeapYear","IsNan","IsNotNan","IsNotNull","IsNull","IsoYear","JsonEncode","LenBytes","LenChars","ListExpr","LowerBound","Lowercase","MaxHorizontal","MeanHorizontal","Microsecond","Millennium","Millisecond","MinHorizontal","Minute","Mode","Month","MultipleFields","Nanosecond","Negate","Not","NullCount","OrdinalDay","Pow","PowFunction","PrefixFields","Quarter","Random","Range","Rank","RenameFields","RepeatBy","Replace","","ReplaceStrict","ReplaceTimeZone","Reshape","Reverse","","RollingExpr","RollingExprBy","Round","","RoundSF","Second","SetSortedFlag","Shift","ShiftAndFill","ShrinkType","Slice","Split","SplitExact","SplitN","Sqrt","StartsWith","StringExpr","StringFunction","StripChars","StripCharsEnd","StripCharsStart","StripPrefix","StripSuffix","Strptime","StructExpr","StructFunction","SuffixFields","SumHorizontal","Tail","TemporalExpr","TemporalFunction","Time","TimeStamp","Titlecase","ToDecimal","ToInteger","ToPhysical","ToString","TotalDays","TotalHours","TotalMicroseconds","TotalMilliseconds","TotalMinutes","TotalNanoseconds","TotalSeconds","Truncate","Unique","UpperBound","Uppercase","ValueCounts","Week","WeekDay","WithFields","WithTimeUnit","Year","cat","pow","rolling","rolling_by","closed","ignore_nulls","","decimals","digits","has_max","has_min","limit","","method","n","name","normalize","offset","options","parallel","return_dtype","reverse","","","","","seed","","sort","delimiter","","dtype","ignore_nulls","","inclusive","literal","","","n","","pat","strict","","time_unit","time_zone","CategoricalFunction","GetCategories","Cbrt","Generic","PowFunction","Sqrt","Max","Mean","Min","Quantile","RollingFunction","Std","Sum","Var","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","eq","fmt","","from","hash","init","into","to_owned","to_string","try_from","try_into","try_to_compact_string","type_id","vzip","MaxBy","MeanBy","MinBy","QuantileBy","RollingFunctionBy","StdBy","SumBy","VarBy","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","eq","fmt","","from","hash","init","into","to_owned","to_string","try_from","try_into","try_to_compact_string","type_id","vzip","_update_gather_sorted_flag","check_bounds_ca","check_bounds_nulls","InterpolationMethod","Linear","Nearest","interpolate","interpolate_by","mode","ca_nan_agg","group_agg_nan_max_s","group_agg_nan_min_s","nan_max_s","nan_min_s","MutableNullArray","__clone_box","as_any","as_box","as_mut_any","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","dtype","extend_nulls","fmt","from","init","into","len","new","push_null","reserve","shrink_to_fit","to_owned","try_from","try_into","type_id","validity","vzip","SchemaInferenceResult","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","finish_infer_field_schema","fmt","from","get_estimated_n_rows","get_inferred_schema","infer_field_schema","infer_file_schema","init","into","to_owned","try_from","try_from_reader_bytes_and_options","try_into","type_id","vzip","with_inferred_schema","Any","Left","Right","SearchSortedSide","binary_search_ca","lower_bound_chunks","AsSeries","TemporalMethods","as_series","century","day","hour","is_leap_year","iso_year","millennium","minute","month","nanosecond","ordinal_day","ordinal_year","quarter","second","strftime","timestamp","to_string","week","weekday","year","SlicedArray","_broadcast_bools","arg_bottom_k","arg_sort_multiple","options","slice_typed","slice_typed_unchecked","_arg_bottom_k","_get_rows_encoded","_get_rows_encoded_arr","_get_rows_encoded_ca","_get_rows_encoded_ca_unordered","_get_rows_encoded_compat_array","_get_rows_encoded_unordered","encode_rows_vertical_par_unordered","encode_rows_vertical_par_unordered_broadcast_nulls","SlicedArray","SortMultipleOptions","SortOptions","descending","","maintain_order","","multithreaded","","nulls_last","","slice_typed","slice_typed_unchecked","AsString","SplitNChars","StringNameSpaceImpl","as_string","base64_decode","base64_encode","concat","contains","contains_chunked","contains_literal","count_matches","count_matches_many","extract","extract_all","extract_all_many","extract_groups","find","find_chunked","find_literal","hex_decode","hex_encode","hor_str_concat","replace","replace_all","replace_literal","replace_literal_all","split","split_exact","split_exact_inclusive","split_helper","split_inclusive","split_to_struct","splitn","str_head","str_join","str_len_bytes","str_len_chars","str_reverse","str_slice","str_tail","strip_chars","","strip_chars_end","","strip_chars_start","","strip_prefix","","strip_suffix","","to_integer","to_lowercase","to_titlecase","to_uppercase","UserDefinedFunction","fun","input_fields","name","options","return_type","BinaryFromIter","Utf8FromIter","from_values_iter","","Ascending","BitRepr","ChunkCompare","Descending","IntoSeries","IsSorted","Item","Large","Not","Series","SeriesIter","SeriesPhysIter","SeriesTrait","Small","__clone_box","","_sum_as_f64","_try_from_arrow_unchecked","_try_from_arrow_unchecked_with_md","add","","","","amortized_iter","append","arg_max","arg_min","arg_sort","arg_unique","arithmetic","array","array_ref","as_any","as_any_mut","as_list","as_mut","as_ref","","as_series","","as_single_ptr","","binary","binary_offset","bitand","bitor","bitxor","bool","borrow","","","","borrow_mut","","","","cast","","cast_unchecked","cast_with_options","categorical","checked_div","","checked_div_num","chunk_lengths","","chunks","chunks_mut","","clear","clone","","clone_inner","clone_into","","clone_to_uninit","","compute_len","date","datetime","decimal","default","deref","","","","","deref_mut","","","","div","","","","drop","","","","drop_nulls","dtype","duration","eq","","equal","","","","equal_missing","","","","equals","equals_missing","equivalent","","","estimated_size","explode","extend","extend_constant","f32","f64","field","fill_null","filter","fmt","","","fmt_list","from","","","","","","","","","","from_any_values","from_any_values_and_dtype","from_arrow","from_arrow_chunks","from_chunks_and_dtype_unchecked","from_iter","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","from_vec","","","","","","","","","","","full_null","gather_every","get","get_data_ptr","get_flags","get_leaf_array","get_metadata","get_object","get_object_chunked_unchecked","get_unchecked","gt","","","","gt_eq","","","","has_nulls","hash","head","i16","i32","i64","i8","idx","implementations","implode","init","","","","into","","","","into_column","into_frame","into_iter","into_series","","is_empty","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_series","","is_sorted_flag","iter","iter_chunks","len","","limit","list","lit","lt","","","","lt_eq","","","","max","max_reduce","mean","mean_reduce","median","median_reduce","min","min_reduce","mul","","","","n_chunks","","n_unique","name","new","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","new_empty","new_from_index","new_null","next","not_equal","","","","not_equal_missing","","","","null","null_count","ops","phys_iter","product","quantile_reduce","rechunk","rem","","","rename","","reshape_array","reshape_list","reverse","","rolling_map","sample_frac","sample_n","select_chunk","set_sorted_flag","shift","shrink_to_fit","","shuffle","size_hint","slice","","sort","sort_with","split_at","","std","std_reduce","str","str_value","strict_cast","struct_","sub","","","","sum","sum_reduce","","tail","take","take_chunked_unchecked","take_opt_chunked_unchecked","take_slice","take_slice_unchecked","take_unchecked","take_unchecked_from_slice","time","to_arrow","to_dummies","to_float","to_owned","","to_physical_repr","to_string","try_add_owned","try_from","","","","","","","","try_into","","","","try_mul_owned","try_new","try_set_metadata","try_sub_owned","try_to_compact_string","type_id","","","","u16","u32","u64","u8","unique","unique_stable","unpack","var","var_reduce","vzip","","","","with_name","wrapping_trunc_div_scalar","zip_with","AmortSeries","ArrayBox","__clone_box","as_ref","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deep_clone","deref","deref_mut","drop","from","init","into","new","swap","to_owned","try_from","try_into","type_id","vzip","with_array","LhsNumOps","NumOpsDispatch","NumOpsDispatchInner","Output","_struct_arithmetic","add","add_to","","checked","div","divide","","mul","multiply","","rem","remainder","","sub","subtract","","NumOpsDispatchChecked","NumOpsDispatchCheckedInner","checked_div","","checked_div_num","","Drop","Ignore","NullBehavior","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","","","fmt","from","hash","init","into","to_owned","try_from","try_into","type_id","vzip"],"q":[[0,"polars"],[17,"polars::chunked_array"],[858,"polars::chunked_array::arithmetic"],[886,"polars::chunked_array::builder"],[1147,"polars::chunked_array::builder::list"],[1164,"polars::chunked_array::cast"],[1193,"polars::chunked_array::collect"],[1207,"polars::chunked_array::float"],[1209,"polars::chunked_array::from_iterator_par"],[1213,"polars::chunked_array::iterator"],[1268,"polars::chunked_array::iterator::par"],[1270,"polars::chunked_array::metadata"],[1553,"polars::chunked_array::object"],[1630,"polars::chunked_array::object::builder"],[1653,"polars::chunked_array::object::registry"],[1681,"polars::chunked_array::ops"],[1887,"polars::chunked_array::ops::arity"],[1923,"polars::chunked_array::ops::float_sorted_arg_max"],[1925,"polars::chunked_array::ops::gather"],[1928,"polars::chunked_array::ops::search_sorted"],[1958,"polars::chunked_array::ops::sort"],[1965,"polars::chunked_array::ops::sort::arg_bottom_k"],[1966,"polars::chunked_array::ops::sort::arg_sort_multiple"],[1974,"polars::chunked_array::ops::sort::options"],[1987,"polars::chunked_array::temporal"],[1995,"polars::chunked_array::temporal::conversion"],[1998,"polars::datatypes"],[3455,"polars::datatypes::categorical"],[3472,"polars::datatypes::categorical::revmap"],[3478,"polars::datatypes::categorical::string_cache"],[3497,"polars::docs"],[3499,"polars::error"],[3591,"polars::error::PolarsError"],[3595,"polars::error::constants"],[3598,"polars::frame"],[3871,"polars::frame::column"],[4086,"polars::frame::explode"],[4115,"polars::frame::group_by"],[4354,"polars::frame::group_by::GroupByMethod"],[4355,"polars::frame::group_by::GroupsProxy"],[4357,"polars::frame::group_by::aggregations"],[4370,"polars::frame::group_by::expr"],[4373,"polars::frame::row"],[4483,"polars::functions"],[4485,"polars::prelude"],[9734,"polars::prelude::AggExpr"],[9741,"polars::prelude::BooleanFunction"],[9744,"polars::prelude::DslPlan"],[9794,"polars::prelude::Expr"],[9829,"polars::prelude::FunctionExpr"],[9851,"polars::prelude::GroupByMethod"],[9852,"polars::prelude::GroupsProxy"],[9854,"polars::prelude::LiteralValue"],[9857,"polars::prelude::PolarsError"],[9861,"polars::prelude::StringFunction"],[9875,"polars::prelude::TemporalFunction"],[9877,"polars::prelude::_internal"],[9898,"polars::prelude::aggregations"],[9911,"polars::prelude::arity"],[9947,"polars::prelude::array"],[9966,"polars::prelude::binary"],[9983,"polars::prelude::buffer"],[10057,"polars::prelude::buffer::Buffer"],[10060,"polars::prelude::cat"],[10061,"polars::prelude::chunkedarray"],[10127,"polars::prelude::chunkedarray::string"],[10166,"polars::prelude::chunkedarray::string::infer"],[10197,"polars::prelude::cloud"],[10247,"polars::prelude::cloud::options"],[10256,"polars::prelude::compression"],[10274,"polars::prelude::datatypes"],[10550,"polars::prelude::datatypes::categorical"],[10567,"polars::prelude::datatypes::categorical::revmap"],[10573,"polars::prelude::datatypes::categorical::string_cache"],[10577,"polars::prelude::datetime"],[10580,"polars::prelude::default_arrays"],[10586,"polars::prelude::dt"],[10638,"polars::prelude::expr"],[10641,"polars::prelude::fixed_size_list"],[10661,"polars::prelude::float_sorted_arg_max"],[10663,"polars::prelude::function_expr"],[10836,"polars::prelude::function_expr::BooleanFunction"],[10839,"polars::prelude::function_expr::FunctionExpr"],[10861,"polars::prelude::function_expr::StringFunction"],[10875,"polars::prelude::function_expr::TemporalFunction"],[10877,"polars::prelude::function_expr::cat"],[10879,"polars::prelude::function_expr::pow"],[10883,"polars::prelude::function_expr::rolling"],[10914,"polars::prelude::function_expr::rolling_by"],[10945,"polars::prelude::gather"],[10948,"polars::prelude::interpolate"],[10952,"polars::prelude::interpolate_by"],[10953,"polars::prelude::mode"],[10954,"polars::prelude::nan_propagating_aggregate"],[10959,"polars::prelude::null"],[10990,"polars::prelude::schema_inference"],[11017,"polars::prelude::search_sorted"],[11023,"polars::prelude::series"],[11045,"polars::prelude::sort"],[11052,"polars::prelude::sort::arg_bottom_k"],[11053,"polars::prelude::sort::arg_sort_multiple"],[11061,"polars::prelude::sort::options"],[11074,"polars::prelude::strings"],[11128,"polars::prelude::udf"],[11134,"polars::prelude::utf8"],[11138,"polars::series"],[11577,"polars::series::amortized_iter"],[11601,"polars::series::arithmetic"],[11622,"polars::series::arithmetic::checked"],[11628,"polars::series::ops"],[11655,"dyn_clone::sealed"],[11656,"polars_core::datatypes"],[11657,"polars_core::chunked_array"],[11658,"polars_error"],[11659,"core::result"],[11660,"polars_core::series"],[11661,"core::ops::function"],[11662,"num_traits"],[11663,"num_traits::cast"],[11664,"polars_core::series::arithmetic::borrowed"],[11665,"polars_core::frame::group_by::proxy"],[11666,"polars_core::chunked_array::object"],[11667,"core::option"],[11668,"polars_arrow::array"],[11669,"alloc::boxed"],[11670,"core::iter::traits::iterator"],[11671,"polars_core::chunked_array::list::iterator"],[11672,"polars_utils::pl_str"],[11673,"core::marker"],[11674,"alloc::borrow"],[11675,"polars_core::series::amortized_iter"],[11676,"alloc::string"],[11677,"polars_core::datatypes::dtype"],[11678,"polars_arrow::array::binview::view"],[11679,"polars_core::chunked_array::ops::sort::options"],[11680,"polars_core::frame::column"],[11681,"polars_core::chunked_array::cast"],[11682,"polars_core::series::arithmetic::borrowed::checked"],[11683,"core::slice::iter"],[11684,"core::iter::adapters::map"],[11685,"alloc::vec"],[11686,"compact_str"],[11687,"polars_core::chunked_array::metadata"],[11688,"core::iter::traits::double_ended"],[11689,"polars_arrow::offset"],[11690,"core::fmt"],[11691,"core::iter::traits::collect"],[11692,"polars_arrow::bitmap::immutable"],[11693,"core::borrow"],[11694,"polars_core::chunked_array::from_iterator"],[11695,"core::convert"],[11696,"rayon::iter"],[11697,"polars_arrow::pushable"],[11698,"core::iter::traits::exact_size"],[11699,"core::clone"],[11700,"polars_arrow::trusted_len"],[11701,"polars_core::datatypes::any_value"],[11702,"polars_arrow::array::binary"],[11703,"std::sync::rwlock"],[11704,"polars_core::chunked_array::logical"],[11705,"polars_core::datatypes::time_unit"],[11706,"polars_core::series::series_trait"],[11707,"polars_core::chunked_array::iterator"],[11708,"polars_core::scalar"],[11709,"polars_core::chunked_array::metadata::guard"],[11710,"polars_core::chunked_array::metadata::interior_mutable"],[11711,"alloc::sync"],[11712,"polars_core::chunked_array::metadata::md_trait"],[11713,"core::ops::range"],[11714,"polars_core::datatypes::field"],[11715,"polars_arrow::legacy::kernels::rolling::no_nulls"],[11716,"polars_core::chunked_array::ops::rolling_window"],[11717,"polars_ops::chunked_array::scatter"],[11718,"polars_utils::index"],[11719,"ahash::random_state"],[11720,"polars_utils::hashing"],[11721,"ndarray"],[11722,"ndarray::dimension::dim"],[11723,"ndarray::data_repr"],[11724,"either"],[11725,"core::any"],[11726,"polars_core::frame"],[11727,"polars_core::chunked_array::arithmetic::numeric"],[11728,"polars_core::chunked_array::builder::list::anonymous"],[11729,"polars_core::chunked_array::builder::list::boolean"],[11730,"polars_core::chunked_array::builder::list::primitive"],[11731,"polars_core::chunked_array::builder::list"],[11732,"polars_core::chunked_array::builder"],[11733,"polars_core::chunked_array::builder::list::binary"],[11734,"polars_core::chunked_array::builder::list::null"],[11735,"polars_core::chunked_array::builder::string"],[11736,"polars_arrow::array::binview"],[11737,"polars_core::chunked_array::builder::boolean"],[11738,"polars_core::chunked_array::builder::null"],[11739,"polars_core::chunked_array::builder::primitive"],[11740,"polars_core::series::implementations::null"],[11741,"core::hash"],[11742,"polars_core::chunked_array::collect"],[11743,"polars_core::chunked_array::float"],[11744,"polars_core::chunked_array::from_iterator_par"],[11745,"polars_arrow::array::boolean"],[11746,"polars_arrow::array::fixed_size_list"],[11747,"polars_core::chunked_array::metadata::env"],[11748,"polars_core::chunked_array::metadata::collect"],[11749,"bitflags::iter"],[11750,"std::fs"],[11751,"std::sync::mutex"],[11752,"polars_arrow::datatypes"],[11753,"polars_arrow::bitmap::utils::iterator"],[11754,"polars_arrow::bitmap::utils::zip_validity"],[11755,"polars_core::chunked_array::object::builder"],[11756,"polars_core::chunked_array::object::registry"],[11757,"polars_core::chunked_array::ops"],[11758,"polars_arrow::legacy::array::slice"],[11759,"polars_core::chunked_array::ops::arity"],[11760,"polars_arrow::array::static_array"],[11761,"core::error"],[11762,"polars_arrow::array::primitive"],[11763,"polars_core::chunked_array::ops::search_sorted"],[11764,"polars_core::utils"],[11765,"polars_row::row"],[11766,"chrono::naive::datetime"],[11767,"chrono_tz::timezones"],[11768,"chrono::naive::time"],[11769,"polars_core::chunked_array::logical::categorical"],[11770,"polars_core::chunked_array::logical::categorical::builder"],[11771,"polars_arrow::array::static_array_collect"],[11772,"std::ffi::os_str"],[11773,"std::path"],[11774,"bytemuck::zeroable"],[11775,"polars_core::chunked_array::logical::categorical::revmap"],[11776,"polars_core::chunked_array::logical::categorical::merge"],[11777,"core::cmp"],[11778,"polars_arrow::datatypes::physical_type"],[11779,"polars_arrow::types"],[11780,"chrono::time_delta"],[11781,"chrono::naive::date"],[11782,"polars_core::datatypes::into_scalar"],[11783,"polars_plan::dsl::expr"],[11784,"polars_core::chunked_array::logical::categorical::string_cache"],[11785,"polars_error::warning"],[11786,"planus::errors"],[11787,"regex::error"],[11788,"std::io::error"],[11789,"alloc::collections"],[11790,"polars_parquet::parquet::error"],[11791,"simdutf8::basic"],[11792,"polars_schema::schema"],[11793,"hashbrown::set"],[11794,"polars_core::frame::row"],[11795,"polars_core::frame::group_by"],[11796,"polars_time::group_by::dynamic"],[11797,"polars_lazy::frame"],[11798,"polars_core::series::from"],[11799,"polars_core::chunked_array::ndarray"],[11800,"polars_arrow::record_batch"],[11801,"polars_arrow::array::struct_"],[11802,"polars_time::windows::duration"],[11803,"polars_core::frame::explode"],[11804,"polars_utils::idx_vec"],[11805,"rayon::iter::plumbing"],[11806,"polars_plan::plans::aexpr"],[11807,"polars_core::frame::group_by::into_groups"],[11808,"core::iter::adapters::copied"],[11809,"core::iter::adapters::zip"],[11810,"polars_utils::float"],[11811,"polars_arrow::types::native"],[11812,"polars_core::frame::group_by::aggregations::agg_list"],[11813,"polars_core::frame::group_by::aggregations"],[11814,"polars_core::frame::group_by::expr"],[11815,"polars_core::frame::row::av_buffer"],[11816,"polars_utils::arena"],[11817,"polars_plan::plans::ir"],[11818,"polars_ops::frame::join::hash_join"],[11819,"polars_ops::frame::join::args"],[11820,"polars_plan::dsl::struct_"],[11821,"polars_ops::chunked_array::gather::chunked"],[11822,"polars_ops::frame"],[11823,"polars_io::csv::read::reader"],[11824,"polars_io::predicates"],[11825,"polars_io::mmap"],[11826,"polars_plan::dsl::selector"],[11827,"polars_plan::frame::opt_state"],[11828,"core::alloc"],[11829,"polars_plan::plans::anonymous_scan"],[11830,"polars_lazy::scan::anonymous_scan"],[11831,"polars_plan::dsl::expr_dyn_fn"],[11832,"polars_plan::plans::visitor"],[11833,"polars_plan::dsl::function_expr"],[11834,"polars_ops::series::ops::arg_min_max"],[11835,"polars_plan::dsl::array"],[11836,"polars_plan::dsl::list"],[11837,"polars_plan::dsl::function_expr::schema"],[11838,"polars_io::ipc::ipc_stream"],[11839,"std::io"],[11840,"polars_ops::chunked_array::binary"],[11841,"polars_time::chunkedarray::string"],[11842,"std::os::fd::owned"],[11843,"polars_ops::chunked_array::list"],[11844,"std::os::fd::raw"],[11845,"polars_ops::series::ops"],[11846,"polars_ops::chunked_array::strings"],[11847,"core::mem::maybe_uninit"],[11848,"polars_ops::chunked_array::strings::namespace"],[11849,"polars_io::csv::read::read_impl::batched"],[11850,"polars_io::csv::write::writer"],[11851,"polars_io::ipc::write"],[11852,"polars_io::parquet::read::reader"],[11853,"polars_io::parquet::read::read_impl"],[11854,"polars_io::parquet::write::writer"],[11855,"polars_io::parquet::write::batched_writer"],[11856,"polars_plan::dsl::binary"],[11857,"polars_plan::dsl::udf"],[11858,"polars_lazy::frame::exitable"],[11859,"hashbrown::map"],[11860,"polars_plan::dsl::cat"],[11861,"polars_ops::series::ops::round"],[11862,"polars_time::series"],[11863,"polars_lazy::scan::csv"],[11864,"polars_lazy::scan::ipc"],[11865,"polars_lazy::scan::ndjson"],[11866,"polars_lazy::scan::parquet"],[11867,"polars_time::chunkedarray::rolling_window"],[11868,"polars_time::windows::bounds"],[11869,"polars_time::windows::group_by"],[11870,"polars_time::windows::window"],[11871,"polars_io::csv::read::options"],[11872,"polars_io::csv::write::options"],[11873,"polars_io::ipc::ipc_file"],[11874,"polars_ops::frame::join::asof"],[11875,"polars_io::json"],[11876,"polars_ops::series::ops::interpolation::interpolate"],[11877,"polars_ops::series::ops::is_between"],[11878,"polars_io::parquet::read::options"],[11879,"polars_ops::series::ops::rank"],[11880,"polars_io::parquet::write::options"],[11881,"polars_plan::plans"],[11882,"polars_plan::dsl::arity"],[11883,"polars_plan::dsl::function_expr::boolean"],[11884,"polars_plan::dsl::function_expr::cat"],[11885,"polars_plan::dsl::function_expr::datetime"],[11886,"polars_plan::dsl::function_expr::pow"],[11887,"polars_plan::dsl::function_expr::strings"],[11888,"polars_plan::dsl::function_expr::struct_"],[11889,"polars_parquet::arrow::write"],[11890,"polars_plan::dsl::functions::temporal"],[11891,"polars_plan::dsl::options"],[11892,"polars_parquet::parquet::metadata::file_metadata"],[11893,"polars_plan::plans::lit"],[11894,"polars_plan::plans::options"],[11895,"polars_arrow::legacy::kernels::rolling"],[11896,"polars_arrow::legacy::kernels::time"],[11897,"polars_lazy::scan::file_list_reader"],[11898,"polars_io::cloud::options"],[11899,"polars_parquet::parquet::metadata::column_order"],[11900,"polars_ops::chunked_array::binary::namespace"],[11901,"polars_io::ndjson::core"],[11902,"polars_ops::frame::join::cross_join"],[11903,"polars_lazy::dsl::eval"],[11904,"polars_time::chunkedarray::date"],[11905,"polars_time::chunkedarray::datetime"],[11906,"polars_time::chunkedarray::duration"],[11907,"core::ffi::c_str"],[11908,"core::default"],[11909,"polars_parquet::parquet::metadata::column_chunk_metadata"],[11910,"polars_core::series::ops"],[11911,"polars_plan::dsl::dt"],[11912,"polars_ops::series::ops::various"],[11913,"polars_arrow::scalar"],[11914,"polars_lazy::dsl::list"],[11915,"crossterm::command"],[11916,"polars_io::shared"],[11917,"polars_plan::plans::apply"],[11918,"polars_plan::dsl::function_expr::list"],[11919,"polars_plan::dsl::function_expr::binary"],[11920,"polars_plan::dsl::function_expr::array"],[11921,"polars_plan::dsl::function_expr::range"],[11922,"polars_parquet::arrow::read::statistics"],[11923,"alloc::ffi::c_str"],[11924,"polars_arrow::array::growable::structure"],[11925,"polars_arrow::array::struct_::mutable"],[11926,"polars_core::schema"],[11927,"polars_arrow::legacy::array::default_arrays"],[11928,"polars_arrow::buffer::immutable"],[11929,"polars_arrow::array::list"],[11930,"polars_core::named_from"],[11931,"polars_ops::frame::join"],[11932,"polars_ops::frame::join::hash_join::single_keys_dispatch"],[11933,"polars_time::chunkedarray::time"],[11934,"core::num::nonzero"],[11935,"polars_arrow::array::struct_::iterator"],[11936,"polars_ops::frame::join::asof::groups"],[11937,"polars_ops::chunked_array::list::namespace"],[11938,"polars_plan::dsl::name"],[11939,"parquet_format_safe::parquet_format"],[11940,"polars_core::utils::supertype"],[11941,"polars_io::options"],[11942,"polars_core::chunked_array::ops::aggregate"],[11943,"polars_core::chunked_array::ops::aggregate::quantile"],[11944,"polars_arrow::legacy::index"],[11945,"polars_plan::plans::ir::scan_sources"],[11946,"polars_ops::chunked_array::strings::split"],[11947,"core::pin"],[11948,"core::io::borrowed_buf"],[11949,"parquet_format_safe::thrift::varint::decode"],[11950,"polars_time::chunkedarray::rolling_window::dispatch"],[11951,"polars_time::round"],[11952,"polars_parquet::parquet::metadata::schema_descriptor"],[11953,"polars_core::chunked_array::ops::aggregate::var"],[11954,"polars_plan::dsl::string"],[11955,"polars_ops::series::ops::to_dummies"],[11956,"polars_time::truncate"],[11957,"polars_io::csv::read::schema_inference"],[11958,"polars_time::upsample"],[11959,"polars_core::hashing::vector_hasher"],[11960,"alloc::collections::btree::map"],[11961,"polars_parquet::parquet::metadata::row_metadata"],[11962,"polars_utils::mmap::private"],[11963,"polars_parquet::arrow::read::deserialize::utils::filter"],[11964,"polars_ops::chunked_array::array::namespace"],[11965,"polars_ops::chunked_array::array"],[11966,"polars_io::csv::read::buffer"],[11967,"polars_time::chunkedarray::string::patterns"],[11968,"polars_time::chunkedarray::string::infer"],[11969,"polars_io::utils::compression"],[11970,"polars_arrow::legacy::array::fixed_size_list"],[11971,"polars_plan::dsl::function_expr::rolling"],[11972,"polars_plan::dsl::function_expr::rolling_by"],[11973,"polars_arrow::legacy::array::null"],[11974,"polars_arrow::bitmap::mutable"],[11975,"polars_arrow::array::utf8"],[11976,"polars_core::series::iterator"],[11977,"alloc::rc"],[11978,"polars_core"],[11979,"polars_core::chunked_array::struct_"],[11980,"polars_core::chunked_array::iterator::par"],[11981,"polars_core::chunked_array::object::extension"],[11982,"polars_core::chunked_array::ops::float_sorted_arg_max"],[11983,"polars_core::chunked_array::ops::gather"],[11984,"polars_core::chunked_array::ops::sort"],[11985,"polars_core::chunked_array::ops::sort::arg_bottom_k"],[11986,"polars_core::chunked_array::ops::sort::arg_sort_multiple"],[11987,"polars_core::chunked_array::temporal"],[11988,"polars_core::chunked_array::temporal::conversion"],[11989,"polars_core::chunked_array::temporal::time"],[11990,"polars_core::chunked_array::logical::date"],[11991,"polars_core::chunked_array::logical::datetime"],[11992,"polars_core::chunked_array::logical::decimal"],[11993,"polars_core::chunked_array::logical::duration"],[11994,"polars_core::datatypes::aliases"],[11995,"polars_utils::aliases"],[11996,"polars_core::chunked_array::logical::time"],[11997,"polars_error::constants"],[11998,"polars_core::functions"],[11999,"polars_core::frame::horizontal"],[12000,"polars_arrow::datatypes::schema"],[12001,"polars_io::utils::other"],[12002,"polars_io::parquet::metadata"],[12003,"polars_arrow::legacy::prelude"],[12004,"polars_arrow::legacy::array"],[12005,"polars_io::path_utils"],[12006,"polars_ops::series::ops::rolling"],[12007,"polars_parquet::parquet::write"],[12008,"polars_io::utils"],[12009,"polars_ops::frame::join::general"],[12010,"polars_io::parquet::read"],[12011,"polars_ops::series::ops::abs"],[12012,"polars_plan::dsl::functions::selectors"],[12013,"polars_plan::dsl::functions::horizontal"],[12014,"polars_plan::dsl::functions::arity"],[12015,"polars_plan::dsl"],[12016,"polars_plan::dsl::functions::range"],[12017,"polars_plan::dsl::functions::index"],[12018,"polars_ops::chunked_array"],[12019,"polars_plan::dsl::functions::coerce"],[12020,"polars_plan::dsl::functions::syntactic_sugar"],[12021,"polars_time::base_utc_offset"],[12022,"polars_io::csv::read"],[12023,"polars_time"],[12024,"polars_ops::series::ops::clip"],[12025,"polars_io"],[12026,"polars_ops::series::ops::horizontal"],[12027,"polars_lazy::dsl::functions"],[12028,"polars_plan::dsl::functions::concat"],[12029,"polars_ops::series::ops::index"],[12030,"polars_io::csv::read::parser"],[12031,"polars_ops::series::ops::cum_agg"],[12032,"polars_ops::series::ops::diff"],[12033,"polars_time::dst_offset"],[12034,"polars_ops::series::ops::floor_divide"],[12035,"polars_ops::chunked_array::strings::concat"],[12036,"polars_ops::series::ops::duration"],[12037,"polars_ops::chunked_array::datetime::replace_time_zone"],[12038,"polars_time::date_range"],[12039,"polars_ops::series::ops::interpolation"],[12040,"polars_ops::series::ops::interpolation::interpolate_by"],[12041,"polars_ops::series::ops::is_first_distinct"],[12042,"polars_ops::series::ops::is_in"],[12043,"polars_ops::series::ops::is_last_distinct"],[12044,"polars_io::parquet::read::utils"],[12045,"polars_ops::series::ops::negate"],[12046,"polars_ops::series::ops::not"],[12047,"polars_ops::series::ops::int_range"],[12048,"polars_plan::dsl::functions::repeat"],[12049,"polars_ops::chunked_array::repeat_by"],[12050,"polars_ops::series::ops::replace"],[12051,"polars_ops::chunked_array::strings::strip"],[12052,"polars_io::partition"],[12053,"polars_io::parquet::read::predicates"],[12054,"polars_io::parquet::read::mmap"],[12055,"polars_time::chunkedarray"],[12056,"polars_io::cloud"],[12057,"polars_ops::chunked_array::mode"],[12058,"polars_ops::chunked_array::nan_propagating_aggregate"],[12059,"polars_arrow::legacy::array::utf8"]],"i":"````````````````````Md000`l000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000`0000000000000000000101``000000000000000000000000000`0`000000010100000001000000000000000000000000000000000000`0000000000001000000000000000000000000000000000000000`00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000010000000000000000000000000000000`0000000000000000000000000000000000000000000000000`00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000`00`00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000`0000000000000000000000000010010010000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000`ABj00000000000000000000000000````````````````ACnADbADdADfABl0ABnAC`ACb0ACdACf54AChACj5ACl5<;:98845<3487216055213<;9218721605<;:98721605<;:95<;:9<;:9<;:9878721605<;:98721605<;:98721605<;:9216542165438704<<;:9`8721605<;:9ADj000`9832716=<;:327659832716=<;:`9832716=<;:64<;:=<;:9832716=<;:9832716=<;:9832716=<;:9832716=<;:````````5556555`5`Fl000000000000000000000000000``ADnAE`1000101000`AEb``AEdAEf````AEjAEnAF`21021021021021021021021021210210`210210210210210``AFnKfGl0Jl`3Mj22````````42110Ml4AFb4343434343434433434321560432156043150431504315043AFd54542654332671543267154541N`777437826565265265777777726666655555437826565665565656577507777354378265656565437826565657657777656522077770777365365657757777775776565653372656543782654378265334378265653437826513````AGb00000Jn1111`111111110011111111111111111111``111111101111111110Cf2222222222`AGn000000000000000000000````AH`00AHb0000000```00`0`10000AIb```````````````````````````0AHh``AId22222DKh3``0``3F`Fh5AHd5AHj066AHl0AHn`549549AI`0065:65:65:6565:65:6565:65:88666555AIf0`AIhAIj`98=9988=`AIlAIn`AJ`0>><;AIb=<0=<0AJbAJdAId0F`FhAHd0AJf1132?32AJh5543>1AJj0AJlAJnAK`0`0AKbAKdAKf0`AHl0AKh;AKjAKlAKnF`FhAIb210210210AHn7321323232232232`AL``ALjALfALb`````````````````````````````````````ALn00`0`000000000000000000`00000`````>>````````````87878787>>```````````AOn`JhElDl```````21AGd`2``3`0320```32````3`````3200``32`3`3200``0320``Dd04341```11`51431``431```AOd`3DKjDKl``````8``764``764``764``764``4`555444AOj875``3``5B@dLb1010Al;:8`;:`;``939```````````BAb`3`=<;`<`<;9<`<;99````90`<;9``<;9``<;9``<;9``9;9`99ALd0;09Kn69AMjAOlJhAOnElB@`Oj;OfNdFbNhNjNnKjL`EhEfKlLlBbBfFdBlLhLdLjB@bAGdB@dAMjJh01Kn1CbLfOfNdFbNhNjNnKjL`EhEfBbBfBlAMlAMj110AMn0AN`0ElJhKn0Dd0003OjANfALd3433:BBb5DKnDjAhjCbLfCdB@jAOjAOdAMjAOlJhAOnElB@`OjLbOfNdFbNhNjNnKjL`EhEfKlLlBbBfFdBlLhLdLjB@bAGdB@dDdAMlBBbKnDKnDjAhjCbLfCdB@jAOjAOdAMjAOlJhAOnElB@`OjLbOfNdFbNhNjNnKjL`EhEfKlLlBbBfFdBlLhLdLjB@bAGdB@dElAOd`AOhJh3Kn0200000AMj`LfOfNdFbNhNjNnKjL`EhEfDd=AOjAOd>AOlJhAOnElB@`OjLbOfNdFbNhNjNnKjL`EhEfKlLlBbBfFdBlLhLdLjB@bAGdB@dDdKnAOjAOdAMjAOlJhAOnElB@`OjLbOfNdFbNhNjNnKjL`EhEfKlLlBbBfFdBlLhLdLjB@bAGdB@dDdKnAOjAOdAMjAOlJhAOnElB@`OjLbOfNdFbNhNjNnKjL`EhEfKlLlBbBfFdBlLhLdLjB@bAGdB@dDdOjB@h0002El00`Kn4B@jAOjAOdJhAOn6;99AMlBBb77DKnDjAhjCbLfCd=<;AMjAOl<;ElB@`OjLbOfNdFbNhNjNnKjL`EhEfKlLlBbBfFdBlLhLdLjB@bAGdB@dDdAMlBBbKn0DKnDjAhjCbLfCdB@jAOjAOdAMjAOlJhAOnElB@`OjLbOfNdFbNhNjNnKjL`EhEfKlLlBbBfFdBlLhLdLjB@bAGdB@dKnCbLfOfNdFbNhNjNnKjL`EhEfAMlDd1BBb?DKnDjAhjCbLfCdB@jAOjAOdAMjAOlJhAOnElB@`OjLbOfNdFbNhNjNnKjL`EhEfKlLlBbBfFdBlLhLdLjB@bAGdB@dAOhKn0000AMjJhOj0Dd00AOj3AOnEl0B@`5Lb<;7888888555777333222111666000<<<;;;9AOdAOfAMlB@j9983AOl<<8776;55AGdB@d<<<<<4BBbKn00DKnDjAhjCbLfCd<AOjAOdAMj>Jh00000AOnEl000B@`Oj00Lb0OfNdFbNhNjNnKjL`EhEfKlLlBbBfFdBlLhLdLjB@bAGd00B@dElAMjKn01Dd00000001111110002ALd00030AOd33333AOh544444051DlAhjCbLfCdOfNdFbNhNjNnKjL`EhEfKlLlBbBfFdBlLhLdLjB@bAOdAMjElJhBAnALd444444Dd3AOn5OjLbAGdB@d8Kn09:6AMlBBb2DKnDjAhjCbLfCdB@jAOjAOdAMjAOlJhAOnElB@`OjLbOfNdFbNhNjNnKjL`EhEfKlLlBbBfFdBlLhLdLjB@bAGdB@dEl2DdAMlBBbKnDKnDjAhjCbLfCdB@jAOjAOdAMjAOlJhAOnElB@`OjLbOfNdFbNhNjNnKjL`EhEfKlLlBbBfFdBlLhLdLjB@bAGdB@dKnAMjBBbBB`333332JhDdEl00200055020AOd31110131931313111131111319ALd702173777777``2AOn8`B@j::9:::CbLfOfNdFbNhNjNnKjL`EhEfAMj0Oj0Kn0DKjDKlAMl33333333B@j54B@`BBb8888888166DdJhLb9;96CbLfOfNdFbNhNjNnKjL`EhEfKn0AOd111Oj2222BBbAMj0Jh55505CbLfOfNdFbNhNjNnKjL`EhEfKn00>ElOjLb20AMj00AGdDd6AOjAOd4AOlJhAOn:B@`:9OfNdFbNhNjNnKjL`EhEfKlLlBbBfFdBlLhLdLjB@bAGdB@dEl2KnDd111Jh3Lb133AMn0AN`0B@h00045AMlBBb8DKnDjAhjCbLfCdB@jAOjAOdAMjAOlJhAOnElB@`OjLbOfNdFbNhNjNnKjL`EhEfKlLlBbBfFdBlLhLdLjB@bAGdB@dDdAMlBBbKnDKnDjAhjCbLfCdB@jAOjAOdAMjAOlJhAOnElB@`OjLbOfNdFbNhNjNnKjL`EhEfKlLlBbBfFdBlLhLdLjB@bAGdB@dJhElDd21Lb1AMlBBbKnDKnDjAhjCbLfCdB@jAOjAOdAMjAOlJhAOnElB@`OjLbOfNdFbNhNjNnKjL`EhEfKlLlBbBfFdBlLhLdLjB@bAGdB@d1AMj0ALd10El1DdAMlBBbKnDKnDjAhjCbLfCdB@jAOjAOdAMjAOlJhAOnElB@`OjLbOfNdFbNhNjNnKjL`EhEfKlLlBbBfFdBlLhLdLjB@bAGdB@dDKjDKlALdDd00Jh`````AOd`AOj10``AOf`````2121``BBn0000`00`0000000`0``BCbn000DL``112101```11111112BC`302302`223002302302`300223002222222`302302`0``````02302302023023022DLbDLd10```BDh`0BDf11``0``01AAn00000000000000BElBEn3421034222342342342`224210342103421034222222222242224442`2222223422103422222222222222222`222242222222222222103422103421022222222222222222222210222222222222222`222222222222222221022222222222222222342222221034222221034221034222222222210342222222``Ff`00BGb1111111111111111111011011111111111101010101011101010111110101111110110111111111111111011100111111111101111111010BDd21222122222222122222222221212122222222222222212222222222221222222221222212121212122222222212222`BGf000000000000000000000000000`BGl0``0``````BHdC``2`22222222210`222BGh1BDn40`1023BHnBH`BGn453762104537453745374537345621004537621045373162104453745444555`643445377`6210444455377445335BHh4673215648732156486355255765564447644444543345644656446644564887321564873215648873215648666473215648DLfDLh0``````````BIdBIf0`BIh0BIjBIl``1011110101010101010`10011010101010BDl211210210210210210`02102102100000022110`2102102121021```210210210210210``BM`BKjBBd`BNl1CGjCCn01`CDh`C@n5```3ALnAOnBDh6```::`CIfJhElDl``>``````````CDf```?```CF`CEn`CEdAIbBM`CHbCGn``CIl;:AGd``BBd5`<``=``152=<1`````CBnCEj``CFf`BFjBL`00CFn69`;JhEl``````1`CH`><```````````````````````````````````>``>CDb`:`nCF`<`?``1BM`CHb003CGnBNlBGl3CDf```````555553`````<CC`CCb`DBl6CIl?>AGd0``1`8JhEl``:`1`:31022``CEn`3=CFnC@n??`CGhBBdn`CGn:879``````BL`D@lCHb;:;77DL`6`BKj7CId```;BM`AGd55577````:CHd0`````2``2>;6BNlBGlBDh44`CIlAOn61JhEl8``3108``9C@nBFjCEdAIb=CCb```CDfAHhBBd``0BM`CH``CGl`AOd``CFn`BGl``````CId>>CFf`33DlDKjDKlCHb0A@`CGn``n:DBlBHdC``````BNl=`BBd````CDf`CIlAOn``1JhElAGd``4210``4210``4210``BKjBM`0`2```````=````````CGj0`000`0?0Dl11100CGnAIdCFnCId`````CDb``DGnCHd``1```2BBdCEb`=`=``=BNlBGlBDhD@l`````DLjCBnCC`CDfCEjALn`;CHb0AOj`CEhA@`CIfJhElAGd````BM`````````BBd`AOd`C@n0`CCj94<11CFf0CDj07CFnCEnBNlAIbBGl1;210;20CGnB@dLbA@`332176545?<3?<CCb4CClCHd?BL``:8CGhCCn``::987AlCEdCEh9CDhBM``1`n``2CBnDKhCEjCF`DLlBDhCGjC@n0BBd`CIlD@lJhElAGdCJfBM```````43`4`DL`AIbCDj0``;CEnCGn;ABjnBKhCIb``Dl`BL`0```````AOj2```````C@n```````````BAb`>`CF`CHd`BNlBGl``=`7D@lCJfCEnBM`0CIl1```BBd`82CHb33CGn4`14DLjCBnCC`CDfCEjALnCIb`;;``````BKj8<<``CF`BL`0n01CCb`FfABjCFn`````44```?B@d1`BBd````CIl5``````BM`8000CCl553CHbBHdC```CFfDKhDLl;99```555`CH``6``BNlBGlAOn<<JhEl`n``>```2`<<<<<<`21AGd``?1``3`BKjBBdCHd98BM`CCbBL`CHb`3``5`2CGnCIl<;99``1```922`2511111111ABjBAbC@n`473?><``3?><``3?><``3?><````CFfCFn>`:`El?```;8`CCjAGd0=ALd0BNlBGl``?<<`BBd`0CCb``CHd?;?CEbAIbDl8=`CAfBF`BKnBLhCBbCBdCBfCBhCBjBE`BFdCBlBG`CBnCC`CCbCCdAB`A@hCCfCChCCjCClCCnBJhCD`CDbCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdCGfBNlBBdCGhC@nBLlCGjCGlCGnCH`CHbCHdBM`CHfCHhCHjCHlCHnCI`CIbCIdCIfCIhBKjCAbBL`CIjCIlMnCInCJ`A@bBFjBFnMhBAdA@`CJbCJdCJf`BF`BJf0``BJj9AHdBJlBJn000BK`6BKb`BBdBKh1BKjBG`0BKl1BKn5`5`5BL``MnBLdCI`BLf00CHh;BF`<`<ACdACf1010AHh:?`?AHj0BBd0`22`BFnBMbBMdBMf42104AHl5BJl`1AHn71`BMhCI``9AMn990AN`0::`BMjBLf7BMn=8=MhBN`BNb000MnBNh11BNl2ANfBNnBJlALdBO``877`BBdBOd0`CD`BKbBOhBOnC@bC@f4`7`BKjBL`<00<00010<0CAjBMdAM`BLdC@jBOf<CAfBF`BKnBLhCBbCBdCBfCBhDDnBOhBMhCN`DAhBMjCNbCKnCBjBOnBE`BFdCBlBG`DGnCNdCBnCNfCC`CCbCCdBMfDCbCKbBJjC@dC@bAB`A@hC@fDE`CCfCChCCjCClCCnBJhCD`CDbCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlDCjCFnCG`CGbCGdCGfBNlBBdCGhC@nBLlCGjCGlCGnCH`CHbCHdBM`CLfCHfCHhCHjCHlCHnCI`CIbCIdCIfCIhBKjCAbBL`CIjCIlMn0CInCJ`A@bD@lBFjBFnMhBAdA@`CJbCJdCJfCAjBMdAM`BLdC@jBOfBKbCAfBF`BKnBLhCBbCBdCBfCBhDDnBOhBMhCN`DAhBMjCNbCKnCBjBOnBE`BFdCBlBG`DGnCNdCBnCNfCC`CCbCCdBMfDCbCKbBJjC@dC@bAB`A@hC@fDE`CCfCChCCjCClCCnBJhCD`CDbCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlDCjCFnCG`CGbCGdCGfBNlBBdCGhC@nBLlCGjCGlCGnCH`CHbCHdBM`CLfCHfCHhCHjCHlCHnCI`CIbCIdCIfCIhBKjCAbBL`CIjCIlMnCInCJ`A@bD@lBFjBFnMhBAdA@`CJbCJdCJfBF`7`ACb1CBdCBhCHnCA`CAb`BMnCAd2CAf`BJl:AI`BBdAOh=2201`1Mn2CAl3A@bCAnBFnC@bCB`:0:CCf`;;`9`9`9<BF`BKnBLhCBbCBdCBfCBhCBjBE`BFdCBlBG`CBnCC`CCbCCdAB`A@hCCfCChCCjCClCCnBJhCD`CDbCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdCGfBNlBBdCGhC@nBLlCGjCGlCGnCH`CHbCHdBM`CHfCHhCHjCHlCHnCI`CIbCIdCIfCIhBKjCAbBL`CIjCIlMnCInCJ`A@bBFjBFnMhBAdA@`CJbCJdCJfBJlCAfBF`BKnBLhCBbCBdCBfCBhCBjBE`BFdCBlBG`CBnCC`CCbCCdAB`A@hCCfCChCCjCClCCnBJhCD`CDbCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdCGfBNlBBdCGhC@nBLlCGjCGlCGnCH`CHbCHdBM`CHfCHhCHjCHlCHnCI`CIbCIdCIfCIhBKjCAbBL`CIjCIlMnCInCJ`A@bBFjBFnMhBAdA@`CJbCJdCJfCAfBF`BKnBLhCBbCBdCBfCBhCBjBE`BFdCBlBG`CBnCC`CCbCCdAB`A@hCCfCChCCjCClCCnBJhCD`CDbCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdCGfBNlBBdCGhC@nBLlCGjCGlCGnCH`CHbCHdBM`CHfCHhCHjCHlCHnCI`CIbCIdCIfCIhBKjCAbBL`CIjCIlMnCInCJ`A@bBFjBFnMhBAdA@`CJbCJdCJfCBjBE`BFd`CJhCBbCBfCBdCBhBG`Mn`BLdCDbBJh``BF``B@h000ADnAE`100033`CIj0CCfBK`CCh<;BL``CDnCFdCFn`BOd`CJhCBb````BMdCK`4BMf9155``BF`CKbBBd88```BJfCIj4CKd0`3``3`3`3``3CKf>`CDd```0`````CKhCKjCAnCHhCKlBG`CHj1CHlCJbCChMn0BF`BLhCBdCBhCKnBE`BFdCCbCCf:CCjBJhCD`CDbCDdCDhCDjCDnCE`CEbCEdCEfCEjCF`CFbCFdCFfCFnBBdBLl00CHfCHhCHjCHnCI`CIbCIdCIhBL`Mn000CInCJ`A@bBFjBAdA@```CAjBMdAM`0BLdC@jBOfBKbCAfBF`BKnBLhCBbCBdCBfCBhDDnBOhBMhCN`DAhBMjCNbCKnCBjBOnBE`BFdCBlBG`DGnCNdCBnCNfCC`CCbCCdBMfDCbCKbBJjC@dC@bAB`A@hC@fDE`CCfCChCCjCClCCnBJhCD`CDbCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlDCjCFnCG`CGbCGdCGfBNlBBdCGhC@nBLl0CGjCGlCGnCH`CHbCHdBM`CLfCHfCHhCHjCHlCHnCI`CIbCIdCIfCIhBKjCAbBL`CIjCIlMn0CInCJ`A@bD@lBFjBFnMhBAdA@`CJbCJdCJfCAjBMdAM`0BLdC@jBOfBKbCAfBF`BKnBLhCBbCBdCBfCBhDDnBOhBMhCN`DAhBMjCNbCKnCBjBOnBE`BFdCBlBG`DGnCNdCBnCNfCC`CCbCCdBMfDCbCKbBJjC@dC@bAB`A@hC@fDE`CCfCChCCjCClCCnBJhCD`CDbCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlDCjCFnCG`CGbCGdCGfBNlBBdCGhC@nBLlCGjCGlCGnCH`CHbCHdBM`CLfCHfCHhCHjCHlCHnCI`CIbCIdCIfCIhBKjCAbBL`CIjCIlMnCInCJ`A@bD@lBFjBFnMhBAdA@`CJbCJdCJfCFbF`FhCFnBF`0001Mn`BDn`CJ``BMfBBdBL`7CLfCHfBKh4BKl5999CAjBMdAM`BLdC@jBOfBKbCAf0BF`0BKnBLhCBbCBdCBfCBhDDnBOhBMhCN`DAhBMjCNbCKnCBjBOnBE`BFdCBlBG`DGnCNdCBnCNfCC`CCbCCdBMfDCbCKbBJjC@dC@bAB`A@hC@fDE`CCfCChCCjCClCCnBJhCD`CDbCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlDCjCFnCG`CGbCGdCGfBNlBBdCGhC@nBLlCGjCGlCGnCH`CHbCHdBM`CLfCHfCHhCHjCHlCHnCI`CIbCIdCIfCIhBKjCAbBL`CIjCIlMn0CInCJ`A@bD@lBFjBFnMhBAdA@`CJbCJdCJfBBdBF`01BJl``2AOh1:98Oj9``CCf`CHfBL`Mn0CChCK`0```CM`2CBjBE`BFdBG`CBnCC`CCbAB`>:CCjCClCCnBJhCD`CDbCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlBNlBBd0CGhC@nBLl0CGjCGlCGnCH`CHbCHdBM`CLfCHfCHlCHnCI`CIbCIdCIfCIhBKjCIlMn00CInCJ`A@bBFjBFn0MhBAdA@`CJfBBdAId0BE`00BFd00BG`00CBn00CC`00CCb00AB`00CCf00CCh00CCj00CCl00CCn00BJh00CD`00CDb00CDd00CDf00CDh00CDj00CDn00CE`00CEb00CEd00CEf00CEh00CEj00CEl00CF`00CFd00CFf00CFh00CFj00CFl00BBd00CGh00C@n00CGj00CGl00CGn00CH`00CHb00CHd00CHf00CHl00CHn00CI`00CIb00CId00CIf00CIh00BKj00Mn00CIn00CJ`00BFj00BAd00A@`00CJf00CMfBE`?BBd09```BF`0AIf20`BL`3BOdA@h111ACdCAf601BJlBJj00BFnCCf:;`:;;AIhAIj5<=999CMlCMnACfAOfBLdBKbCJhCBbCBfBOhCN`BMjCNbBOnCNdCNfCKbC@bC@fACd=<;9C@d`BF`BMfBBd`0CDd0`BLlCAl33`MnBMnCAdCA`CBjBE`BFdCBlBG`0CBnCC`CCbAB`A@hBLfCCfCChCCjCClCCnBJhCD`CNhCDbCDdCDf0CDhCDj0CDlCDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlBBd0CGhC@n0BLlCGj0CGl0CGn0CH`0CHb0CHd0BM`0CLfCHfCHhCHjCHlCHnCI`CIbCIdCIfCIhBKjCAbBL`0000CIjCIlMn00CInCJ`A@bBFjBFnMhBAdA@`CJbCJdCJf`:CBj9`BLdCI`CHn`BBdCAjBMdAM`6C@jBOfBKbCAfBF`00BKnBLhCBbCBdCBfCBhDDnBOhBMhCN`DAhBMjCNbCKnCBjBOnBE`BFdCBlBG`DGnCNdCBnCNfCC`CCbCCdBMfDCbCKbBJjC@dC@bAB`0A@hC@fDE`CCfCChCCjCCl0CCnBJh0CD`CDbCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlDCjCFnCG`CGbCGdCGfBNlBBd0000000000000CGhC@nBLl0000000000CGjCGlCGnCH`CHbCHdBM`0000CLf0CHfCHhCHjCHlCHnCI`CIb0CIdCIfCIhBKj0000CAbBL`CIjCIlMn00000000000000000CInCJ`A@bD@lBFjBFn00Mh0000000000BAdA@`CJbCJdCJfD@`BL`000D@bD@fD@hAM`04MnDLn00ADj13310732CJ`CKb4422D@l66BLlD@nALd0`AIl1CHfBF`DA`AIn5BFnCAb`BBd`00MnBJlBMdBMf<4AJ`AOh10CAj<CIlDlCCd00CL`BLjD@`?BMh`C@b=>>==BMn6CCf`CNhBAnALdBJlCJhCBbCBhBF`DAl11``BHhAIdBBdMn21=9BE`BFdBG`CBnCC`CCbCCfCChCCjCClCCnBJhCD`CDbCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlBNlBBdCGhC@nCGjCGlCGnCH`CHbCHdBM`CHfCHlCHnCI`CIbCIdCIfCIhBKjCIlMnCInCJ`BFjBAdA@`CJfDB`0BKnBMfBBdBOd0CBdCBh`DBbCKjCAnCHhCKlCHjBLdBJhAB`CCf```=`BOhCD`BE`>=21Mn0CIhBGf`3BFd``CNfCKbBLh:CAjBMdAM`BLdC@jBOfBKbCAfBF`BKn:CBbCBdCBfCBhDDnBOhBMhCN`DAhBMjCNbCKnCBjBOnBE`BFdCBlBG`DGnCNdCBnCNfCC`CCbCCdBMfDCbCKbBJjC@dC@bAB`A@hC@fDE`CCfCChCCjCClCCnBJhCD`CDbCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlDCjCFnCG`CGbCGdCGfBNlBBdCGhC@nBLlCGjCGlCGnCH`CHbCHdBM`CLfCHfCHhCHjCHlCHnCI`CIbCIdCIfCIhBKjCAbBL`CIjCIlMnCInCJ`A@bD@lBFjBFnMhBAdA@`CJbCJdCJfAB`ACdBF`DA`A@hCAbBL```8``BBd``011CAjBMdAM`BLdC@jBOfBKbCAf=BKnBLhCBbCBdCBfCBhDDnBOhBMhCN`DAhBMjCNbCKnCBjBOnBE`BFdCBlBG`DGnCNdCBnCNfCC`CCbCCdBMfDCbCKbBJjC@dC@bAB`A@hC@fDE`CCfCChCCjCClCCnBJhCD`CDbCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlDCjCFnCG`CGbCGdCGfBNlBBdCGhC@nBLlCGjCGlCGnCH`CHbCHdBM`CLfCHfCHhCHjCHlCHnCI`CIbCIdCIfCIhBKjCAbBL`CIjCIlMnCInCJ`A@bD@lBFjBFnMhBAdA@`CJbCJdCJfBDd=67AM`>DDnDAhBBdBL`<DBfBMfMn0CCfBB`BFb3MhBFh;8C@nCDf`;`1BG`CHf<BJlC@d?`AJbBBd45`00`AJd1CKhCKjCAn4=4`74`7A@h5>AB`BAd`MnCIlBFbCM`35CDj4BG`;:9ALdBL`BFnD@`2DBlBMdBF`BMfDA`DBn3DC`0BLdBJh1BJjDCbCIj0BE``:9ALdBBdDCf=MnCE`?=:ABj00`BJlBMf6BFnBF`3CDd9`DChBG`DCjCIlMh>>6BKnCBfCKbCBhCCfCElBBdDC`00000000000000000000AId2Mn13CD`CDnCEfCFdF`Fh``6BF`DCb;`;BMh0BLl0=020=`==`1?1111CIl```BMd5BMfAHdBBdDDbBJlCIjCLfCHf`=7653`8=7AJf64DDd5CN``BAdCFbCHhCKlCHjCAn21`BMdBF`BMfAHdBBd1CBjCHlA@bDDbBJlCLfCHfDBbCKj>CHhCKlCHjCCh`=CKh5CAn5BG`0BKh1BBdBKlF`FhBJlCJhCBbCBfBLhCBdCBhDE`CCfBOh1BMdBMfAHnBBd==09CAbOjBAd33`DBbCKjCAnCKlBG`CHjMnCDj3;``3DDf<<BMhDKjCMlCMnDKlDDhAM`BLdBKbCBbCBfBOh;CN`BMjCNbCKnBOnBG`CNdCNfCCdCKbC@dC@bC@fBJhBLlCHhCHjBKjCAbMnBFnMhBAd32AJhBJlCCl6`05CBbCBf28888108888DDnDAhBLfC@jBOfC@dBBd0`0BL`AId0``AB`A@hCDd?BF`6CLfCHfCChF`FhC@bCIjBE`BFdCCdAIfBLdCIhBGf>CAbBBdCKhCKjCAn0CGbCGfDE`66`CBhCElCJ`BG`9DBb9CCf22Mn1BE`BFd?22````?9DCb0`CJdDDbBBdBF`8BFn88`1AJf3DDdBJlCKhCKjCAn>CChCDd0CCfDEf<Mn0C@b1111CJh:CBbCBfCBdCBh8CJ``AJj0BKhBBdBKlBL``BJlBF`BJj``5`BOd60BMh11``7`7`CAbAJl6BMd6BMf;CE`BLdDAl:>AJn?<?DEnBBd1010100010101010101010101010DF`CAl2CCd0130CFdCIjCJhCBbCBfBLhCBdCBhCCfCI`0DC`BLl??3BLfBF`00000DFbAK`0CN`BMjC@dC@b7CIj?DE`=1`BL`>9`DBbCKjCAnCHhCKlCHjMnBF`0CChCDdCD``AK`<4?C@fCN`BMjCNfC@bCMlBBdBFnAKbBJlBMd?BMf5AKdBF`7BJh8ACf692222CK`BLhCCfCIn1:68=<<5AKf=0=====`AHl;8:??80<MnCJhCBbCBfBOdBJlBFn022`2`2BBdBE`>>CFdBMdBF`BMfAKh68DFh9A@h8;`;;;;;CE`CAnCHn;``>`>`>`>`>Mn<BKh=BKjBL`0BKlBLdDCbBJh01`BMdBF`BMfAHdBBdDDbBJlBLlC@n=Mn8BKn86AKj5DFl066AKl7BFn`CG`CGdCDd`CHhCHj1CAnBF`CFn1CIlBMfD@`;AKn5DG`BK`BBdBOdBMd1DCbAB`CAf=BKnBLhCBbCBdCBfCBhCBjBE`BFdCBlBG`CBnCC`CCbCCdAB`A@hCCfCChCCjCClCCnBJhCD`CDbCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdCGfBNlBBdCGhC@nBLlCGjCGlCGnCH`CHbCHdBM`CHfCHhCHjCHlCHnCI`CIbCIdCIfCIhBKjCAbBL`CIjCIlMnCInCJ`A@bBFjBFnMhBAdA@`CJbCJdCJfBBdBMhCAnBG`CDfCDj5C@nCGjCGlCGnCH`CHbCHdBM`MnD@`CJ`BOd0DCbCDnCFdBL`CE`0BF`BFn000ABj00DGbBG`0CCd10CCh21AMn660AN`077B@h000ADnAE`1000CAjBMdAM`BLdC@jBOfBKbCAfBF`BKnBLhCBbCBdCBfCBhDDnBOhBMhCN`DAhBMjCNbCKnCBjBOnBE`BFdCBlBG`DGnCNdCBnCNfCC`CCbCCdBMfDCbCKbBJjC@dC@bAB`A@hC@fDE`CCfCChCCjCClCCnBJhCD`CDbCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlDCjCFnCG`CGbCGdCGfBNlBBdCGhC@nBLlCGjCGlCGnCH`CHbCHdBM`CLfCHfCHhCHjCHlCHnCI`CIbCIdCIfCIhBKjCAbBL`CIjCIl0Mn0CInCJ`A@bD@lBFjBFnMhBAdA@`CJbCJdCJf>D@`CAjBMdAM`BLdC@jBOfBKbCAfBF`BKnBLhCBbCBdCBfCBhDDnBOhBMhCN`DAhBMjCNbCKnCBjBOnBE`BFdCBlBG`DGnCNdCBnCNfCC`CCbCCdBMfDCbCKbBJjC@dC@bAB`A@hC@fDE`CCfCChCCjCClCCnBJhCD`CDbCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlDCjCFnCG`CGbCGdCGfBNlBBdCGhC@nBLlCGjCGlCGnCH`CHbCHdBM`CLfCHfCHhCHjCHlCHnCI`CIbCIdCIfCIhBKjCAbBL`CIjCIlMnCInCJ`A@bD@lBFjBFnMhBAdA@`CJbCJdCJfCCfBMh0BBd1DDfCFhCFjCFlMn>00000CCh11BMnCA`BLjBG`CDfCDj<C@nCGjCGlCGnCH`CHbCHdBM`??CAjBMdAM`BLdC@jBOfBKbCAfBF`BKnBLhCBbCBdCBfCBhDDnBOhBMhCN`DAhBMjCNbCKnCBjBOnBE`BFdCBlBG`DGnCNdCBnCNfCC`CCbCCdBMfDCbCKbBJjC@dC@bAB`A@hC@fDE`CCfCChCCjCClCCnBJhCD`CDbCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlDCjCFnCG`CGbCGdCGfBNlBBdCGhC@nBLlCGjCGlCGnCH`CHbCHdBM`CLfCHfCHhCHjCHlCHnCI`CIbCIdCIfCIhBKjCAbBL`CIjCIlMnCInCJ`A@bD@lBFjBFnMhBAdA@`CJbCJdCJfCf`BL`AHnBMdBF`BMfBBdBJl3432133Mn0>CCf3DGj0C@bCBhCEl`BLdBJhBFn0ALdMhCM`=CIhBGf4545BMdBF`BMfAKhBBdBJlDFh187DGl0CIjMnCAj:AM`BLdC@jBOfBKbCAf?BKnBLhCBbCBdCBfCBhDDnBOhBMhCN`DAhBMjCNbCKnCBjBOnBE`BFdCBlBG`DGnCNdCBnCNfCC`CCbCCdBMfDCbCKbBJjC@dC@bAB`A@hC@fDE`CCfCChCCjCClCCnBJhCD`CDbCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlDCjCFnCG`CGbCGdCGfBNlBBdCGhC@nBLlCGjCGlCGnCH`CHbCHdBM`CLfCHfCHhCHjCHlCHnCI`CIbCIdCIfCIhBKjCAbBL`CIjCIlMnCInCJ`A@bD@lBFjBFnMhBAdA@`CJbCJdCJf<CKhCKjCAn10CCbBG`CHj1?`CGbCGfCBjCHlA@bBLdCHhCBfBOhCNfCBbDKjDKlCKbCCf47BF`BJh11CN`BMjC@b5DE`5:CChCNbBOn1CKn1C@f:0BOh0CHhCHjCBb8BMh1CCf2:2:7BJj664331?=54543CBfCNfCKb4CN`C@b84846CNd4<97BAd<;;<;:CCh=CJh<<885BMj7;7;>BOh>3BF`=9=397082:97=0?141?=3?;9=0C@f41CBb0==:4;9?BMhCCf2?>=02?>=0CHhCHj47:64242=694CBf6BJh9336<6<8BFn0ALd145:ABj00000000000000000MnCDnCFd`22BBdCKhCKjCAn=`AL`DM`DMbDMd2102DMfDMhDMjDMl0DMnDN`DNbDNdDNfDNhDNjDNl0DNnDO`DOb15;4DOd:DOf4:DOhDOj0>DOlDMl240<4;02:5136229=??9<DOnE@`E@b0E@dE@f4E@hE@jE@lE@n3EA`528EAb1EAd11098432323570;5EAfEAhEAj0EAlEAnEB`EBbEBd01EBf1EBhEBjEBlEBnEC`ECb697DLfDLh0ECd00DLbDLd10ECfEChECj21EClECnED`EDb03421EDd0DHf00`00`0000000`0`0000``````````BIdBIf0`ALjALfALb``````````````````````````````````DHn000000000000000DI``C@l000000000000000DIb`0`00`0000000000000`00EDfEDhEDj32103210321032103321032103`210332103210321032103EDl00````````BNb0000CBjCKhCKjCKl3DBb213232114021320213230232DEn0000000000000132`433543`DIf0000``07777DId8111111111111111`11111111`DIn``DIh000000000`0000DIj11111211111DJ`0``0000CJj010100000101010100000110001010`001010101011``11110DJb`00000000000`0000AOn`JhElDl```````21AGd`2``3`0320```32````3`````3200``32`3`3200``0320``3230```00`40320``320```AOd`2DKjDKl``````7``653``653``653``653``3`444333AOj764``3``4B@dLb1010Al:97`:9`:``838```````````BAb`3`<;:`;`;:8;`;:88````80`;:8``;:8``;:8``;:8``8:8`88ALd0:0AMn0AN`0ANf3`AOh0`B@h000`1OjAOf7777733DlBAn9BB`::```4DKjDKl;;::7777<<<10<`````AOd`AOj10``7`````1010```````````D@bD@fD@h`CLn00000000000000000000000000000000000000000000000000`BIh0`DJd000000000000000000``BM`CGj00011111CHbCGn33`03`CH`414414222124444411111444124222CHd055355`51CGl443665555553555531446646633363631365636`1366616466364666366366664444246`4444446`1646`334446333333333664633133````DMfDMhDMjEAfEAhEAj0EAlEAnEB`EBbEBd01EBf1EBhEBjEBlEBnEC`ECb697ECfEChECj21EClECnED`EDb03421EDd0`CGlCH`0`0DJf000`00000000000000000000000000DJh000`00000000000000000000000000````CEh0`````````DJj00000000000000000000000000000`DGh000000000`0000``000000000ALn00`````DJnCAn000000000000000000`````AKf0````````````F`Fh10101022```BO`BOd0000000000000000`0000000`0`00`00000`0`0`0`0`00000`CAb0000``EDnEE`M```0``AIdBGd2````02AbBJl111111`11100`110010011101110001DKd35203521222212212112252152522222203522035222220352112524222422222555222222121522203522222222222222222222222222222222222222222222222222222222222222122211114222422215222222`203520352220BFb3233332203333232335333533332232232333323223333333333333333333333333333333333333333333333333333332315333533332`332233323332623333223312332232233333333323323322233333633331463333314633333314633333232221463333``Ed000000000000000000000```BKh`0BKlBn`210210210210``CB`Fn10CLj0`000000000000000000000000","f":"``````{{}b}`````````{{}d}````````{{fh}b}{{{f{{l{j}}}}c}{{A`{{l{j}}n}}}{{Af{{f{Ab}}}{{Ad{Ab}}}}}}{{{f{{l{Ah}}}}}d}{{{f{{l{c}}}}}AjAl}{{{l{c}}{l{c}}}{}Al}{{{f{{l{c}}}}e}{}Al{AnB`}}{{{f{{l{Bb}}}}{f{{l{Bb}}}}}}{{{l{Bb}}{l{Bb}}}}{{{f{{l{Bb}}}}{f{Bd}}}}{{{f{{l{Bf}}}}{f{{l{Bf}}}}}}{{{l{Bf}}{l{Bf}}}}{{{f{{l{Bf}}}}{f{{Bj{Bh}}}}}}{{{f{{l{Bl}}}}{f{{l{Bl}}}}}}{{{l{Bl}}{l{Bl}}}}{{{l{c}}e}{}Al{AnB`}}{{{f{{l{c}}}}{f{{l{c}}}}}{}Al}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}Bn}{{{f{{l{Bl}}}}{f{C`}}}Ab}{{{f{{l{c}}}}{f{C`}}}AbAl}{{{f{{l{Bb}}}}{f{C`}}}Ab}{{{f{{l{Bf}}}}{f{C`}}}Ab}{{{f{{l{Ah}}}}{f{C`}}}Ab}{{{f{{l{Cb}}}}{f{C`}}}Ab}{{{f{{l{{Cd{c}}}}}}{f{C`}}}AbCf}{{{f{{l{j}}}}{f{C`}}}Ab}{{{f{{l{Bl}}}}}d}{{{f{{l{Bl}}}}}{{Ch{d}}}}{{{f{{l{Cb}}}}}{{Db{{`{{D`{}{{Cj{{Ch{{Cn{Cl}}}}}}}}}}}}}}{{{f{{l{Ah}}}}}{{Db{{`{{D`{}{{Cj{{Ch{{Cn{Cl}}}}}}}}}}}}}}{{{f{{l{Ah}}}}Dd}{{Db{{`{{D`{}{{Cj{{Ch{{Cn{Cl}}}}}}}}}}}}}}{{{f{{l{Cb}}}}Dd}{{Db{{`{{D`{}{{Cj{{Ch{{Cn{Cl}}}}}}}}}}}}}}54{{{f{Df{l{c}}}}{f{{l{c}}}}}{{A`{bn}}}{{Dl{}{{Dh{Dj}}}}}}{{{f{{l{Bl}}}}c}{{l{Bl}}}{{Dn{{Ch{d}}}{{Ad{{Ch{d}}}}}}E`}}{{{f{{l{Ah}}}}c}{{l{Ah}}}{{Dn{{Ch{Ab}}}{{Ad{{Ch{Ab}}}}}}E`}}{{{f{{l{Bb}}}}c}{{l{Bb}}}{{Dn{{Ch{{f{Bd}}}}}{{Ad{{Ch{{Eb{Bd}}}}}}}}E`}}{{{f{{l{c}}}}e}{{l{c}}}Al{{Dn{Ch}{{Ad{Ch}}}}E`}}{{{f{{l{Bf}}}}c}{{l{Bf}}}{{Dn{{Ch{{f{{Bj{Bh}}}}}}}{{Ad{{Ch{{Eb{{Bj{Bh}}}}}}}}}}E`}}{{{f{{l{{Cd{c}}}}}}e}{{l{{Cd{c}}}}}Cf{{Dn{{Ch{{f{c}}}}}{{Ad{{Ch{c}}}}}}E`}}{{{f{{l{Ah}}}}c}{{l{Ah}}}{{Af{Ed}{{Ad{Ab}}}}}}{{{f{{l{Cb}}}}e}{{l{g}}}{}{{Af{{Ch{Ed}}}{{Ad{{Ch{c}}}}}}E`}Dl}{{{f{{l{Ah}}}}e}{{l{g}}}{}{{Af{{Ch{Ed}}}{{Ad{{Ch{c}}}}}}E`}Dl}{{{f{{l{Cb}}}}c}{{l{Cb}}}{{Af{Ed}{{Ad{Ab}}}}}}{{{f{{l{Ef}}}}c}Ab{{Dn{{f{Ab}}}{{Ad{Ab}}}}}}{{{f{{l{Eh}}}}c}Ab{{Dn{{f{Ab}}}{{Ad{Ab}}}}}}{{{l{c}}e}{{l{c}}}Al{{Dn{}{{Ad{}}}}E`}}{{{f{{l{c}}}}e}{{l{Bb}}}Dl{{Af{{f{DfEj}}}}}}{{{f{{l{Bf}}}}{f{Dn}}}{{l{Bf}}}}{{{f{{l{Bl}}}}{f{Dn}}}{{l{Bl}}}}{{{f{{l{Bb}}}}{f{Dn}}}{{l{Bb}}}}{{{f{{l{c}}}}{f{Dn}}}{{l{c}}}Al}{{{f{{l{Bb}}}}{f{Dn}}}{{l{c}}}Dl}{{{f{{l{Bf}}}}{f{Dn}}}{{l{c}}}Dl}{{{f{{l{c}}}}{f{Dn}}}{{l{e}}}AlDl}{{{f{{l{Bl}}}}{f{Dn}}}{{l{c}}}Dl}{{{f{{l{Bf}}}}c}{{l{Bf}}}{{Af{{f{{Bj{Bh}}}}}{{Ad{{f{{Bj{Bh}}}}}}}}}}{{{f{Df{l{c}}}}e}bAl{{Dn{}{{Ad{}}}}E`}}{{{f{{l{Bb}}}}c}{{l{Bb}}}{{Af{{f{Bd}}}{{Ad{{f{Bd}}}}}}}}{{{f{{l{c}}}}Elg}{{l{i}}}Dl{}{{Af{}{{Ad{e}}}}}Dl}{{{f{{l{Ah}}}}{f{Dn}}}{{A`{{l{Ah}}n}}}}{{{f{{l{Cb}}}}{f{Dn}}}{{A`{{l{Cb}}n}}}}{{{f{{l{c}}}}g{f{Df{Bj{e}}}}}bAl{}{{Dn{Ch{f{e}}}{{Ad{e}}}}}}{{{f{{l{{Cd{c}}}}}}g{f{Df{Bj{e}}}}}bCf{}{{Dn{{Ch{{f{c}}}}{f{e}}}{{Ad{e}}}}}}{{{f{{l{Bf}}}}e{f{Df{Bj{c}}}}}b{}{{Dn{{Ch{{f{{Bj{Bh}}}}}}{f{c}}}{{Ad{c}}}}}}{{{f{{l{Ah}}}}e{f{Df{Bj{c}}}}}b{}{{Dn{{Ch{Ab}}{f{c}}}{{Ad{c}}}}}}{{{f{{l{Bl}}}}e{f{Df{Bj{c}}}}}b{}{{Dn{{Ch{d}}{f{c}}}{{Ad{c}}}}}}{{{f{{l{Bb}}}}e{f{Df{Bj{c}}}}}b{}{{Dn{{Ch{{f{Bd}}}}{f{c}}}{{Ad{c}}}}}}{{{f{{l{Bf}}}}c}{{l{Bf}}}{{Dn{{f{{Bj{Bh}}}}}{{Ad{{Eb{{Bj{Bh}}}}}}}}E`}}{{{f{{l{Bl}}}}c}{{l{Bl}}}{{Dn{d}{{Ad{d}}}}E`}}{{{f{{l{{Cd{c}}}}}}e}{{l{{Cd{c}}}}}Cf{{Dn{{f{c}}}{{Ad{c}}}}E`}}{{{f{{l{Ah}}}}c}{{l{Ah}}}{{Dn{Ab}{{Ad{Ab}}}}E`}}{{{f{{l{c}}}}e}{{l{c}}}Al{{Dn{}{{Ad{}}}}E`}}{{{f{{l{Bb}}}}c}{{l{Bb}}}{{Dn{{f{Bd}}}{{Ad{{Eb{Bd}}}}}}E`}}{{{f{{l{Bb}}}}c}{{l{Bb}}}{{Af{En{f{Bd}}}{{Ad{En}}}}E`}}{{{f{{l{Bf}}}}F`}{{l{Fb}}}}{{{f{{l{Bb}}}}F`}{{l{Fb}}}}{{{f{{l{Bl}}}}F`}{{l{Fb}}}}{{{f{{l{Fd}}}}F`}{{l{Fb}}}}{{{f{{l{c}}}}F`}{{l{Fb}}}Al}{{{f{{l{j}}}}F`}{{l{Fb}}}}{{{f{{l{Bl}}}}{f{{Bj{Ff}}}}{f{Fh}}}{{A`{{l{Fb}}n}}}}{{{f{{l{Bb}}}}{f{{Bj{Ff}}}}{f{Fh}}}{{A`{{l{Fb}}n}}}}{{{f{{l{c}}}}{f{{Bj{Ff}}}}{f{Fh}}}{{A`{{l{Fb}}n}}}Al}{{{f{{l{Bf}}}}{f{{Bj{Ff}}}}{f{Fh}}}{{A`{{l{Fb}}n}}}}{{{f{{l{Fd}}}}{f{{Bj{Ff}}}}{f{Fh}}}{{A`{{l{Fb}}n}}}}{{{f{{l{Bf}}}}}{{A`{{l{Fb}}n}}}}{{{f{{l{Bl}}}}}{{A`{{l{Fb}}n}}}}{{{f{{l{{Cd{c}}}}}}}{{A`{{l{Fb}}n}}}Cf}{{{f{{l{c}}}}}{{A`{{l{Fb}}n}}}Al}{{{f{{l{Bb}}}}}{{A`{{l{Fb}}n}}}}`{{{f{{l{Cb}}}}}{{f{{l{Cb}}}}}}{{{f{{l{Bb}}}}}{{l{Bf}}}}{{{f{{l{Bf}}}}}{{f{{l{Bf}}}}}}{{{f{{l{Ah}}}}}{{f{{l{Ah}}}}}}{{{f{{l{c}}}}}{{f{{l{c}}}}}Dl}{{{f{{l{c}}}}}{{f{El}}}Dl}{{{f{{l{Bb}}}}}{{f{{l{Bb}}}}}}0{{{f{{l{Ah}}}}{f{{l{c}}}}{f{{l{e}}}}g}{{l{Ah}}}DlDl{{Af{{Ch{Ed}}ChCh}{{Ad{{Ch{Ab}}}}}}}}{{{l{Bl}}{l{Bl}}}}{{{f{{l{Bl}}}}{f{{l{Bl}}}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{}Fj}021210{f{{f{c}}}{}}0{{{f{Df}}}{{f{Dfc}}}{}}0``{{{f{{l{j}}}}{f{El}}}{{A`{Abn}}}}{{{f{{l{c}}}}e}{{l{g}}}Al{{Dn{}{{Ad{}}}}E`}Al}{{{f{{l{c}}}}{f{El}}}{{A`{Abn}}}Al}{{{f{{l{Ah}}}}{f{El}}}{{A`{Abn}}}}{{{f{{l{Bb}}}}{f{El}}}{{A`{Abn}}}}{{{f{{l{Bf}}}}{f{El}}}{{A`{Abn}}}}{{{f{{l{Bl}}}}{f{El}}}{{A`{Abn}}}}{{{f{{l{Cb}}}}{f{El}}}{{A`{Abn}}}}{{{f{{l{Fd}}}}{f{El}}}{{A`{Abn}}}}{{{f{{l{Bl}}}}{f{El}}Fl}{{A`{Abn}}}}{{{f{{l{j}}}}{f{El}}Fl}{{A`{Abn}}}}{{{f{{l{Ah}}}}{f{El}}Fl}{{A`{Abn}}}}{{{f{{l{c}}}}{f{El}}Fl}{{A`{Abn}}}Al}{{{f{{l{Bb}}}}{f{El}}Fl}{{A`{Abn}}}}{{{f{{l{Cb}}}}{f{El}}Fl}{{A`{Abn}}}}{{{f{{l{Fd}}}}{f{El}}Fl}{{A`{Abn}}}}{{{f{{l{Bf}}}}{f{El}}Fl}{{A`{Abn}}}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}Fn}{{{f{{l{c}}}}e}{{A`{Abn}}}FnB`}{{{f{{l{c}}}}}{{Gf{{G`{{Cn{Cl}}}}{Gd{{f{{Cn{Cl}}}}}{{Ad{Gb}}}}}}}Dl}{{{f{{l{c}}}}}{{`{{D`{}{{Cj{Gb}}}}}}}Dl}{{{f{{l{c}}}}}{{f{{Gh{{Cn{Cl}}}}}}}Dl}{{{f{Df{l{c}}}}}{{f{Df{Gh{{Cn{Cl}}}}}}}Dl}{{{f{{l{c}}}}}{{l{c}}}Dl}0{{f{f{Dfc}}}b{}}{fb}`{{{f{Df{l{c}}}}}b{DlAl}}`{fGj}{{{f{{l{c}}}}}{{A`{{f{Bj}}n}}}Al}{{{f{Df{l{c}}}}{f{{l{c}}}}Gl}bDl}{{{f{Df{l{c}}}}{f{{l{e}}}}Gl}bDlDl}{{{f{{l{c}}}}}{{`{Gn}}}Al}{{}{{l{c}}}Dl}{Gb{{f{c}}}{}}0{Gb{{f{Dfc}}}{}}0{{{l{c}}e}{}Al{AnB`}}{{{l{c}}{l{c}}}{}Al}{{{f{{l{c}}}}{f{{l{c}}}}}{}Al}{{{f{{l{c}}}}e}{}Al{AnB`}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}Bn}{{{f{Df{l{c}}}}}bDl}{Gbb}0{{{f{{l{c}}}}}{{l{c}}}Dl}{{{f{{l{c}}}}}{{f{El}}}Dl}{{{f{{l{Ah}}}}{f{{l{Ah}}}}}{{l{Bl}}}}{{{f{{l{Bb}}}}{f{Bd}}}{{l{Bl}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{{l{Bl}}}Al}{{{f{{l{c}}}}e}{{l{Bl}}}AlB`}{{{f{{l{Bl}}}}{f{{l{Bl}}}}}{{l{Bl}}}}{{{f{{l{Bb}}}}{f{{l{Bb}}}}}{{l{Bl}}}}{{{f{{l{Bf}}}}{f{{l{Bf}}}}}{{l{Bl}}}}{{{f{{l{Bf}}}}{f{{Bj{Bh}}}}}{{l{Bl}}}}{{{f{{l{j}}}}{f{{l{j}}}}}{{l{Bl}}}}{{{f{{l{Cb}}}}{f{{l{Cb}}}}}{{l{Bl}}}}8052764391{{{f{{l{Cb}}}}}{{A`{{Hd{Ab{Hb{H`}}}}n}}}}{{{f{{l{Ah}}}}}{{A`{{Hd{Ab{Hb{H`}}}}n}}}}{{{f{Df{l{c}}}}{f{{l{c}}}}}{{A`{bn}}}Al}{{{f{{l{j}}}}{f{Bd}}}{{A`{Abn}}}}{{{f{{l{j}}}}}{{Gh{Ab}}}}{{{f{{l{c}}}}}{{A`{{l{c}}n}}}Al}{{{f{{l{Bl}}}}d}{{A`{{l{Bl}}n}}}}{{{f{{l{Bf}}}}{f{{Bj{Bh}}}}}{{A`{{l{Bf}}n}}}}{{{f{{l{{Cd{c}}}}}}{f{{l{Bl}}}}}{{A`{{l{{Cd{c}}}}n}}}Cf}{{{f{{l{c}}}}{f{{l{Bl}}}}}{{A`{{l{c}}n}}}{{Dl{}{{Hf{Dj}}{Hh{Dj}}}}}}{{{f{{l{Bb}}}}{f{{l{Bl}}}}}{{A`{{l{Bb}}n}}}}{{{f{{l{Bf}}}}{f{{l{Bl}}}}}{{A`{{l{Bf}}n}}}}{{{f{{l{c}}}}}ChDl}{{{f{{l{c}}}}}{{Ch{Gb}}}Dl}`{{{f{{l{c}}}}{f{DfHj}}}{{A`{bHl}}}Al}{{{f{{l{Bb}}}}{f{DfHj}}}{{A`{bHl}}}}{{{f{{l{Bl}}}}{f{DfHj}}}{{A`{bHl}}}}{{{f{{l{Ah}}}}{f{DfHj}}}{{A`{bHl}}}}{{{f{{l{Bf}}}}{f{DfHj}}}{{A`{bHl}}}}{{{f{{l{{Cd{c}}}}}}{f{DfHj}}}{{A`{bHl}}}Cf}{{{f{{l{Cb}}}}{f{DfHj}}}{{A`{bHl}}}}{{{f{{l{c}}}}e}bDl{{Af{Ch}}}}{{{f{{l{Cb}}}}c}b{{Af{{Ch{Ed}}}}}}{{{f{{l{Ah}}}}c}b{{Af{{Ch{Ed}}}}}}{cc{}}{c{{l{e}}}Cl{{Dl{}{{Hn{c}}}}}}1{{Ddc}{{l{e}}}I`{{Dl{}{{Hn{}}}}Dl}}{{{f{{l{c}}}}e}{{l{c}}}{{Dl{}{{Hn{}}}}Dl}I`}{{Dd{Gh{{Cn{Cl}}}}}{{l{c}}}Dl}{{Dd{Gh{{Cn{Cl}}}}El}{{l{c}}}Dl}{{Dd{f{{Bj{Ff}}}}}{{A`{{l{j}}n}}}}{c{{l{e}}}{{I`{}{{Cj{{Hd{Gh{Ch{Ib}}}}}}}}}Al}{c{{l{Ah}}}{{I`{}{{Cj{{Ch{{Cn{Cl}}}}}}}}}}{c{{l{Ah}}}{{I`{}{{Cj{{Ch{Ab}}}}}}}}{e{{l{Ah}}}{{Id{Ab}}}{{I`{}{{Cj{c}}}}}}{e{{l{Bf}}}{{If{{Bj{Bh}}}}}{{I`{}{{Cj{c}}}}}}{e{{l{Bf}}}{{Ih{{Bj{Bh}}}}}{{I`{}{{Cj{{Ch{c}}}}}}}}{e{{l{Bb}}}{{If{Bd}}}{{I`{}{{Cj{c}}}}}}{e{{l{Bb}}}{{Ih{Bd}}}{{I`{}{{Cj{{Ch{c}}}}}}}}{c{{l{Bl}}}{{I`{}{{Cj{d}}}}}}{e{{l{{Cd{c}}}}}Cf{{I`{}{{Cj{{Ch{c}}}}}}}}{c{{l{Bl}}}{{I`{}{{Cj{{Ch{d}}}}}}}}{c{{l{e}}}{{I`{}{{Cj{Ch}}}}}Al}{{Dde}{{l{Bb}}}{{Ih{Bd}}}{{D`{}{{Cj{{Ch{c}}}}}}}}{{Dde}{{l{Bf}}}{{Ih{{Bj{Bh}}}}}{{D`{}{{Cj{{Ch{c}}}}}}}}{{Ddc}{{l{e}}}{{D`{}{{Cj{Ch}}}}}Al}{{Dde}{{l{{Cd{c}}}}}Cf{{D`{}{{Cj{{Ch{c}}}}}}}}{{Ddc}{{l{Bl}}}{{D`{}{{Cj{{Ch{d}}}}}}}}{e{{l{Fd}}}{{Ih{{Bj{Bh}}}}}{{I`{}{{Cj{{Ch{c}}}}}}}}>986<;?={e{{l{Fd}}}{{If{{Bj{Bh}}}}}{{I`{}{{Cj{c}}}}}};8{{Ddc}{{l{Bl}}}{{D`{}{{Cj{d}}}}}}{{Ddc}{{l{e}}}{{D`{}{{Cj{}}}}}Al}{{Dde}{{l{{Cd{c}}}}}Cf{{D`{}{{Cj{c}}}}}}{{Dde}{{l{Bb}}}{{Ih{Bd}}}{{D`{}{{Cj{c}}}}}}{{Dde}{{l{Bf}}}{{Ih{{Bj{Bh}}}}}{{D`{}{{Cj{c}}}}}}`{c{{l{e}}}{{Ij{}{{Cj{Ch}}}}}Al}{e{{l{Bb}}}{{If{Bd}}IlInJ`}{{Ij{}{{Cj{c}}}}}}{c{{l{Bl}}}{{Ij{}{{Cj{{Ch{d}}}}}}}}{c{{l{Bl}}}{{Ij{}{{Cj{d}}}}}}{e{{l{Bf}}}{{If{{Bj{Bh}}}}IlInJ`}{{Ij{}{{Cj{c}}}}}}{e{{l{Bb}}}{{Ih{Bd}}IlIn}{{Ij{}{{Cj{{Ch{c}}}}}}}}{e{{l{Bf}}}{{Ih{{Bj{Bh}}}}IlIn}{{Ij{}{{Cj{{Ch{c}}}}}}}}{c{{l{Ah}}}{{Ij{}{{Cj{{Ch{Ab}}}}}}}}{{cDdEl}{{l{Ah}}}{{Ij{}{{Cj{{Ch{Ab}}}}}}}}{{Ddc}{{A`{{l{j}}n}}}{{Jb{}{{Cj{{f{Ab}}}}}}Jd}}{{Dd{f{Bj}}}{{l{c}}}Al}{{Dd{f{{Bj{c}}}}}{{l{Bb}}}{{Ih{Bd}}}}{{Dd{f{{Bj{c}}}}}{{l{{Cd{c}}}}}Cf}{{Dd{f{{Bj{c}}}}}{{l{Bf}}}{{Ih{{Bj{Bh}}}}}}{{Dd{f{{Bj{d}}}}}{{l{Bl}}}}{{Dd{f{{Bj{{Ch{c}}}}}}}{{l{Bb}}}{{Ih{Bd}}}}{{Dd{f{{Bj{Ch}}}}}{{l{c}}}Al}{{Dd{f{{Bj{{Ch{d}}}}}}}{{l{Bl}}}}{{Dd{f{{Bj{{Ch{c}}}}}}}{{l{Bf}}}{{Ih{{Bj{Bh}}}}}}{{Dd{f{{Bj{{Ch{c}}}}}}}{{l{{Cd{c}}}}}Cf}{c{{l{e}}}{{Jf{}{{Cj{Ch}}}}}Al}{c{{l{Bl}}}{{Jf{}{{Cj{{Ch{d}}}}}}}}{{DdGh}{{l{c}}}Al}{{DdGh{Ch{Ib}}}{{l{c}}}Al}{{DddGb}{{l{Bl}}}}{{Dd{f{Bd}}Gb}{{l{Bb}}}}{{Dd{f{{Bj{Bh}}}}Gb}{{l{Bf}}}}{{Dd{f{{Bj{Bh}}}}Gb}{{l{Fd}}}}{{Dd{f{Ab}}Gb}{{l{Ah}}}}{{Dd{f{Ab}}Gb}{{l{Cb}}}}{{DdcGb}{{l{{Cd{c}}}}}Cf}{{DdGb}{{l{c}}}Al}{{DdGb}{{l{Cb}}}}{{DdGb}{{l{Bb}}}}{{DdGb}{{l{j}}}}{{DdGb}{{l{Ah}}}}{{DdGb}{{l{Fd}}}}{{DdGb}{{l{{Cd{c}}}}}Cf}{{DdGb}{{l{Bf}}}}7{{DdGb}{{l{Bl}}}}{{{f{{l{c}}}}Gb}{{l{c}}}Dl}{{DdGb{f{El}}Gb}{{l{Cb}}}}{{DdGb{f{El}}}{{l{Ah}}}}{{{f{{l{c}}}}Gb}ChDl}{{{f{{l{Cb}}}}Gb}{{A`{Jhn}}}}{{{f{{l{j}}}}Gb}{{A`{Jhn}}}}{{{f{{l{c}}}}Gb}{{A`{Jhn}}}Al}{{{f{{l{{Cd{c}}}}}}Gb}{{A`{Jhn}}}Cf}{{{f{{l{Bf}}}}Gb}{{A`{Jhn}}}}{{{f{{l{Fd}}}}Gb}{{A`{Jhn}}}}{{{f{{l{Bl}}}}Gb}{{A`{Jhn}}}}{{{f{{l{Ah}}}}Gb}{{A`{Jhn}}}}{{{f{{l{Bb}}}}Gb}{{A`{Jhn}}}}{{{f{{l{c}}}}Gb}JhAl}{{{f{{l{Bb}}}}Gb}Jh}{{{f{{l{Bl}}}}Gb}Jh}{{{f{{l{Ah}}}}Gb}Jh}{{{f{{l{Cb}}}}Gb}Jh}{{{f{{l{Fd}}}}Gb}Jh}{{{f{{l{j}}}}Gb}Jh}{{{f{{l{Bf}}}}Gb}Jh}{{{f{{l{{Cd{c}}}}}}Gb}JhCf}{{{f{{l{Ah}}}}Gb}{{Ch{Ab}}}}{{{f{{l{Cb}}}}Gb}{{Ch{Ab}}}}{{{f{{l{c}}}}}{{Ch{Jj}}}Dl}{{{f{{l{c}}}}}dDl}{{{f{{l{c}}}}}JlDl}{{{f{{l{Ah}}}}}Ab}{{{f{{l{Cb}}}}}Ab}{{{f{{l{c}}}}}ChDl}0{{{f{{l{{Cd{c}}}}}}Gb}{{Ch{{f{Jn}}}}}Cf}0{{{f{{l{j}}}}F`}{{A`{{l{Fd}}n}}}}{{{f{{l{j}}}}F`}{{A`{{K`{H`}}n}}}}{{{f{{l{c}}}}Gb}ChDl}{{{f{{l{Fd}}}}}Gb}{{{f{{l{Ah}}}}}Gb}{{{f{{l{Bb}}}}}Gb}{{{f{{l{Cb}}}}}Gb}{{{f{{l{Cb}}}}dd}{{A`{C`n}}}}{{{f{{l{c}}}}dd}{{A`{C`n}}}Al}{{{f{{l{Ah}}}}dd}{{A`{C`n}}}}{{{f{{l{Fd}}}}dd}{{A`{C`n}}}}{{{f{{l{{Cd{c}}}}}}dd}{{A`{C`n}}}Cf}{{{f{{l{Bf}}}}dd}{{A`{C`n}}}}{{{f{{l{Bb}}}}dd}{{A`{C`n}}}}{{{f{{l{Bl}}}}dd}{{A`{C`n}}}}{{{f{{l{c}}}}GbdGb}C`Fj}{{{f{{l{Bb}}}}{f{{l{Bb}}}}}{{l{Bl}}}}{{{f{{l{Ah}}}}{f{{l{Ah}}}}}{{l{Bl}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{{l{Bl}}}Al}{{{f{{l{Cb}}}}{f{{l{Cb}}}}}{{l{Bl}}}}{{{f{{l{Bf}}}}{f{{Bj{Bh}}}}}{{l{Bl}}}}{{{f{{l{Bb}}}}{f{Bd}}}{{l{Bl}}}}{{{f{{l{Bl}}}}{f{{l{Bl}}}}}{{l{Bl}}}}{{{f{{l{Bf}}}}{f{{l{Bf}}}}}{{l{Bl}}}}{{{f{{l{c}}}}e}{{l{Bl}}}AlB`}158324760{{{f{{l{c}}}}}dDl}{{{f{{l{c}}}}{Ch{Gb}}}{{l{c}}}Dl}{{}Gb}0{{GbKb{Ch{Kd}}}{{l{c}}}Al}{{{f{{l{Ah}}}}}{{f{El}}}}{{{f{{l{Cb}}}}}{{f{El}}}}{{{f{{l{c}}}}}{{Kh{{Kf{c}}}}}Dl}{{}c{}}0{{}Ff}{{{l{Kj}}}{{Kn{KlKj}}}}{{{l{L`}}Lb{Ch{Dd}}}{{Kn{LdL`}}}}{{{l{Lf}}{Ch{Gb}}Gb}{{A`{{Kn{LhLf}}n}}}}{{{l{Lf}}{Ch{Gb}}Gb}{{Kn{LhLf}}}}{{{l{L`}}Lb}{{Kn{LjL`}}}}{{{f{{l{Fd}}}}}}{{{f{{l{Cb}}}}}}{{{f{{l{Bb}}}}}}{{{f{{l{Bf}}}}}}{{{f{{l{{Cd{c}}}}}}}{}Cf}{{{f{{l{Bl}}}}}}{{{f{{l{c}}}}}{}Al}{{{f{{l{Ah}}}}}}{{{f{{l{c}}}}}{{`{IlInJbGnJf}}}Al}{{{l{c}}}AbDl}{{{l{Lf}}}Ab}{{{l{L`}}}{{Kn{LlL`}}}}{{{f{{l{c}}}}}dDl}{{{f{{l{c}}}}}{{l{Bl}}}Ln}000{{{f{{l{c}}}}}{{l{Bl}}}Dl}02{{{f{{l{c}}}}}M`Dl}{{{f{{l{c}}}}}{{`{Mb}}}Dl}{{{f{{l{c}}}}}{{`{{D`{}{{Cj{{l{c}}}}}}}}}Dl}{{{f{{l{Ah}}}}}{{`{{D`{}{{Cj{H`}}}}}}}}{{{f{{l{c}}}}}{{Gf{{G`{{Cn{Cl}}}}{Gd{{f{{Cn{Cl}}}}}{{Ad{{Ch{{f{Ib}}}}}}}}}}}Dl}`{{fc}Gj{{Ih{Bd}}}}{{{f{{l{c}}}}}ChDl}{{{f{{l{c}}}}}{{Ch{Gb}}}Dl}{{{f{{l{c}}}}}{{Md{c}}}Dl}{{{f{{l{c}}}}{f{{l{c}}}}}{}Al}{{{l{c}}{l{c}}}{}Al}{{{l{c}}}{}Al}{{{f{{l{c}}}}}{}Al}10{{{f{{l{c}}}}}GbDl}0{{{f{{l{c}}}}e}{{l{c}}}Al{AnMf}}00{{{f{{l{c}}}}Gb}{{l{c}}}Dl}{{{f{{l{c}}}}{f{{l{c}}}}}{{l{Bl}}}Al}{{{f{{l{c}}}}e}{{l{Bl}}}AlB`}{{{f{{l{Bb}}}}{f{{l{Bb}}}}}{{l{Bl}}}}{{{f{{l{Bb}}}}{f{Bd}}}{{l{Bl}}}}{{{f{{l{Ah}}}}{f{{l{Ah}}}}}{{l{Bl}}}}{{{f{{l{Bf}}}}{f{{Bj{Bh}}}}}{{l{Bl}}}}{{{f{{l{Bf}}}}{f{{l{Bf}}}}}{{l{Bl}}}}{{{f{{l{Cb}}}}{f{{l{Cb}}}}}{{l{Bl}}}}{{{f{{l{Bl}}}}{f{{l{Bl}}}}}{{l{Bl}}}}463720158{{{f{{l{Bl}}}}}{{Ch{d}}}}{{{f{{l{c}}}}}ChAl}{{{f{{l{Bf}}}}}Mh}{{{f{{l{Bl}}}}}Mh}{{{f{{l{c}}}}}MhAl}{{{f{{l{Bb}}}}}Mh}{{{f{{l{c}}}}}{{Ch{Aj}}}Al}{{{f{{l{Bl}}}}}{{Ch{Aj}}}}{{{f{{l{Ef}}}}}{{Ch{Aj}}}}{{{f{{l{Eh}}}}}{{Ch{Kb}}}}{{{f{{l{c}}}}}{{Ch{Aj}}}Fj}{{{f{{l{Ef}}}}}Mh}{{{f{{l{c}}}}}MhFj}{{{f{{l{Eh}}}}}Mh}{{{f{Df{l{c}}}}{Kf{c}}}bDl}`{{{f{{l{c}}}}}{{Mj{c}}}Dl}{{{f{{l{c}}}}}{{f{{Mn{{Ml{c}}}}}}}Dl}{{{f{{l{c}}}}}{{Ch{{Nb{N`}}}}}Dl}{{{f{Df{l{c}}}}}{{f{Df{Mn{{Ml{c}}}}}}}Dl}{{{f{{l{c}}}}}{{Mn{{Ml{c}}}}}Dl}{{{f{{l{c}}}}}ChAl}{{{f{{l{Bl}}}}}{{Ch{d}}}}{{{f{{l{c}}}}}{{Ch{Hd}}}Al}{{{f{{l{Bb}}}}}Mh}{{{f{{l{Bl}}}}}Mh}{{{f{{l{Bf}}}}}Mh}{{{f{{l{c}}}}}MhAl}{{Dd{f{Bj}}}{{l{c}}}Al}{{Dd{f{{Bj{Bh}}}}GbGb}{{l{Bl}}}}{{{f{{l{c}}}}e}{}Al{AnB`}}{{{l{c}}e}{}Al{AnB`}}{{{f{{l{c}}}}{f{{l{c}}}}}{}Al}{{{l{c}}{l{c}}}{}Al}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}Bn}{{{f{{l{c}}}}}GbDl}{{{f{{l{Bf}}}}}{{A`{Gbn}}}}{{{f{{l{c}}}}}{{A`{Gbn}}}Al}{{{f{{l{Bb}}}}}{{A`{Gbn}}}}{{{f{{l{c}}}}}{{f{Dd}}}Dl}{{Ddc}{{l{Bl}}}{{Ih{{Bj{d}}}}}}{{Ddc}{{l{Ef}}}{{Ih{{Bj{{Ch{Aj}}}}}}}}{{Ddc}{{l{Nd}}}{{Ih{{Bj{Nf}}}}}}{{Ddc}{{l{Fb}}}{{Ih{{Bj{Jj}}}}}}{{Ddc}{{l{Nh}}}{{Ih{{Bj{Kd}}}}}}{{Ddc}{{l{Nj}}}{{Ih{{Bj{Nl}}}}}}{{Ddc}{{l{Nn}}}{{Ih{{Bj{O`}}}}}}{{Ddc}{{l{Kj}}}{{Ih{{Bj{Ob}}}}}}{{Ddc}{{l{L`}}}{{Ih{{Bj{H`}}}}}}{{Ddc}{{l{Lf}}}{{Ih{{Bj{Od}}}}}}{{Ddc}{{l{Eh}}}{{Ih{{Bj{Kb}}}}}}{{Ddc}{{l{Ef}}}{{Ih{{Bj{Aj}}}}}}{{Ddc}{{l{Bf}}}{{Ih{{Bj{{Gh{Bh}}}}}}}}{{Ddc}{{l{Bb}}}{{Ih{{Bj{Ej}}}}}}{{Ddc}{{l{Bb}}}{{Ih{{Bj{{Ch{Ej}}}}}}}}{{Ddc}{{l{Bf}}}{{Ih{{Bj{{Ch{{Gh{Bh}}}}}}}}}}{{Ddc}{{l{Bl}}}{{Ih{{Bj{{Ch{d}}}}}}}}{{Ddc}{{l{Of}}}{{Ih{{Bj{{Ch{Bh}}}}}}}}{{Ddc}{{l{Nd}}}{{Ih{{Bj{{Ch{Nf}}}}}}}}{{Dde}{{l{{Cd{c}}}}}Cf{{Ih{{Bj{{Ch{c}}}}}}}}{{Dd{f{{Bj{c}}}}}{{l{{Cd{c}}}}}Cf}{{Ddc}{{l{Bf}}}{{Ih{{Bj{{Ch{{Eb{{Bj{Bh}}}}}}}}}}}}{{Ddc}{{l{Nh}}}{{Ih{{Bj{{Ch{Kd}}}}}}}}{{Ddc}{{l{Bf}}}{{Ih{{Bj{{Eb{{Bj{Bh}}}}}}}}}}{{Ddc}{{l{Bf}}}{{Ih{{Bj{{Ch{{f{{Bj{Bh}}}}}}}}}}}}{{Ddc}{{l{Nj}}}{{Ih{{Bj{{Ch{Nl}}}}}}}}{{Ddc}{{l{Nn}}}{{Ih{{Bj{{Ch{O`}}}}}}}}{{Ddc}{{l{Bf}}}{{Ih{{Bj{{f{{Bj{Bh}}}}}}}}}}{{Ddc}{{l{Bb}}}{{Ih{{Bj{{Ch{{Eb{Bd}}}}}}}}}}{{Ddc}{{l{Kj}}}{{Ih{{Bj{{Ch{Ob}}}}}}}}{{Ddc}{{l{L`}}}{{Ih{{Bj{{Ch{H`}}}}}}}}{{Ddc}{{l{Bb}}}{{Ih{{Bj{{Eb{Bd}}}}}}}}{{Ddc}{{l{Bb}}}{{Ih{{Bj{{Ch{{f{Bd}}}}}}}}}}{{Ddc}{{l{Lf}}}{{Ih{{Bj{{Ch{Od}}}}}}}}{{Ddc}{{l{Bb}}}{{Ih{{Bj{{f{Bd}}}}}}}}{{Dd{Oh{Jj}}}{{l{Fb}}}}{{Ddc}{{l{Eh}}}{{Ih{{Bj{{Ch{Kb}}}}}}}}{{Ddc}{{l{Of}}}{{Ih{{Bj{Bh}}}}}}{{Dd{Oh{Kd}}}{{l{Nh}}}}{{Dd{Oh{Ob}}}{{l{Kj}}}}{{Dd{Oh{H`}}}{{l{L`}}}}{{Ddc}{{l{Fb}}}{{Ih{{Bj{{Ch{Jj}}}}}}}}{Dd{{l{{Cd{c}}}}}Cf}{{{f{{l{j}}}}GbGb}{{l{j}}}}{{{f{{l{{Cd{c}}}}}}GbGb}{{l{{Cd{c}}}}}Cf}{{{f{{l{Cb}}}}GbGb}{{l{Cb}}}}{{{f{{l{c}}}}GbGb}{{l{c}}}Al}{{{f{{l{Bl}}}}GbGb}{{l{Bl}}}}{{{f{{l{Bb}}}}GbGb}{{l{Bb}}}}{{{f{{l{Bf}}}}GbGb}{{l{Bf}}}}{{{f{{l{Fd}}}}GbGb}{{l{Fd}}}}{{{f{{l{Ah}}}}GbGb}{{l{Ah}}}}{{Dd{Gh{c}}}{{l{{Cd{c}}}}}Cf}{{Dd{Gh{c}}Ib}{{l{{Cd{c}}}}}Cf}{{DdGh}{{l{c}}}Al}{{{Mn{Oj}}{Gh{{Cn{Cl}}}}JjJj}{{l{c}}}Dl}{{{f{{l{c}}}}}{{l{c}}}Ln}{{{l{Bl}}}}{{{f{{l{Bl}}}}}}{{{f{{l{Bf}}}}{f{{Bj{Bh}}}}}{{l{Bl}}}}{{{f{{l{Cb}}}}{f{{l{Cb}}}}}{{l{Bl}}}}{{{f{{l{Bb}}}}{f{Bd}}}{{l{Bl}}}}{{{f{{l{c}}}}e}{{l{Bl}}}AlB`}{{{f{{l{Bf}}}}{f{{l{Bf}}}}}{{l{Bl}}}}{{{f{{l{j}}}}{f{{l{j}}}}}{{l{Bl}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{{l{Bl}}}Al}{{{f{{l{Bl}}}}{f{{l{Bl}}}}}{{l{Bl}}}}{{{f{{l{Bb}}}}{f{{l{Bb}}}}}{{l{Bl}}}}{{{f{{l{Ah}}}}{f{{l{Ah}}}}}{{l{Bl}}}}93{{{f{{l{Cb}}}}{f{{l{Cb}}}}}}7613528{{{f{{l{c}}}}}GbDl}`{{{f{{l{Ah}}}}}{{A`{{Hb{H`}}n}}}}{{{f{{l{Cb}}}}}{{A`{{Hb{H`}}n}}}}`{{{f{{l{Bb}}}}}{{`{{Ol{}{{Cj{{Ch{{f{Bd}}}}}}}}}}}}{{{f{{l{Ah}}}}}{{`{{Ol{}{{Cj{{Ch{Ab}}}}}}}}}}{{{f{Df{l{Ah}}}}}{{`{On}}}}{{{f{{l{Bb}}}}}{{`{On}}}}{{{f{{l{c}}}}}MhAl}{{{f{Df{l{c}}}}}bDl}{{{f{{l{c}}}}AjA@`}{{A`{{Ch{Aj}}n}}}Fj}{{{f{{l{Ef}}}}AjA@`}{{A`{{Ch{Aj}}n}}}}{{{f{{l{Eh}}}}AjA@`}{{A`{{Ch{Kb}}n}}}}{{{f{{l{Ef}}}}AjA@`}{{A`{Mhn}}}}{{{f{{l{c}}}}AjA@`}{{A`{Mhn}}}Fj}{{{f{{l{Eh}}}}AjA@`}{{A`{Mhn}}}}{{DdGbAj}{{A`{{l{Bl}}n}}}}{{DdGbAjAj}{{A`{{l{c}}n}}}Al}{{DdGb}{{l{c}}}Al}{{DdGbAjAj}{{l{c}}}Al}{{{f{{l{c}}}}}{{l{c}}}Dl}{{{f{{l{c}}}}}{{f{Oj}}}Dl}{{{f{{l{Fb}}}}}Ab}{{{f{{l{Kj}}}}}Ab}{{{f{{l{Nj}}}}}Ab}{{{f{{l{Eh}}}}}Ab}{{{f{{l{Of}}}}}Ab}{{{f{{l{L`}}}}}Ab}{{{f{{l{Nn}}}}}Ab}{{{f{{l{Ef}}}}}Ab}{{{f{{l{Ah}}}}}Ab}{{{f{{l{Nd}}}}}Ab}{{{f{{l{Nh}}}}}Ab}7908263541:{{{l{c}}{l{c}}}{}Al}{{{f{{l{c}}}}e}{}Al{AnB`}}{{{l{c}}e}{}Al{AnB`}}{{{f{{l{c}}}}{f{{l{c}}}}}{}Al}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}Bn}{{{f{Df{l{c}}}}Dd}bDl}{{{f{{l{Bf}}}}}{{l{Bf}}}}{{{f{{l{{Cd{c}}}}}}}{{l{{Cd{c}}}}}Cf}{{{f{{l{Cb}}}}}{{l{Cb}}}}{{{f{{l{c}}}}}{{l{c}}}Al}{{{f{{l{Bb}}}}}{{l{Bb}}}}{{{f{{l{Bl}}}}}{{l{Bl}}}}{{{f{{l{Fd}}}}}{{l{Fd}}}}{{{f{{l{Ah}}}}}{{l{Ah}}}}{{{f{{l{c}}}}{f{Dn}}A@b}{{A`{Abn}}}Al}{{{f{{l{c}}}}Gbe}{{A`{{l{c}}n}}}Ln{{Af{{f{Df{l{c}}}}}{{Ad{Ch}}}}}}{{{f{{l{c}}}}Ajdd{Ch{Kd}}}{{A`{{l{c}}n}}}Dl}{{{f{{l{c}}}}Gbdd{Ch{Kd}}}{{A`{{l{c}}n}}}Dl}{{{f{{l{Bb}}}}{f{{Bj{Jj}}}}c}{{A`{Abn}}}{{I`{}{{Cj{{Ch{{f{Bd}}}}}}}}}}{{{f{{l{Bl}}}}{f{{Bj{Jj}}}}c}{{A`{Abn}}}{{I`{}{{Cj{{Ch{d}}}}}}}}{{{f{Df{l{c}}}}{f{{Bj{Jj}}}}e}{{A`{Abn}}}A@d{{I`{}{{Cj{Ch}}}}}}{{{f{{l{Bb}}}}c{Ch{{f{Bd}}}}}{{A`{{l{Bb}}n}}}{{I`{}{{Cj{Jj}}}}}}{{{f{{l{c}}}}eCh}{{A`{{l{c}}n}}}Al{{I`{}{{Cj{Jj}}}}}}{{{f{{l{Bl}}}}c{Ch{d}}}{{A`{{l{Bl}}n}}}{{I`{}{{Cj{Jj}}}}}}{{{f{{l{Bf}}}}c{Ch{{f{{Bj{Bh}}}}}}}{{A`{{l{Bf}}n}}}{{I`{}{{Cj{Jj}}}}}}{{{f{{l{Bb}}}}ce}{{A`{{l{Bb}}n}}}{{I`{}{{Cj{Jj}}}}}{{Dn{{Ch{{f{Bd}}}}}{{Ad{{Ch{Ej}}}}}}}}{{{f{{l{c}}}}eg}{{A`{{l{c}}n}}}Al{{I`{}{{Cj{Jj}}}}}{{Dn{Ch}{{Ad{Ch}}}}}}{{{f{{l{Bl}}}}ce}{{A`{{l{Bl}}n}}}{{I`{}{{Cj{Jj}}}}}{{Dn{{Ch{d}}}{{Ad{{Ch{d}}}}}}}}{{{f{{l{Bf}}}}ce}{{A`{{l{Bf}}n}}}{{I`{}{{Cj{Jj}}}}}{{Dn{{Ch{{f{{Bj{Bh}}}}}}}{{Ad{{Ch{{Gh{Bh}}}}}}}}}}{{{f{{l{Bl}}}}{f{{l{Bl}}}}{Ch{d}}}{{A`{{l{Bl}}n}}}}{{{f{{l{Bf}}}}{f{{l{Bl}}}}{Ch{{f{{Bj{Bh}}}}}}}{{A`{{l{Bf}}n}}}}{{{f{{l{Bb}}}}{f{{l{Bl}}}}{Ch{{f{Bd}}}}}{{A`{{l{Bb}}n}}}}{{{f{{l{c}}}}{f{{l{Bl}}}}Ch}{{A`{{l{c}}n}}}Al}{{{f{Df{l{Ah}}}}}b}{{{f{Df{l{c}}}}d}bDl}{{{f{Df{l{Ah}}}}El}b}{{{f{Df{l{c}}}}Jj}bDl}{{{f{Df{l{c}}}}M`}bDl}{{{f{{l{Bl}}}}H`}{{l{Bl}}}}{{{f{{l{Ah}}}}H`}{{l{Ah}}}}{{{f{{l{j}}}}H`}{{l{j}}}}{{{f{{l{c}}}}H`}{{l{c}}}Al}{{{f{{l{Bb}}}}H`}{{l{Bb}}}}{{{f{{l{{Cd{c}}}}}}H`}{{l{{Cd{c}}}}}Cf}{{{f{{l{Bf}}}}H`}{{l{Bf}}}}{{{f{{l{Cb}}}}H`}{{l{Cb}}}}{{{f{{l{Fd}}}}H`}{{l{Fd}}}}{{{f{{l{Bf}}}}H`{Ch{{f{{Bj{Bh}}}}}}}{{l{Bf}}}}{{{f{{l{Bl}}}}H`{Ch{d}}}{{l{Bl}}}}{{{f{{l{{Cd{c}}}}}}H`{Ch{{Cd{c}}}}}{{l{{Cd{c}}}}}Cf}{{{f{{l{Bb}}}}H`{Ch{{f{Bd}}}}}{{l{Bb}}}}{{{f{{l{Fd}}}}H`{Ch{{f{{Bj{Bh}}}}}}}{{l{Fd}}}}{{{f{{l{Cb}}}}H`{Ch{{f{Ab}}}}}{{l{Cb}}}}{{{f{{l{c}}}}H`Ch}{{l{c}}}Al}{{{f{{l{Ah}}}}H`{Ch{{f{Ab}}}}}{{l{Ah}}}}{{{f{Df{l{c}}}}}bDl}{{{f{{l{c}}}}H`Gb}{{l{c}}}Dl}0{{{f{{l{Fd}}}}d}{{l{Fd}}}}{{{f{{l{Bb}}}}d}{{l{Bb}}}}{{{f{{l{c}}}}d}{{l{c}}}Al}{{{f{{l{Bl}}}}d}{{l{Bl}}}}{{{f{{l{j}}}}d}{{l{j}}}}{{{f{{l{Bf}}}}d}{{l{Bf}}}}{{{f{{l{Bb}}}}F`}{{l{Bb}}}}{{{f{{l{j}}}}F`}{{l{j}}}}{{{f{{l{Bl}}}}F`}{{l{Bl}}}}{{{f{{l{c}}}}F`}{{l{c}}}Al}{{{f{{l{Bf}}}}F`}{{l{Bf}}}}{{{f{{l{Fd}}}}F`}{{l{Fd}}}}{{{f{{l{c}}}}H`}{{Hd{{l{c}}{l{c}}}}}Dl}0{{{f{{l{c}}}}Bh}{{Ch{Aj}}}Al}{{{f{{l{c}}}}Bh}MhFj}{{{f{{l{Eh}}}}Bh}Mh}{{{f{{l{Ef}}}}Bh}Mh}{{{f{{l{j}}}}}{{f{{Bj{Oj}}}}}}{{{l{c}}{l{c}}}{}Al}{{{f{{l{c}}}}{f{{l{c}}}}}{}Al}{{{l{c}}e}{}Al{AnB`}}{{{f{{l{c}}}}e}{}Al{AnB`}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}Bn}{{{f{{l{Bl}}}}}{{Ch{Jj}}}}{{{f{{l{c}}}}}ChAl}{{{f{{l{Bl}}}}}Mh}{{{f{{l{Bf}}}}}Mh}{{{f{{l{c}}}}}MhAl}{{{f{{l{c}}}}{Ch{Gb}}}{{l{c}}}Dl}{{{f{{l{c}}}}{f{e}}}{{A`{{l{c}}n}}}Dl{{Ih{{Bj{Jj}}}}A@f}}{{{f{{l{c}}}}{f{{l{Fb}}}}}{{A`{{l{c}}n}}}Dl}{{{f{{l{c}}}}{f{{Bj{A@h}}}}M`}{{l{c}}}Dl}{{{f{{l{c}}}}{f{{Bj{A@h}}}}}{{l{c}}}Dl}{{{f{{l{c}}}}{f{e}}}{{l{c}}}{{Dl{}{{Hf{Dj}}{A@j{Dj}}}}Dl}{{Ih{{Bj{Jj}}}}A@f}}{{{f{{l{j}}}}{f{c}}}{{l{j}}}{{Ih{{Bj{Jj}}}}A@f}}{{{f{{l{j}}}}{f{{l{Fb}}}}}{{l{j}}}}{{{f{{l{Bb}}}}{f{c}}}{{l{Bb}}}{{Ih{{Bj{Jj}}}}A@f}}{{{f{{l{Bf}}}}{f{c}}}{{l{Bf}}}{{Ih{{Bj{Jj}}}}A@f}}{{{f{{l{Bb}}}}{f{{l{Fb}}}}}{{l{Bb}}}}{{{f{{l{Bf}}}}{f{{l{Fb}}}}}{{l{Bf}}}}{{{f{{l{c}}}}{f{{l{Fb}}}}}{{l{c}}}{{Dl{}{{Hf{Dj}}{A@j{Dj}}}}Dl}}`{{{f{{l{c}}}}dA@l}{{Gh{{Gh{A@n}}}}}Dl}{{{f{{l{c}}}}}{{l{c}}}Ln}{{{f{{l{Bb}}}}Gb}{{A`{Abn}}}}{{{f{Df{l{Ah}}}}El}b}{{{f{Df{l{Cb}}}}El}b}{{{f{{l{c}}}}}{{A`{{AAf{{AA`{f}}{AAd{{AAb{Gb}}}}}}n}}}Al}{{{f{{l{Ah}}}}}{{A`{{AAf{AAh{AAd{{AAb{Gb}}}}}}n}}}}{fc{}}{{{f{{l{Bf}}}}}{{l{Bb}}}}{{{f{{l{c}}}}}{{Gh{Ch}}}Al}{{{f{{l{c}}}}}{{AAj{Gh{Gh{Ch}}}}}Al}{{{f{{l{c}}}}{f{{l{c}}}}}{}Al}{{{l{c}}{l{c}}}{}Al}{{{f{{l{c}}}}}{}Al}{{{l{c}}}{}Al}10{{{f{{l{Ah}}}}c}{{A`{{l{Ah}}n}}}{{Af{Ed}{{Ad{{A`{Abn}}}}}}}}{{{f{{l{Ah}}}}e}{{A`{{l{g}}n}}}{}{{Af{{Ch{Ed}}}{{Ad{{A`{{Ch{c}}n}}}}}}E`}Dl}{{{f{{l{Cb}}}}e}{{A`{{l{g}}n}}}{}{{Af{{Ch{Ed}}}{{Ad{{A`{{Ch{c}}n}}}}}}E`}Dl}{{{f{{l{Cb}}}}c}{{A`{{l{Cb}}n}}}{{Af{Ed}{{Ad{{A`{Abn}}}}}}}}{{{f{{l{Cb}}}}c}{{A`{{l{Ah}}n}}}{{Af{Ed}{{Ad{{A`{Abn}}}}}}}}{{{f{{l{j}}}}c}{{A`{{l{j}}n}}}{{Af{{f{Ab}}}{{Ad{{A`{Abn}}}}}}}}{{{f{{l{c}}}}g}{{A`{{l{Bb}}e}}}Dl{}{{Af{{f{DfEj}}}{{Ad{{A`{be}}}}}}}}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dl{}{}{{Af{}{{Ad{{A`{eg}}}}}}}Dl}{c{{A`{e}}}{}{}}0{{Ddg}{{A`{{l{i}}e}}}Cl{}{{I`{}{{Cj{{A`{ce}}}}}}}{{Dl{}{{Hn{c}}}}Dl}}{{}{{A`{c}}}{}}0{{{f{{l{Ah}}}}{f{{l{c}}}}e}{{A`{{l{Ah}}n}}}Dl{{Af{{Ch{Ed}}Ch}{{Ad{{A`{{Ch{Ab}}n}}}}}}}}{fAAl}0{{{f{{l{{Cd{c}}}}}}}{{A`{{l{{Cd{c}}}}n}}}Cf}{{{f{{l{Bf}}}}}{{A`{{l{Bf}}n}}}}{{{f{{l{Bl}}}}}{{A`{{l{Bl}}n}}}}{{{f{{l{c}}}}}{{A`{{l{c}}n}}}Al}{{{f{{l{Bb}}}}}{{A`{{l{Bb}}n}}}}{{{l{j}}}AAn}{{{f{{l{c}}}}{f{Ab}}}{{A`{{f{{l{c}}}}n}}}Dl}{{{f{Df{l{c}}}}}bDl}{{{f{{l{c}}}}Gb}{}Dl}{{{f{{l{c}}}}Bh}{{Ch{Aj}}}Al}{{{f{{l{c}}}}Bh}MhFj}{{{f{{l{Eh}}}}Bh}Mh}{{{f{{l{Ef}}}}Bh}Mh}{{{f{{l{Bl}}}}A@l{f{Df{Gh{Kd}}}}}{{A`{bn}}}}{{{f{{l{Lf}}}}A@l{f{Df{Gh{Kd}}}}}{{A`{bn}}}}{{{f{{l{Of}}}}A@l{f{Df{Gh{Kd}}}}}{{A`{bn}}}}{{{f{{l{Kj}}}}A@l{f{Df{Gh{Kd}}}}}{{A`{bn}}}}{{{f{{l{Nn}}}}A@l{f{Df{Gh{Kd}}}}}{{A`{bn}}}}{{{f{{l{Ef}}}}A@l{f{Df{Gh{Kd}}}}}{{A`{bn}}}}{{{f{{l{Nj}}}}A@l{f{Df{Gh{Kd}}}}}{{A`{bn}}}}{{{f{{l{{Cd{c}}}}}}A@l{f{Df{Gh{Kd}}}}}{{A`{bn}}}Cf}{{{f{{l{Nd}}}}A@l{f{Df{Gh{Kd}}}}}{{A`{bn}}}}{{{f{{l{L`}}}}A@l{f{Df{Gh{Kd}}}}}{{A`{bn}}}}{{{f{{l{Eh}}}}A@l{f{Df{Gh{Kd}}}}}{{A`{bn}}}}{{{f{{l{Bf}}}}A@l{f{Df{Gh{Kd}}}}}{{A`{bn}}}}{{{f{{l{Bb}}}}A@l{f{Df{Gh{Kd}}}}}{{A`{bn}}}}{{{f{{l{Fd}}}}A@l{f{Df{Gh{Kd}}}}}{{A`{bn}}}}{{{f{{l{Nh}}}}A@l{f{Df{Gh{Kd}}}}}{{A`{bn}}}}{{{f{{l{Fb}}}}A@l{f{Df{Gh{Kd}}}}}{{A`{bn}}}}{{{f{{l{Nh}}}}A@l{f{Df{Bj{Kd}}}}}{{A`{bn}}}}{{{f{{l{Nj}}}}A@l{f{Df{Bj{Kd}}}}}{{A`{bn}}}}{{{f{{l{Lf}}}}A@l{f{Df{Bj{Kd}}}}}{{A`{bn}}}}{{{f{{l{{Cd{c}}}}}}A@l{f{Df{Bj{Kd}}}}}{{A`{bn}}}Cf}{{{f{{l{Kj}}}}A@l{f{Df{Bj{Kd}}}}}{{A`{bn}}}}{{{f{{l{Nd}}}}A@l{f{Df{Bj{Kd}}}}}{{A`{bn}}}}{{{f{{l{Nn}}}}A@l{f{Df{Bj{Kd}}}}}{{A`{bn}}}}{{{f{{l{Eh}}}}A@l{f{Df{Bj{Kd}}}}}{{A`{bn}}}}{{{f{{l{L`}}}}A@l{f{Df{Bj{Kd}}}}}{{A`{bn}}}}{{{f{{l{Fd}}}}A@l{f{Df{Bj{Kd}}}}}{{A`{bn}}}}{{{f{{l{Ef}}}}A@l{f{Df{Bj{Kd}}}}}{{A`{bn}}}}{{{f{{l{Fb}}}}A@l{f{Df{Bj{Kd}}}}}{{A`{bn}}}}{{{f{{l{Bb}}}}A@l{f{Df{Bj{Kd}}}}}{{A`{bn}}}}{{{f{{l{Of}}}}A@l{f{Df{Bj{Kd}}}}}{{A`{bn}}}}{{{f{{l{Bl}}}}A@l{f{Df{Bj{Kd}}}}}{{A`{bn}}}}{{{f{{l{Bf}}}}A@l{f{Df{Bj{Kd}}}}}{{A`{bn}}}}{{}c{}}0{{{f{{l{Cb}}}}}Gb}{{Ddc}{{l{e}}}Cl{{Dl{}{{Hn{c}}}}Dl}}{{{f{{l{e}}}}c}{{l{e}}}Cl{{Dl{}{{Hn{c}}}}Dl}}{{{f{{l{c}}}}{Gh{{Cn{Cl}}}}}{{l{c}}}Dl}{{{l{c}}Dd}{{l{c}}}Dl}{{{f{{Bj{AB`}}}}e}c{}{{ABb{{f{{l{Fb}}}}}{{Ad{c}}}}}}{{{l{j}}{Ch{Ib}}}{{l{j}}}}{{{l{j}}{l{Bl}}}{{l{j}}}}{{{f{{l{c}}}}M`}{{l{c}}}Dl}{{{f{{l{c}}}}}{}Al}{{{l{c}}}{}Al}{{{l{c}}{l{c}}}{}Al}{{{f{{l{c}}}}{f{{l{c}}}}}{}Al}23103232013232102332103232012323{{{f{{l{Ah}}}}{f{{l{c}}}}e}{{l{Ah}}}Dl{{Af{{Ch{Ed}}Ch}{{Ad{{Ch{Ab}}}}}}}}{{{f{{l{Cb}}}}{f{{l{c}}}}e}{{l{Cb}}}Dl{{Af{{Ch{Ed}}Ch}{{Ad{{Ch{Ab}}}}}}}}{{{f{Df{l{j}}}}{f{{l{j}}}}}b}{{{f{{l{c}}}}{f{{l{Bl}}}}{f{{l{c}}}}}{{A`{{l{c}}n}}}{{Dl{}{{A@j{Dj}}}}}}{{{f{{l{j}}}}{f{{l{Bl}}}}{f{{l{j}}}}}{{A`{{l{j}}n}}}}````{{{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}}e{}{}{}}{{{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}c}e{}{}{}}{{c{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}}e{}{}{}}{{{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}}g{}{}{}}{{{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}c}g{}{}{}}{{c{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}}g{}{}{}}{{{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}}e{}{}{}}65654654650654654````````````````{{fh}b}000{{{f{DfABl}}{f{Cl}}}b}{{{f{DfABl}}}b}{{{f{DfABn}}}b}{{{f{DfAC`}}c}b{{D`{}{{Cj{{Ch{d}}}}}}Jf}}{{{f{Df{ACb{c}}}}e}bAl{{D`{}{{Cj{Ch}}}}Jf}}{{{f{Df{ACb{c}}}}e}bAl{{D`{}{{Cj{}}}}Jf}}{{{f{DfACd}}}b}{{{f{DfACf}}}b}65{{{f{DfACh}}}b}{{{f{DfACj}}}b}{{{f{DfAC`}}}b}{{{f{DfACl}}}b}{{{f{Df{ACb{c}}}}}bAl}{{{f{Df{ACn{c}}}}}b{AD`A@f}}{{{f{DfADb}}}b}{{{f{DfADd}}}b}{{{f{Df{ADf{c}}}}}bAl}{{{f{DfABl}}{Ch{{f{Cl}}}}}b}{{{f{DfABl}}{Ch{{f{Ab}}}}}{{A`{bn}}}}{{{f{DfACd}}{Ch{{f{Ab}}}}}{{A`{bn}}}}{{{f{Df{ACb{c}}}}{Ch{{f{Bj}}}}}bAl}{{{f{Df{ACn{c}}}}{Ch{e}}}b{AD`A@f}{{Ih{c}}}}{{{f{DfACf}}{Ch{c}}}b{}}{{{f{DfACd}}{f{Ab}}}{{A`{bn}}}}{{{f{DfABl}}{f{Ab}}}{{A`{bn}}}}{{{f{DfABn}}{f{Ab}}}{{A`{bn}}}}{{{f{DfACh}}{f{Ab}}}{{A`{bn}}}}{{{f{DfACj}}{f{Ab}}}{{A`{bn}}}}{{{f{DfAC`}}{f{Ab}}}{{A`{bn}}}}{{{f{DfACl}}{f{Ab}}}{{A`{bn}}}}{{{f{Df{ACb{c}}}}{f{Ab}}}{{A`{bn}}}Al}{{{f{Df{ACb{c}}}}{f{Bj}}}bAl}{{{f{DfACh}}c}b{{D`{}{{Cj{{Ch{{f{Bd}}}}}}}}Jf}}{{{f{DfACj}}c}b{{D`{}{{Cj{{Ch{{f{{Bj{Bh}}}}}}}}}}Jf}}{{{f{DfACf}}c}b{}}{{{f{Df{ACn{c}}}}e}b{AD`A@f}{{Ih{c}}}}{{{f{DfADb}}d}b}{{{f{Df{ADf{c}}}}}bAl}{{{f{DfACh}}c}b{{D`{}{{Cj{{f{Bd}}}}}}}}{{{f{DfACj}}c}b{{D`{}{{Cj{{f{{Bj{Bh}}}}}}}}}}{f{{f{c}}}{}}0000000000{{{f{Df}}}{{f{Dfc}}}{}}0000000000`{{{f{{ACn{c}}}}}{{ACn{c}}}{AD`A@f}}{{{f{ADb}}}ADb}{{{f{ADd}}}ADd}{{{f{{ADf{c}}}}}{{ADf{c}}}{JdAl}}{{f{f{Dfc}}}b{}}000{fb}000{{}ABl}{{}ABn}{Gb{{f{c}}}{}}0000000000{Gb{{f{Dfc}}}{}}0000000000{Gbb}0000000000{{{f{ACh}}}d}{{{f{ACj}}}d}{{{f{AC`}}}d}{{{f{{ACb{c}}}}}dAl}{{{f{ACd}}}d}{{{f{ACh}}}{{f{Oj}}}}{{{f{ACj}}}{{f{Oj}}}}{{{f{AC`}}}{{f{Oj}}}}{{{f{{ACb{c}}}}}{{f{Oj}}}Al}{{{f{ACd}}}{{f{Oj}}}}{ACf{{l{c}}}Dl}{{{f{DfABl}}}{{l{Ah}}}}{{{f{DfABn}}}{{l{Ah}}}}{{{f{DfACl}}}{{l{Ah}}}}{{{f{DfACd}}}{{l{Ah}}}}{{{ACn{Bd}}}{{l{Bb}}}}{{{ACn{{Bj{Bh}}}}}{{l{Bf}}}}{ADb{{l{Bl}}}}{ADdADh}{{{ADf{c}}}{{l{c}}}Al}`{cc{}}0000000000{{Dde}ADj{}{{D`{}{{Cj{{Ch{c}}}}}}}}{{Dde}ADj{}{{D`{}{{Cj{c}}}}}}{{Dd{f{{Bj{c}}}}}ADj{}}{{Dd{f{{Bj{{Ch{c}}}}}}}ADj{}}{{{f{El}}GbGbDd}{{A`{{Cn{ACd}}n}}}}{{}Gb}0000000000{{{f{DfACh}}}{{Cn{Cl}}}}{{{f{DfACj}}}{{Cn{Cl}}}}{{{f{DfAC`}}}{{Cn{Cl}}}}{{{f{Df{ACb{c}}}}}{{Cn{Cl}}}Al}{{{f{DfACd}}}{{Cn{Cl}}}}{{}c{}}0000000000`{{DdGb{Ch{El}}}ABl}{{DdGb{Ch{El}}}ABn}{{DdGbGb}ACh}{{DdGbGb}ACj}{{DdGbGb}AC`}{{DdGb}ACl}{{DdGbGbEl}{{ACb{c}}}Al}{{DdGb}{{ACn{c}}}{AD`A@f}}{{DdGb}ADb}{{DdGb}ADd}{{DdGb}{{ADf{c}}}Al}{{DdGbGbElEl}{{ACb{c}}}Al}{{{f{DfACf}}}b}{{{f{DfADb}}}b}{{{f{DfADd}}}b}{{{f{Df{ADf{c}}}}}bAl}{fc{}}000{c{{A`{e}}}{}{}}0000000000{{}{{A`{c}}}{}}0000000000{fAAl}0000000000{{}c{}}0000000000````````{{{f{DfACd}}}b}{{{f{DfACd}}{Ch{{f{Ab}}}}}{{A`{bn}}}}{{{f{DfACd}}{f{Ab}}}{{A`{bn}}}}`{{{f{ACd}}}d}{{{f{ACd}}}{{f{Oj}}}}{{{f{DfACd}}}{{l{Ah}}}}{{{f{El}}GbGbDd}{{A`{{Cn{ACd}}n}}}}{{{f{DfACd}}}{{Cn{Cl}}}}````{{fh}b}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{Fl}}}Fl}{{f{f{Dfc}}}b{}}{fb}{{}Fl}{Gb{{f{c}}}{}}{Gb{{f{Dfc}}}{}}{Gbb}{{{f{Fl}}{f{Fl}}}d}{{f{f{c}}}d{}}00{{{f{Fl}}{f{DfHj}}}{{A`{bHl}}}}{cc{}}{{{f{Fl}}{f{Dfc}}}bADl}{{}Gb}{{}c{}}{{{f{Fl}}}d}{fc{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAl}5``{{ADnDd}{{l{c}}}Dl}{{AE`{f{{l{c}}}}}{{l{c}}}Dl}10{{AE`DdEl}{{l{c}}}Dl}0{{ADnDd}{{A`{{l{c}}e}}}Dl{}}{{AE`{f{{l{c}}}}}{{A`{{l{c}}e}}}Dl{}}10{{AE`DdEl}{{A`{{l{c}}e}}}Dl{}}0`{AEbAEb}``{{AEdDdEl}e{}{{AEf{c}}}}{{eDdEl}AEf{}{{Ij{}{{Cj{c}}}}}}````{f{{f{c}}}{}}00{{{f{Df}}}{{f{Dfc}}}{}}00{Gb{{f{c}}}{}}00{Gb{{f{Dfc}}}{}}00{Gbb}00{cc{}}00{{}Gb}00{{}c{}}00000{{{f{AEh}}}AEj}{{{f{AEl}}El}AEn}{{{f{DfAEj}}}Ch}{{{f{DfAEn}}}Ch}{{{f{Df{AF`{c}}}}}ChD`}21{{{f{Df{AF`{c}}}}}ChGn}`{{{f{AEj}}}{{Hd{Gb{Ch{Gb}}}}}}{{{f{AEn}}}{{Hd{Gb{Ch{Gb}}}}}}{{{f{{AF`{c}}}}}{{Hd{Gb{Ch{Gb}}}}}D`}{c{{A`{e}}}{}{}}00{{}{{A`{c}}}{}}00{fAAl}00<<<`````````````````````````{{fh}b}0000{{}Gl}{{}Jl}{{GlGl}Gl}{{JlJl}Jl}{{{f{DfGl}}Gl}b}{{{f{DfJl}}Jl}b}3210{{{f{Gl}}}Jj}0{{{f{Jl}}}Bh}05432{f{{f{c}}}{}}000000{{{f{Df}}}{{f{Dfc}}}{}}000000{{{f{{Ml{c}}}}}{{Ml{c}}}Dl}{{{f{{Kf{c}}}}}{{Kf{c}}}Dl}{{{f{AFb}}}AFb}{{{f{Gl}}}Gl}{{{f{Jl}}}Jl}{{f{f{Dfc}}}b{}}0000{fb}0000{{{f{DfAFd}}}b}{GlGl}{JlJl}{{{f{Gl}}Gl}d}{{{f{Jl}}Jl}d}{{}{{Ml{c}}}Dl}{{}{{Kf{c}}}Dl}{{}Gl}{{}Jl}{{{f{{Mj{c}}}}}fDl}{Gb{{f{c}}}{}}000000{Gb{{f{Dfc}}}{}}000000{{GlGl}Gl}{{JlJl}Jl}{{}d}{{{f{N`}}}{{Ch{Jj}}}}{{{Kf{c}}Jj}{{Kf{c}}}Dl}{{{f{{Kf{c}}}}}{{Ch{Jj}}}Dl}{{{Kf{c}}{Ch{Jj}}}{{Kf{c}}}Dl}{Gbb}000000<;5{{{f{Gl}}{f{Gl}}}d}{{{f{Jl}}{f{Jl}}}d}7{{{f{DfGl}}c}b{{I`{}{{Cj{Gl}}}}}}{{{f{DfJl}}c}b{{I`{}{{Cj{Jl}}}}}}{{{Kf{c}}d}{{Kf{c}}}Dl}{{{Kf{c}}{Ch{d}}}{{Kf{c}}}Dl}{{{f{{Kf{c}}}}Gl}{{Kf{c}}}Dl}{{{f{{Kf{c}}}}Gl}{{Kf{e}}}DlDl}{{{Kf{c}}Jl}{{Kf{c}}}Dl}{{{Kf{c}}{Ch{Jl}}}{{Kf{c}}}Dl}{{{f{{Kf{c}}}}{f{DfHj}}}{{A`{bHl}}}Dl}{{{f{AFb}}{f{DfHj}}}{{A`{bHl}}}}{{{f{Gl}}{f{DfHj}}}{{A`{bHl}}}}0000{{{f{Jl}}{f{DfHj}}}{{A`{bHl}}}}0000{cc{}}000000{Jj{{Ch{Gl}}}}{Bh{{Ch{Jl}}}}{JjGl}0{BhJl}010{cGl{{I`{}{{Cj{Gl}}}}}}{cJl{{I`{}{{Cj{Jl}}}}}}{{{f{Bd}}}{{Ch{Gl}}}}{{{f{Bd}}}{{Ch{Jl}}}}{{{f{{Kf{c}}}}}{{Ch{Jj}}}Dl}{{{f{{Kf{c}}}}}dDl}{{{f{Jl}}}d}{{{f{N`}}}Jl}{{{f{{Kf{c}}}}}JlDl}0{{{f{{Kf{c}}}}}{{Ch{f}}}Dl}0{{{f{Df{Ml{c}}}}}{{f{Df{Kf{c}}}}}Dl}{{{f{Jl}}}M`}{{}Gb}000000{{{f{DfGl}}Gl}b}{{{f{DfJl}}Jl}b}{{GlGl}Gl}{{JlJl}Jl}{{{f{Gl}}Gl}d}{{{f{Jl}}Jl}d}{{}c{}}000000{Gl}{Jl}{{{f{Gl}}}d}{{{f{Jl}}}d}{{{f{{Kf{c}}}}}dDl}21{{{f{{Kf{c}}}}}M`Dl}111{{{f{Gl}}}{{AFf{Gl}}}}{{{f{Jl}}}{{AFf{Jl}}}}{{{f{Gl}}}{{AFh{Gl}}}}{{{f{Jl}}}{{AFh{Jl}}}}{{}d}{{}{{f{{AFl{AFj}}}}}}{{{f{N`}}}{{Ch{Mh}}}}{{{Kf{c}}}{{Kf{c}}}Dl}{{{f{{Kf{c}}}}}{{Ch{Mh}}}Dl}{{{Kf{c}}Ch}{{Kf{c}}}Dl}{{{f{{Kf{c}}}}{Kf{c}}}{{AFn{c}}}Dl}4321{{{Kf{c}}}{{Ml{c}}}Dl}{GlGl}{JlJl}{{{f{{Ml{c}}}}}{{Nb{{Kf{c}}}}}Dl}{{{f{DfGl}}Gl}b}{{{f{DfJl}}Jl}b}{{{f{DfGl}}Gld}b}{{{f{DfJl}}Jld}b}{{{f{Df{Kf{c}}}}{Ch{Jj}}}bDl}{{{f{Df{Kf{c}}}}d}bDl}{{{f{DfJl}}d}b}{{{f{Df{Kf{c}}}}Jl}bDl}{{{f{Df{Kf{c}}}}Ch}bDl}033{{{f{Df{Kf{c}}}}M`}bDl}{{{f{DfJl}}M`}b}{{{Kf{c}}M`}{{Kf{c}}}Dl}{{{Kf{c}}{Ch{M`}}}{{Kf{c}}}Dl}{{GlGl}Gl}{{JlJl}Jl}>=10{{{Ml{c}}}{{Kf{c}}}Dl}{fc{}}0000{{{f{DfGl}}Gl}b}{{{f{DfJl}}Jl}b}{c{{A`{e}}}{}{}}000000{{}{{A`{c}}}{}}000000{{{f{{Ml{c}}}}}{{Ch{{Nb{{Kf{c}}}}}}}Dl}{{{f{{Ml{c}}}}}{{Ch{{Kh{{Kf{c}}}}}}}Dl}{fAAl}000000:9{{{f{{Ml{c}}}}}{{f{{AG`{N`}}}}}Dl}{{}c{}}000000{AFdAFd}{{{f{{Ml{c}}}}}{{Kh{{Kf{c}}}}}Dl}````{{fh}b}{{{f{{AGb{c}}}}Gb}{{Hd{{AGb{c}}{AGb{c}}}}}Cf}{e{{AGb{c}}}Cf{{I`{}{{Cj{{Ch{{f{c}}}}}}}}}}{e{{AGb{c}}}Cf{{I`{}{{Cj{{f{c}}}}}}}}{{AGde}g{}{{I`{}{{Cj{c}}}}}{}}0{{{f{Jn}}}{{f{AGf}}}}{{{f{{AGb{c}}}}}{{f{AGf}}}Cf}{{{f{Df{AGb{c}}}}}{{f{DfAGf}}}Cf}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}`{{{f{{AGb{c}}}}Gb}dCf}{{{f{{AGb{c}}}}}{{AGb{c}}}{JdCf}}{{f{f{Dfc}}}b{}}{fb}{Gb{{f{c}}}{}}{Gb{{f{Dfc}}}{}}{Gbb}{{{f{{AGb{c}}}}}{{f{AGd}}}Cf}{{{f{{f{Jn}}}}{f{{f{Jn}}}}}d}{{{f{Jn}}{f{Jn}}}d}{{{f{{AGb{c}}}}{f{DfHj}}}{{A`{bHl}}}{AGhCf}}{cc{}}{{{Gh{c}}}{{AGb{c}}}Cf}{{GbAGd}{{AGb{c}}}Cf}{{{f{{AGb{c}}}}Gb}{{Ch{{f{c}}}}}Cf}{{}AGd}{{{f{Ib}}{f{{AGb{c}}}}{f{{AGb{c}}}}}{{AGb{c}}}Cf}{{AGd{f{Ib}}}{{AGb{c}}}Cf}{{{f{Ib}}{f{{AGb{c}}}}}{{AGb{c}}}Cf}0{{}Gb}{{}c{}}{{{f{{AGb{c}}}}}{}Cf}{{{f{{AGb{c}}}}Gb}dCf}0{{fGb}d}{{{f{{AGb{c}}}}}{{AGl{AGj}}}Cf}{{{f{{AGb{c}}}}}{{AGl{{f{c}}{G`{c}}AGj}}}Cf}{{{f{{AGb{c}}}}}GbCf}0`{db}{{{f{Df{AGb{c}}}}{Ch{Ib}}}bCf}{{{f{Df{AGb{c}}}}GbGb}bCf}{{fGbGb}c{}}01{{{f{{AGb{c}}}}Gb}{{Hd{{Cn{Cl}}{Cn{Cl}}}}}Cf}0{{{f{Jn}}}{{Cn{Jn}}}}{{{f{{AGb{c}}}}}{{Cn{Cl}}}Cf}{fc{}}{g{{A`{{AGb{c}}e}}}Cf{}{{I`{}{{Cj{{A`{{f{c}}e}}}}}}}}{g{{A`{{AGb{c}}e}}}Cf{}{{I`{}{{Cj{{A`{{Ch{{f{c}}}}e}}}}}}}}{{AGdg}{{A`{ie}}}{}{}{{I`{}{{Cj{{A`{ce}}}}}}}{}}0{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAl}{{{f{Jn}}}{{f{Bd}}}}{{}{{f{Bd}}}}{{{f{{AGb{c}}}}}{{Ch{{f{Ib}}}}}Cf}{{{f{{AGb{c}}}}Gb}{{f{c}}}Cf}0{{{f{{AGb{c}}}}Gb}{}Cf}{{{f{{AGb{c}}}}}{}Cf}{{{f{{AGb{c}}}}}{{G`{c}}}Cf}{{}c{}}{{{f{{AGb{c}}}}{Ch{Ib}}}{{Cn{Cl}}}Cf}{{{AGb{c}}{Ch{Ib}}}{{AGb{c}}}Cf}0`{{{f{Df{AGn{c}}}}}bCf}0{{{f{Df{AGn{c}}}}{Ch{c}}}bCf}{{{f{Df{AGn{c}}}}{f{AGf}}}bCf}{{{f{Df{AGn{c}}}}c}bCf}{{{f{Df{AGn{c}}}}{f{AGf}}}{{A`{bn}}}Cf}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{}{{AGn{c}}}Cf}{Gb{{f{c}}}{}}{Gb{{f{Dfc}}}{}}{Gbb}{{{AGn{c}}}{{l{{Cd{c}}}}}Cf}{cc{}}{{}Gb}{{}c{}}{{DdGb}{{AGn{c}}}Cf}{{{f{Df{AGn{c}}}}}AbCf}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAl}5````{{{f{DfAH`}}}b}{{{f{DfAH`}}{Ch{{f{AGf}}}}}b}{{{f{DfAH`}}{f{AGf}}}b}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}`{Gb{{f{c}}}{}}{Gb{{f{Dfc}}}{}}{Gbb}{{{f{AHb}}{f{DfHj}}}{{A`{bHl}}}}{cc{}}{{DdGb}{{Cn{AH`}}}}{{}{{Mn{Dn}}}}{{}AGd}{{}Gb}{{}c{}}{{}d}`{{{Cn{Dn}}{Mn{Dn}}AGd}b}{{{f{DfAH`}}}Ab}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAl}6``````````````````````````````````````````````{{fh}b}00{{{f{AHd}}}Aj}{{{f{{AHh{}{{AHf{c}}}}}}g}{{AHh{}{{AHf{c}}}}}{}{}{{Dn{{Ch{e}}}{{Ad{{Ch{c}}}}}}E`}}{{{f{AHj}}{f{Dn}}}AHj}{{{f{AHj}}{f{Dn}}}{{l{c}}}Dl}{{{f{{AHh{}{{AHf{c}}}}}}i{f{Df{Bj{g}}}}}b{}{}{}{{Dn{{Ch{e}}{f{g}}}{{Ad{g}}}}}}{{{f{{AHh{}{{AHf{c}}}}}}g}{{AHh{}{{AHf{c}}}}}{}{}{{Dn{e}{{Ad{c}}}}E`}}{{{f{AHl}}F`}{{l{Fb}}}}{{{f{AHl}}{f{{Bj{Ff}}}}{f{Fh}}}{{A`{{l{Fb}}n}}}}{{{f{AHn}}}{{A`{{l{Fb}}n}}}}`{f{{f{c}}}{}}00{{{f{Df}}}{{f{Dfc}}}{}}00{{{f{AI`}}{f{El}}}{{A`{Abn}}}}0{{{f{AI`}}{f{El}}Fl}{{A`{Abn}}}}{{{f{F`}}}F`}{{{f{Fh}}}Fh}{{{f{AIb}}}AIb}{{f{f{Dfc}}}b{}}00{fb}00{{}F`}{{}Fh}{Gb{{f{c}}}{}}00{Gb{{f{Dfc}}}{}}00``{Gbb}00{{{f{F`}}{f{F`}}}d}{{{f{Fh}}{f{Fh}}}d}{{{f{AIb}}{f{AIb}}}d}{{{f{{AId{}{{Cj{c}}}}}}e}c{}{}}0{{f{f{c}}}d{}}00000{{{f{AIf}}}{{A`{Abn}}}}{{{f{AIf}}}{{A`{{Hd{Ab{Hb{H`}}}}n}}}}`{{{f{AIh}}c}{{A`{AIhn}}}{}}{{{f{AIj}}{f{{l{Bl}}}}}{{A`{{l{c}}n}}}Dl}`{{{f{F`}}{f{DfHj}}}{{A`{bHl}}}}{{{f{Fh}}{f{DfHj}}}{{A`{bHl}}}}{{{f{AIb}}{f{DfHj}}}{{A`{bHl}}}}{{{f{Fh}}}F`}{cc{}}{{{f{F`}}}Fh}11`{{DdcGb}AIl{}}{{DdGb}AIn}`{{{f{AJ`}}Gb}{{A`{Jhn}}}}{{{f{AJ`}}Gb}Jh}??{{{f{F`}}{f{Dfc}}}bADl}{{{f{Fh}}{f{Dfc}}}bADl}{{{f{AIb}}{f{Dfc}}}bADl}{{}Gb}00{{}c{}}00{{{f{AJb}}}{{A`{{l{Bl}}n}}}}{{{f{AJd}}}{{A`{{l{Bl}}n}}}}{{{f{{AId{}{{Cj{c}}}}}}e}c{}{}}0``{{{f{AHd}}}{{Ch{c}}}{}}{{{f{AHd}}}{{Ch{Aj}}}}{{{f{AJf}}}{{Ch{c}}}{}}2{{{f{AHd}}}{{Ch{{Hd{cc}}}}}{}}``{{{f{AHn}}}{{A`{Gbn}}}}{{}F`}{{}Fh}{{{f{AJh}}GbGb}{{l{c}}}Dl}88``{{{f{AIf}}}{{A`{{Hb{H`}}n}}}}{{{f{AJf}}AjA@`}{{A`{{Ch{c}}n}}}{}}{{{f{AJj}}}Ab}0{{{f{AJl}}}AJl}{{{f{AJn}}{f{Dn}}A@b}{{A`{Abn}}}}{{{f{AK`}}c{Ch{e}}}{{A`{AK`n}}}{{I`{}{{Cj{Jj}}}}}{}}{{{f{AK`}}ci}{{A`{AK`n}}}{{I`{}{{Cj{Jj}}}}}{}{}{{Dn{{Ch{e}}}{{Ad{{Ch{g}}}}}}}}`{{{f{AK`}}{f{{l{Bl}}}}{Ch{c}}}{{A`{AK`n}}}{}}{{{f{AKb}}H`}{{l{c}}}Dl}{{{f{AKd}}H`c}{{l{e}}}{}Dl}{{{f{AKf}}GbGb}AKf}0`{{{f{AHl}}d}{{l{c}}}Dl}{{{f{AHl}}F`}{{l{c}}}Dl}{{{f{AKh}}Bh}{{Ch{Aj}}}}{{{f{AHd}}}{{Ch{c}}}{}}{{{f{AKj}}{f{c}}}{{A`{AKjn}}}A@f}{{{f{AKl}}{f{c}}}AKlA@f}{{{f{AKn}}}{{Gh{{f{{Bj{Bh}}}}}}}}{fc{}}00{c{{A`{e}}}{}{}}00{{}{{A`{c}}}{}}00{fAAl}00{{{f{AHn}}}{{A`{AHnn}}}}9{{}c{}}00{{F`d}F`}{{Fhd}Fh}1010{{Fhc}Fh{{I`{}{{Cj{d}}}}}}210{F`F`}{FhFh}`{{{f{AL`}}{f{{l{Bl}}}}{f{{l{c}}}}}{{A`{{l{c}}n}}}Dl}``````{{{f{{l{c}}}}{f{{l{e}}}}gik}{{l{m}}}DlDl{{Dn{ff}{{Ad{}}}}}{{Dn{f}{{Ad{}}}}}{{Dn{f}{{Ad{}}}}}Dl}{{{l{c}}{l{e}}gik}{{l{m}}}DlDl{{Dn{}{{Ad{}}}}}{{Dn{}{{Ad{}}}}}{{Dn{}{{Ad{}}}}}Dl}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}DlDlCl{{Af{ff}{{Ad{g}}}}}{{Dl{}{{Hn{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{l{i}}}DlDl{{ALb{ChCh}}}Dl}{{{f{{l{c}}}}{f{{l{e}}}}g}bDlDl{{Af{ChCh}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{l{Bb}}}DlDl{{Af{{f{DfEj}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}DlDl{}{{Af{}{{Ad{g}}}}}Dl}{{{f{{l{c}}}}{f{{l{e}}}}iDd}{{l{k}}}DlDl{ClALd}{{Af{ff}{{Ad{g}}}}}{{Dl{}{{Hn{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}iDd}{{l{k}}}DlDlCl{{Af{ff}{{Ad{g}}}}}{{Dl{}{{Hn{g}}}}}}{{{l{c}}{l{e}}i}{{l{k}}}DlDlCl{{Af{}{{Ad{g}}}}}{{Dl{}{{Hn{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{A`{Abn}}}DlDl{{Af{ff}{{Ad{{Cn{Cl}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}gdd}{{l{c}}}DlDl{{Af{ff}{{Ad{{Cn{Cl}}}}}}}}85{{{f{{l{c}}}}{f{{l{e}}}}k}{{A`{{l{m}}i}}}DlDl{}{}{{Af{ChCh}{{Ad{{A`{{Ch{g}}i}}}}}}}Dl}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}i}{{l{k}}}DlDlDl{{ALf{ChChCh}}}Dl}{{{f{{l{c}}}}{f{{l{e}}}}k}{{A`{{l{m}}i}}}DlDlClALh{{Af{ff}{{Ad{{A`{gi}}}}}}}{{Dl{}{{Hn{g}}}}}}2{{{f{{l{c}}}}{f{{l{e}}}}kDd}{{A`{{l{m}}i}}}DlDlClALh{{Af{ff}{{Ad{{A`{gi}}}}}}}{{Dl{}{{Hn{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}idd}{{A`{{l{c}}g}}}DlDlALh{{Af{ff}{{Ad{{A`{{Cn{Cl}}g}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}m}{{A`{{l{o}}k}}}DlDlDl{}{}{{Af{ChChCh}{{Ad{{A`{{Ch{i}}k}}}}}}}Dl}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dl{}{}{{Af{Ch}{{Ad{{A`{{Ch{e}}g}}}}}}}Dl}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dl{}{}{{Af{}{{Ad{{A`{eg}}}}}}}Dl}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dl{ClALd}ALh{{Af{f}{{Ad{{A`{eg}}}}}}}{{Dl{}{{Hn{e}}}}}}{{{f{{l{c}}}}e}{{l{g}}}Dl{{ALj{Ch}}}Dl}{{{f{{l{c}}}}e}{{l{g}}}DlALjDl}{{{f{{l{c}}}}g}{{l{i}}}DlCl{{Af{f}{{Ad{e}}}}}{{Dl{}{{Hn{e}}}}}}{{{l{c}}g}{{l{i}}}DlCl{{Af{}{{Ad{e}}}}}{{Dl{}{{Hn{e}}}}}}{{{f{{l{c}}}}g}{{l{i}}}Dl{ClALd}{{Af{f}{{Ad{e}}}}}{{Dl{}{{Hn{e}}}}}}0{{{f{{l{c}}}}}GbAl}0{{M`M`}M`}{{{f{{l{Fb}}}}Jj}{{A`{bn}}}}{{{f{{ALl{Jj}}}}Jj}{{A`{bn}}}}````{{fh}b}{{{f{{l{c}}}}eALnd}{{Gh{Jj}}}Dl{{D`{}{{Cj{Ch}}}}}}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{ALn}}}ALn}{{f{f{Dfc}}}b{}}{fb}{{}ALn}{Gb{{f{c}}}{}}{Gb{{f{Dfc}}}{}}{Gbb}{{{f{ALn}}{f{ALn}}}d}{{f{f{c}}}d{}}00{{{f{ALn}}{f{DfHj}}}{{A`{bHl}}}}{cc{}}{{{f{ALn}}{f{Dfc}}}bADl}{{}Gb}{{}c{}}{{{f{{Bj{f}}}}cJje}{{Gh{Jj}}}{{D`{}{{Cj{Ch}}}}}{{Dn{fGbf}{{Ad{d}}}}}}{fc{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAl}5`{{Gb{f{Df{Gh{d}}}}}b}```{{{f{AKf}}GbGb}AKf}0{{Gb{f{{Bj{Ff}}}}{f{DfFh}}}{{A`{{AM`{{l{Fb}}}}n}}}}{{{f{{Bj{Ff}}}}{f{{Bj{d}}}}{f{{Bj{d}}}}}{{A`{AMbn}}}}{{{f{{Bj{Ff}}}}{f{{Bj{d}}}}{f{{Bj{d}}}}}{{A`{{K`{H`}}n}}}}{{Dd{f{{Bj{Ff}}}}{f{{Bj{d}}}}{f{{Bj{d}}}}}{{A`{{l{Fd}}n}}}}{{Dd{f{{Bj{Ab}}}}}{{A`{{l{Fd}}n}}}}{{{f{Ab}}}{{A`{{Cn{Cl}}n}}}}{{{f{{Bj{Ab}}}}}{{A`{AMbn}}}}{{{f{{Bj{Ab}}}}}{{A`{{l{Fd}}n}}}}0```````````88`{AMdH`}00{{{f{Bd}}}{{A`{Ddn}}}}{{{f{Bd}}}{{A`{AMfn}}}}{{{f{AMh}}}H`}{{{f{Bd}}}{{A`{bn}}}}444```````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{fh}b}000000000000000000000000000000000{{{f{AMj}}}d}{{{f{Jh}}}{{`{{D`{}{{Cj{Jh}}}}}}}}{{{f{Jh}}{f{Df{Gh{Jh}}}}}b}{{AMjd}AMj}{{{f{{Kn{LhLf}}}}{f{{Kn{LhLf}}}}}}{{{f{Jh}}{f{Jh}}}Jh}{{{f{{l{Cb}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}{}}0000000000{{{f{{l{Bb}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{Bf}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{Bl}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{DfAMl}}{Ch{{f{Bd}}}}}b}{{{f{DfAMj}}{f{AMj}}}{{A`{bn}}}}{{{f{DfAMl}}}b}{{{f{DfAMl}}{f{Bd}}}b}{{{f{AMj}}F`}{{l{Fb}}}}{eAMn{}{{I`{}{{Cj{c}}}}}}0{{AGde}AN`{}{{I`{}{{Cj{c}}}}}}0{{{f{El}}}{{Ch{{f{El}}}}}}{{{f{Jh}}}Jh}{{{f{{Kn{KlKj}}}}}{{`{Jf}}}}{{{f{{Kn{LdL`}}}}}{{`{Jf}}}}{{{f{Dd}}}{{f{ANb}}}}{{{f{Dd}}}{{f{Bd}}}}{{{f{Dd}}}{{f{{Bj{Bh}}}}}}{{{f{Dd}}}{{f{ANd}}}}{{{f{El}}}{{f{El}}}}{{{f{Oj}}}{{f{El}}}}{{{f{ANf}}}{{f{El}}}}{{{f{{ALd{}{{ANh{c}}{ANj{e}}{ANl{g}}}}}}}{{Ch{{f{{Bj{c}}}}}}}Jd{ANn{AO`{c}}}{{Gn{}{{Cj{c}}}}JfIlIn}}6{{{f{{Kn{LlL`}}}}}{{`{Jf}}}}7{f{{f{c}}}{}}0000000000000000000000000000000000000000000{{{f{Df}}}{{f{Dfc}}}{}}0000000000000000000000000000000000000000000{El{{Cn{El}}}}{{{AOb{Bd}}}AOd}{{{f{AMj}}{f{AMj}}c}{{A`{AMjn}}}AOf}{{{f{AOh}}{f{El}}}{{A`{Abn}}}}{{{f{Jh}}{f{El}}}Jh}{{{f{El}}El}El}{{{f{{Kn{LjL`}}}}Lb}{{Kn{LjL`}}}}{{{f{{Kn{LdL`}}}}Lb}{{Kn{LdL`}}}}{{{f{AOh}}{f{El}}Fl}{{A`{Abn}}}}{{{f{{Kn{LlL`}}}}{f{El}}Fl}{{A`{Abn}}}}{{{f{{Kn{KlKj}}}}{f{El}}Fl}{{A`{Abn}}}}{{{f{{Kn{LjL`}}}}{f{El}}Fl}{{A`{Abn}}}}{{{f{{Kn{LhLf}}}}{f{El}}Fl}{{A`{Abn}}}}{{{f{{Kn{LdL`}}}}{f{El}}Fl}{{A`{Abn}}}}{{{f{AMj}}{f{El}}Fl}{{A`{Abn}}}}`{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}{}}00000000{{{f{{l{Eh}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{Ef}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{Dd}}}Dd}{{{f{{Kn{ce}}}}}{{Kn{ce}}}DlDl}{{{f{AOj}}}AOj}{{{f{AOd}}}AOd}{{{f{AMj}}}AMj}{{{f{AOl}}}AOl}{{{f{Jh}}}Jh}{{{f{AOn}}}AOn}{{{f{El}}}El}{{{f{B@`}}}B@`}{{{f{Oj}}}Oj}{{{f{Lb}}}Lb}{{{f{Of}}}Of}{{{f{Nd}}}Nd}{{{f{Fb}}}Fb}{{{f{Nh}}}Nh}{{{f{Nj}}}Nj}{{{f{Nn}}}Nn}{{{f{Kj}}}Kj}{{{f{L`}}}L`}{{{f{Eh}}}Eh}{{{f{Ef}}}Ef}{{{f{Kl}}}Kl}{{{f{Ll}}}Ll}{{{f{Bb}}}Bb}{{{f{Bf}}}Bf}{{{f{Fd}}}Fd}{{{f{Bl}}}Bl}{{{f{Lh}}}Lh}{{{f{Ld}}}Ld}{{{f{Lj}}}Lj}{{{f{B@b}}}B@b}{{{f{AGd}}}AGd}{{{f{B@d}}}B@d}{{f{f{Dfc}}}b{}}000000000000000000000000000000000{fb}000000000000000000000000000000000{{{f{Dd}}{f{Dd}}}B@f}{{{f{DfOj}}El}b}{B@he{}{{AMn{c}}ALd}}0{{B@hAGd}e{}{{AN`{c}}ALd}}0{{f{f{c}}}B@f{}}{{{f{El}}}d}00{{{AOb{Bd}}}El}{{{f{{Kn{LjL`}}}}}{{l{L`}}}}{{}Dd}{{}B@j}{{}AOj}{{}AOd}{{}Jh}{{}AOn}{{}El}{{}AGd}{Gb{{f{c}}}{}}{{{f{Dd}}}f}11{{{f{{Kn{ce}}}}}fDlDl}22222222222222222222222222222222222222222{Gb{{f{Dfc}}}{}}000{{{f{Df{Kn{ce}}}}}{{f{Df}}}DlDl}1111111111111111111111111111111111111111{{{f{{Kn{LhLf}}}}{f{{Kn{LhLf}}}}}}{{{f{{l{Cb}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}{}}0000000000{{AMlc}AMj{{I`{}{{Cj{{Ch{{f{Bd}}}}}}}}}}{Gbb}0000000000000000000000000000000000000000000{{{f{AOh}}}{{f{El}}}}{{{f{{Kn{LdL`}}}}}{{f{El}}}}{{{f{{Kn{LlL`}}}}}{{f{El}}}}{{{f{{Kn{KlKj}}}}}{{f{El}}}}{{{f{{Kn{LhLf}}}}}{{f{El}}}}{{{f{{Kn{LjL`}}}}}{{f{El}}}}{{{f{AMj}}}{{f{El}}}}{{{f{Jh}}}El}{{{f{Oj}}}{{f{El}}}}`{fc{{B@n{B@l}}}}0{{{f{Dd}}{f{c}}}d{{Ih{Bd}}A@f}}{{{f{AOj}}{f{AOj}}}d}{{{f{Jh}}{f{Jh}}}d}{{{f{AOn}}{f{AOn}}}d}{{{f{El}}{f{AGd}}}d}{{{f{El}}{f{El}}}d}{{{f{B@`}}{f{B@`}}}d}{{{f{Oj}}{f{Oj}}}d}{{{f{Lb}}{f{Lb}}}d}{{{f{AGd}}{f{AGd}}}d}{{{f{B@d}}{f{B@d}}}d}{{{f{Jh}}{f{Jh}}d}d}{{{f{AMj}}{f{Bd}}}}{{{f{AMj}}{f{AMj}}}}{{{f{AMj}}{f{{l{Bb}}}}}}210{{f{f{c}}}d{}}00000000000000000000000000{{{f{{Kn{ce}}}}}OjDlDl}{{{f{AOd}}{f{Bd}}}{{Ch{Jj}}}}{{AOf{f{{l{Fb}}}}{f{{l{Fb}}}}}{{A`{{l{Fb}}n}}}}{AMlAMj}{B@j{{Mn{AOd}}}}{{{f{Dd}}{f{DfHj}}}{{A`{bHl}}}}0{{{f{AOj}}{f{DfHj}}}{{A`{bHl}}}}{{{f{AOd}}{f{DfHj}}}{{A`{bHl}}}}{{{f{AOl}}{f{DfHj}}}{{A`{bHl}}}}{{{f{Jh}}{f{DfHj}}}{{A`{bHl}}}}0{{{f{AOn}}{f{DfHj}}}{{A`{bHl}}}}{{{f{El}}{f{DfHj}}}{{A`{bHl}}}}0{{{f{B@`}}{f{DfHj}}}{{A`{bHl}}}}{{{f{Oj}}{f{DfHj}}}{{A`{bHl}}}}{{{f{Lb}}{f{DfHj}}}{{A`{bHl}}}}0{{{f{AGd}}{f{DfHj}}}{{A`{bHl}}}}{{{f{B@d}}{f{DfHj}}}{{A`{bHl}}}}{{{f{Bd}}}Dd}{cc{}}{GjDd}{{{f{Ej}}}Dd}{EjDd}33{{{l{Kj}}}{{Kn{KlKj}}}}{{{l{L`}}}{{Kn{LlL`}}}}5555555555555{dJh}{{{Ch{c}}}Jh{{BA`{Jh}}}}7{{{f{Bd}}}Jh}{{{f{{Bj{Bh}}}}}Jh}{cJhBAb}:{{{f{AGd}}}El};{JhEl}{{{f{Jh}}}El}={{{f{BAd}}}Oj}>{{{f{Jh}}}Oj}{{{f{B@d}}}Lb}{cc{}}00000000000000000000{BAfAGd}{BAhAGd}22{{{f{AGd}}d}El}{{{l{Fb}}{Mn{AOd}}dAOj}AMj}{{DdcLb}{{Kn{LjL`}}}{{I`{}{{Cj{BAj}}}}}}{{DdcLb}{{Kn{LjL`}}}{{I`{}{{Cj{{Ch{BAj}}}}}}}}{{{l{Fb}}AOj}AMj}{cDd{{I`{}{{Cj{B@l}}}}}}{cDd{{I`{}{{Cj{Dd}}}}}}{cDd{{I`{}{{Cj{{f{Dd}}}}}}}}{cDd{{I`{}{{Cj{{Eb{Bd}}}}}}}}{cDd{{I`{}{{Cj{{Cn{Bd}}}}}}}}{cDd{{I`{}{{Cj{{f{Bd}}}}}}}}{cDd{{I`{}{{Cj{{f{B@l}}}}}}}}{cDd{{I`{}{{Cj{Ej}}}}}}{{Ddc}{{Kn{KlKj}}}{{I`{}{{Cj{BAl}}}}}}{{Ddc}{{Kn{KlKj}}}{{I`{}{{Cj{{Ch{BAl}}}}}}}}{{DdcLb}{{Kn{LdL`}}}{{I`{}{{Cj{AMd}}}}}}{{DdcLb}{{Kn{LdL`}}}{{I`{}{{Cj{{Ch{AMd}}}}}}}}{{Ddc}{{Kn{LlL`}}}{{I`{}{{Cj{AMh}}}}}}{{Ddc}{{Kn{LlL`}}}{{I`{}{{Cj{{Ch{AMh}}}}}}}}{{{f{Bd}}}Dd}0{EjDd}{{{f{{l{Bb}}}}{f{{AOb{Bd}}}}AOj}{{A`{AMjn}}}}{{{Gh{c}}AGd}{{ALd{}{{ANh{c}}{ANj{e}}{ANl{g}}}}}Jd{ANn{AO`{c}}}{{Gn{}{{Cj{c}}}}JfIlIn}}{{{Gh{c}}AGd}{{ALd{}{{ANh{e}}{ANj{c}}{ANl{g}}}}}{ANn{AO`{e}}}Jd{{Gn{}{{Cj{e}}}}JfIlIn}}{{GbcAGd}{{ALd{}{{ANh{c}}{ANj{e}}{ANl{g}}}}}Jd{ANn{AO`{c}}}{{Gn{}{{Cj{c}}}}JfIlIn}}{{GbAGd}{{ALd{}{{ANh{c}}{ANj{e}}{ANl{g}}}}}Jd{ANn{AO`{c}}}{{Gn{}{{Cj{c}}}}JfIlIn}}{{DddGbAOj}AMj}{{{f{{ALd{}{{ANh{c}}{ANj{e}}{ANl{g}}}}}}Gb}{{Ch{c}}}Jd{ANn{AO`{c}}}{{Gn{}{{Cj{c}}}}JfIlIn}}{{{f{AOd}}Jj}{{f{Bd}}}}{{{f{{Kn{KlKj}}}}Gb}{{A`{Jhn}}}}{{{f{{Kn{LdL`}}}}Gb}{{A`{Jhn}}}}{{{f{{Kn{LhLf}}}}Gb}{{A`{Jhn}}}}{{{f{{Kn{LjL`}}}}Gb}{{A`{Jhn}}}}{{{f{{Kn{LlL`}}}}Gb}{{A`{Jhn}}}}{{{f{AOh}}Gb}{{A`{Jhn}}}}{{{f{AMj}}Gb}{{A`{Jhn}}}}{{{f{{Kn{KlKj}}}}Gb}Jh}{{{f{{Kn{LdL`}}}}Gb}Jh}{{{f{{Kn{LjL`}}}}Gb}Jh}{{{f{{Kn{LlL`}}}}Gb}Jh}{{{f{{Kn{LhLf}}}}Gb}Jh}{{{f{AOh}}Gb}Jh}{{{f{AMj}}Gb}Jh}{{{f{AOd}}}{{f{{AOb{Bd}}}}}}{{}El}0000000000000000000000000{{{f{AOd}}Jj}{{Ch{{f{Bd}}}}}}{{{f{AMj}}}{{f{{Mn{AOd}}}}}}{{{f{El}}}{{Ch{{Gh{Gb}}}}}}{{{f{Jh}}}{{Ch{{f{Bd}}}}}}{{{f{BAn}}Gb}Jh}{{{f{{ALd{}{{ANh{c}}{ANj{e}}{ANl{g}}}}}}Gb}{{Ch{c}}}Jd{ANn{AO`{c}}}{{Gn{}{{Cj{c}}}}JfIlIn}}{{{f{AMj}}{f{Bd}}}}{{{f{AMj}}{f{AMj}}}}{{{f{AMj}}{f{{l{Bb}}}}}}102{{{f{Dd}}{f{Dfc}}}bADl}{{{f{Jh}}{f{Dfc}}}bADl}{{{f{AOn}}{f{Dfc}}}bADl}{{{f{El}}{f{Dfc}}}bADl}{{{f{Oj}}{f{Dfc}}}bADl}{{{f{Lb}}{f{Dfc}}}bADl}{{{f{AGd}}{f{Dfc}}}bADl}{{{f{B@d}}{f{Dfc}}}bADl}{{{f{Jh}}{f{Dfc}}d}bADl}{{{f{{Kn{LlL`}}}}}{{l{Nj}}}}{{{f{{Kn{LjL`}}}}}{{l{L`}}}}{{{f{Jh}}}Jj}{ElEl}{{}Gb}0000000000000000000000000000000000000000000{{{f{El}}}{{Ch{{f{El}}}}}}{{{f{AGd}}}{{Ch{{f{AGd}}}}}}{{}c{}}0000000000000000000000000000000000000000000{{}Ff}01{{BB`El}{{A`{Mhn}}}}{{{Kn{LjL`}}}Ab}{{{Kn{LlL`}}}Ab}{{{Kn{KlKj}}}Ab}{{{Kn{LhLf}}}Ab}{{{Kn{LdL`}}}Ab}{AMjAb}{Jh{{A`{Jhn}}}}{DdEj}{{{f{El}}}d}00{{{f{Jh}}}d}111{{{f{AMj}}}d}0212{{{f{AOd}}}d}23330323{{{f{AGd}}}d}34343444434444340{{{f{{ALd{}{{ANh{c}}{ANj{e}}{ANl{g}}}}}}}{{AGl{cgAGj}}}Jd{ANn{AO`{c}}}{{Gn{}{{Cj{c}}}}JfIlIn}}{{{f{AMj}}}BBb}{{{f{{ALd{}{{ANh{c}}{ANj{e}}{ANl{g}}}}}}}{{Ch{c}}}Jd{ANn{AO`{c}}}{{Gn{}{{Cj{c}}}}JfIlIn}}{{{f{El}}}{{f{El}}}}{{{f{AOd}}}Gb}{{{f{AMj}}}Gb}{DdBBd}{{{f{AMj}}{f{AMj}}}}{{{f{AMj}}{f{Bd}}}}{{{f{AMj}}{f{{l{Bb}}}}}}102{{{f{AMj}}{f{AMj}}}{{A`{{Hd{AMjAMj}}n}}}}{{{l{Ah}}{l{Ah}}}{{A`{{Hd{{l{Ah}}{l{Ah}}}}n}}}}{{{f{El}}{f{El}}}{{A`{dn}}}}{{{f{AOn}}}{{Ch{El}}}}{{{f{AMj}}}Mh}{{{f{El}}{f{El}}}{{A`{Eln}}}}{{{f{DfB@j}}{f{{Mn{AOd}}}}}{{A`{bn}}}}{{{f{{Kn{LjL`}}}}}{{l{L`}}}}03{{{f{{Kn{LlL`}}}}}{{l{Nj}}}}1{{{f{{Kn{LhLf}}}}{f{{Kn{LhLf}}}}}}{{{f{{l{Cb}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}{}}0000000000{{{f{AMj}}}{{A`{Gbn}}}}{{{f{AMj}}}{{f{Dd}}}}{{{f{Oj}}}{{f{Dd}}}}`{{{f{{Kn{LlL`}}}}}{{l{Kj}}}}8{{}c{}}0{{DdGbAOj}AMl}{{Ddc}{{Kn{KlKj}}}{{Ih{{Bj{BAl}}}}}}{{Ddc}{{Kn{KlKj}}}{{Ih{{Bj{{Ch{BAl}}}}}}}}{{Ddc}{{Kn{LlL`}}}{{Ih{{Bj{{Ch{AMh}}}}}}}}{{Ddc}{{Kn{LjL`}}}{{Ih{{Bj{BAj}}}}}}{{Ddc}{{Kn{LdL`}}}{{Ih{{Bj{AMd}}}}}}{{Ddc}{{Kn{LdL`}}}{{Ih{{Bj{{Ch{AMd}}}}}}}}{{Ddc}{{Kn{LlL`}}}{{Ih{{Bj{AMh}}}}}}{{Ddc}{{Kn{LjL`}}}{{Ih{{Bj{{Ch{BAj}}}}}}}}{{{Mn{AOd}}}B@j}{{DdEl}Oj}{{{l{c}}}{{Kn{ec}}}DlDl}{{}B@`}{{{f{DfBBb}}}Ch}{{{f{AMj}}{f{AMj}}}}{{{f{AMj}}{f{Bd}}}}{{{f{AMj}}{f{{l{Bb}}}}}}012{{{f{AMj}}}Gb}5{{Dd{f{{Bj{{f{Bd}}}}}}{f{Bd}}}{{Kn{LlL`}}}}{{Dd{f{{Bj{{f{Bd}}}}}}{f{Bd}}}{{Kn{KlKj}}}}{{{f{Dd}}{f{Dd}}}{{Ch{B@f}}}}{{{f{Jh}}{f{Jh}}}{{Ch{B@f}}}}{{{f{Lb}}{f{Lb}}}{{Ch{B@f}}}}{{{f{{Kn{ce}}}}}{{f{{l{e}}}}}DlDl}{{{f{AMj}}}{{f{{l{Fb}}}}}}{{{f{{Kn{LhLf}}}}}{{Ch{Gb}}}}{{{f{DfAMl}}{f{Bd}}}{{Hd{Jjd}}}}{{{f{{l{Cb}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}{}}0000000000{{{f{{Kn{KlKj}}}}{f{{l{Bb}}}}{Ch{{f{AMf}}}}}{{A`{{Kn{KlKj}}n}}}}{{{f{{Kn{LdL`}}}}{f{{l{Bb}}}}{Ch{{f{AMf}}}}}{{A`{{Kn{LdL`}}n}}}}{{{f{AOd}}{f{AOd}}}d}{{{f{{Kn{LhLf}}}}}Gb}{{{f{{Kn{LlL`}}}}}{{l{Nj}}}}{{{f{{Kn{LjL`}}}}}{{l{L`}}}}{{{f{DfOj}}Dd}b}{{{f{Df{Kn{LdL`}}}}Lb}b}{{{f{Df{Kn{LjL`}}}}Lb}b}{{{f{Df{Kn{LdL`}}}}LbDd}{{A`{bn}}}}{{{f{Df{Kn{LdL`}}}}Dd}{{A`{bn}}}}{{{f{BBb}}}{{Hd{Gb{Ch{Gb}}}}}}{{{f{AMj}}d}AMj}{{{f{AMj}}F`}AMj}{{{f{Jh}}}{{Eb{Bd}}}}{{{f{{Kn{LdL`}}}}{f{Bd}}}{{A`{{l{Bb}}n}}}}{{{f{{Kn{LlL`}}}}{f{Bd}}}{{l{Bb}}}}{{{f{{Kn{KlKj}}}}{f{Bd}}}{{A`{{l{Bb}}n}}}}{{{f{Jh}}{f{El}}}{{Ch{Jh}}}}{{{f{{Kn{LhLf}}}}{f{{Kn{LhLf}}}}}}{{{f{{l{Cb}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}{}}0000000000{{{f{{Kn{LdL`}}}}}Lb}{{{f{{Kn{LjL`}}}}}Lb}{{{f{{Kn{LdL`}}}}}{{f{{Ch{Dd}}}}}}{{{f{AMj}}B@`d}{{Cn{Cl}}}}{{{f{El}}B@`}AGd}{{{f{Oj}}B@`}BAd}{LbB@d}{{{f{El}}DdB@`}BAd}{Lb{{f{Bd}}}}{{{f{AMj}}{f{{AOb{Bd}}}}BBf}AMj}{{{f{AMj}}}{{A`{AMjn}}}}{{{f{AMj}}}AMj}{{{f{AGd}}}{{f{AGd}}}}{fc{}}000000000000000000000000000000000{{{f{El}}}El}{{{f{AGd}}}BBh}{{{f{{Kn{LhLf}}}}Gb}{{A`{{Eb{{Kn{LhLf}}}}n}}}}{fEj}{{{f{{Kn{LlL`}}}}{f{Bd}}}{{l{Bb}}}}{{{f{{Kn{LdL`}}}}{f{Bd}}}{{A`{{l{Bb}}n}}}}{{{f{{Kn{KlKj}}}}{f{Bd}}}{{A`{{l{Bb}}n}}}}333{{{f{Jh}}{f{Jh}}}d}{{{f{{Kn{KlKj}}}}{Ch{{f{AMf}}}}{f{{l{Bb}}}}}{{A`{{Kn{KlKj}}n}}}}{{{f{{Kn{LdL`}}}}{Ch{{f{AMf}}}}{f{{l{Bb}}}}}{{A`{{Kn{LdL`}}n}}}}{g{{A`{AMne}}}{}{}{{I`{}{{Cj{{A`{ce}}}}}}}}0{{AGdg}{{A`{AN`e}}}{}{}{{I`{}{{Cj{{A`{ce}}}}}}}}0{B@h{{A`{eg}}}{}{{AMn{c}}ALd}{}}0{{B@hAGd}{{A`{eg}}}{}{{AN`{c}}ALd}{}}0{{{f{Jh}}}{{A`{cn}}}Mf}{c{{A`{e}}}{}{}}0000000000000000000000000000000000000000000{{}{{A`{c}}}{}}0000000000000000000000000000000000000000000{{{f{Jh}}{f{El}}}{{A`{Jhn}}}}{{{f{El}}B@`}{{A`{AGdn}}}}{f{{A`{GjBBj}}}}000{fAAl}0000000000000000000000000000000000000000000{{{f{AGd}}}AGd}{{{f{AMj}}}{{A`{AMjn}}}}{{{f{AMj}}}d}{{{f{{ALd{}{{ANh{c}}{ANj{e}}{ANl{g}}}}}}Gb}cJd{ANn{AO`{c}}}{{Gn{}{{Cj{c}}}}JfIlIn}}{{{f{AMj}}}{{A`{AAnn}}}}1{{{f{El}}Jh}d}{{{f{{ALd{}{{ANh{c}}{ANj{e}}{ANl{g}}}}}}}gJd{ANn{AO`{c}}}{{Gn{}{{Cj{c}}}}JfIlIn}}{{}c{}}0000000000000000000000000000000000000000000{Gbc{}}0{{{ALd{}{{ANh{c}}{ANj{e}}{ANl{g}}}}{Ch{Ib}}}{{ALd{}{{ANh{c}}{ANj{e}}{ANl{g}}}}}Jd{ANn{AO`{c}}}{{Gn{}{{Cj{c}}}}JfIlIn}}{{{f{DfDd}}B@l}{{A`{bHl}}}}{{{f{DfDd}}BBl}{{A`{bHl}}}}{{{f{DfDd}}{f{Bd}}}{{A`{bHl}}}}{{{f{El}}}Jh}```````````{{{f{AMj}}{f{AMj}}c}{{A`{AMjn}}}AOf}{{AOf{f{{l{Fb}}}}{f{{l{Fb}}}}}{{A`{{l{Fb}}n}}}}{{{f{AMj}}{f{AMj}}}{{A`{{Hd{AMjAMj}}n}}}}{{{l{Ah}}{l{Ah}}}{{A`{{Hd{{l{Ah}}{l{Ah}}}}n}}}}`````````{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{}BBn}{Gb{{f{c}}}{}}{Gb{{f{Dfc}}}{}}{{}b}{{{f{DfBBn}}}b}{Gbb}2{cc{}}6{{}Gb}{{}c{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAl}{{}d}4``````````````````````````{{{f{BC`}}}{{f{Bd}}}}???>>>`{{nBC`}n}{nn}>{{{f{BC`}}}f}??>>>;;;`{{{f{BCb}}{f{DfHj}}}{{A`{bHl}}}}{{{f{BC`}}{f{DfHj}}}{{A`{bHl}}}}0{{{f{n}}{f{DfHj}}}{{A`{bHl}}}}0=={cBC`{{BA`{{Eb{Bd}}}}}}{BCdn}{BCfn}{BChn}{cc{}}{BCjn}{BCln}{BCnn}{{}{{Gd{{f{Bd}}BCb}{{Ad{b}}}}}}{{}Gb}00{{}c{}}00{cnALh}{{{f{Bd}}}BC`}````{{{Gd{{f{Bd}}BCb}{{Ad{b}}}}}b}{cnBD`}{fEj}0{c{{A`{e}}}{}{}}00{{}{{A`{c}}}{}}00{f{{A`{GjBBj}}}}0{fAAl}00999{{{f{n}}c}n{{ABb{{f{Bd}}}{{Ad{Ej}}}}}}``````````````````{{fh}b}00{{{f{DfAAn}}{Gh{Ff}}{f{{BDb{El}}}}}{{A`{bn}}}}{{{f{DfAAn}}{Gh{Ab}}{f{{BDb{El}}}}}{{A`{bn}}}}{{{f{AAn}}{f{Dn}}}{{Gh{Ff}}}}0{{{f{AAn}}{f{{l{Bl}}}}}{{A`{AAnn}}}}{{{f{AAn}}{f{{Bj{Dd}}}}}{{A`{AAnn}}}}0{{{f{AAn}}{f{{Bj{Dd}}}}{f{{BDb{El}}}}d}{{A`{AAnn}}}}{{{f{AAn}}H`Gb}AAn}{{{f{DfAAn}}}{{f{DfAAn}}}}{{{f{DfAAn}}{f{Bd}}e}{{A`{{f{DfAAn}}n}}}BDd{{ABb{{f{Ff}}}{{Ad{c}}}}}}{{{f{DfAAn}}Gbe}{{A`{{f{DfAAn}}n}}}BDd{{ABb{{f{Ff}}}{{Ad{c}}}}}}22{f{{f{c}}}{}}0000{{{f{Df}}}{{f{Dfc}}}{}}0000{{{f{AAn}}}{{`{{D`{}{{Cj{Gb}}}}}}}}{{{f{AAn}}}AAn}{{{f{BDf}}}BDf}{{{f{BDh}}}BDh}2{{f{f{Dfc}}}b{}}00{fb}00`{{{f{AAn}}{f{Bd}}}{{A`{{f{Ff}}n}}}}{{{f{AAn}}e}{{A`{{Gh{{f{Ff}}}}n}}}{{Ih{Bd}}}{{I`{}{{Cj{c}}}}}}{{}BDh}{{}AAn}{Gb{{f{c}}}{}}0000{Gb{{f{Dfc}}}{}}0000{Gbb}0000{{{f{AAn}}{f{Bd}}}{{A`{AAnn}}}}{{{f{DfAAn}}{f{Bd}}}{{A`{Ffn}}}}{{{f{AAn}}e}AAn{{BA`{Dd}}}{{I`{}{{Cj{c}}}}}}{{{f{AAn}}{f{{BDj{DdA@l}}}}}AAn}{{{f{AAn}}{Ch{{f{{Bj{c}}}}}}}{{A`{AAnn}}}{}}{{{f{AAn}}}{{Gh{El}}}}9{{{f{{BDb{BAd}}}}}AAn}{{{f{{BDb{El}}}}}AAn}{{{f{BDh}}{f{BDh}}}d}{{{f{AAn}}{f{AAn}}}d}00{{f{f{c}}}d{}}00{{{f{AAn}}}Gb}`{{{f{AAn}}e}{{A`{AAnn}}}{{BA`{Dd}}}{{I`{}{{Cj{c}}}}}}{{{f{AAn}}{Gh{Ff}}}{{A`{AAnn}}}}{{{f{DfAAn}}{f{AAn}}}{{A`{bn}}}}{{{f{AAn}}}{{Gh{Oj}}}}{{{f{AAn}}AIb}{{A`{AAnn}}}}{{{f{AAn}}{f{{l{Bl}}}}}{{A`{AAnn}}}}{{{f{BDf}}{f{DfHj}}}{{A`{bHl}}}}{{{f{BDh}}{f{DfHj}}}{{A`{bHl}}}}{{{f{AAn}}{f{DfHj}}}{{A`{bHl}}}}0{cc{}}0000{cAAn{{I`{}{{Cj{Ab}}}}}}{cAAn{{I`{}{{Cj{Ff}}}}}}{{{f{{Bj{BDl}}}}}{{A`{AAnn}}}}{{{f{{Bj{BDl}}}}{f{{BDb{El}}}}}{{A`{AAnn}}}}{{c{f{{BDb{El}}}}}{{A`{AAnn}}}{{D`{}{{Cj{{f{BDl}}}}}}}}{{{f{AAn}}Gb}{{Ch{{Gh{Jh}}}}}}{{{f{AAn}}{f{Bd}}}{{Ch{Gb}}}}{{{f{AAn}}}{{Gh{{f{Dd}}}}}}{{{f{AAn}}}{{Gh{Dd}}}}{{{f{AAn}}}{{Gh{{f{Bd}}}}}}{{{f{AAn}}}{{f{{Bj{Ff}}}}}}{{{f{DfAAn}}}{{f{Df{Gh{Ff}}}}}}{{{f{AAn}}Gb}{{A`{BDln}}}}{{{f{AAn}}Gb{f{DfBDl}}}{{A`{bn}}}}{{{f{AAn}}Gb{f{DfBDl}}}b}{{{f{AAn}}}{{Ch{{A`{Eln}}}}}}`{{{f{AAn}}e}{{A`{BDnn}}}{{BA`{Dd}}}{{I`{}{{Cj{c}}}}}}{{{f{AAn}}{Gh{Ff}}{f{BE`}}}{{A`{{Hd{Ff{Gh{Ff}}C`}}n}}}}1{{{f{AAn}}{Gh{Ff}}dd}{{A`{BDnn}}}}{{{f{BDh}}{f{Dfc}}}bADl}{{{f{AAn}}{Ch{Gb}}}AAn}{{{f{AAn}}}Gb}{{{f{AAn}}{f{{Bj{Ff}}}}}{{A`{AAnn}}}}{{{f{DfAAn}}{f{{Bj{Ff}}}}}{{A`{{f{DfAAn}}n}}}}{{{f{DfAAn}}{f{{Bj{Ff}}}}}{{f{DfAAn}}}}{{{f{AAn}}{BEb{Gb}}}f}{{{f{AAn}}{BEd{Gb}}}f}{{{f{AAn}}{f{Bd}}}f}{{{f{AAn}}BEf}f}{{{f{AAn}}Gb}f}{{{f{AAn}}{BEh{Gb}}}f}{{{f{AAn}}{Oh{Gb}}}f}{{{f{AAn}}{BEj{Gb}}}f}{{}Gb}0000{{{f{DfAAn}}Gbc}{{A`{{f{DfAAn}}n}}}BDd}{{}c{}}000000{{AAnDd}{{l{j}}}}{{{f{AAn}}}{{A`{{l{Bl}}n}}}}{{{f{AAn}}}d}1{{{f{AAn}}}{{`{Jb}}}}{{{f{AAn}}}{{`{{D`{}{{Cj{AAn}}}}}}}}{{{f{AAn}}B@`d}BEl}{{{f{AAn}}}BEn}{AAnBF`}{{{f{AAn}}}Gb}5{{{f{AAn}}}{{A`{{Ch{Ab}}n}}}}{{{f{AAn}}BDf}{{A`{{Ch{Ab}}n}}}}122{{{Gh{Ff}}}{{A`{AAnn}}}}{{{Gh{Ff}}}AAn}111{{{f{DfBEl}}}Ch}{{{f{DfBEn}}}Ch}{{{f{AAn}}}AAn}{{{f{AAn}}}{{`{{Ol{}{{Cj{{f{Ab}}}}}}}}}}{{{f{AAn}}ed}{{A`{{Gh{AAn}}n}}}{{BA`{Dd}}}{{I`{}{{Cj{c}}}}}}0{{AAne}{{A`{cn}}}{}{{Dn{AAn}{{Ad{{A`{cn}}}}}}}}{{{f{DfAAn}}e}{{A`{cn}}}{}{{Dn{{f{DfAAn}}}{{Ad{{A`{cn}}}}}}}}{{AAngc}{{A`{en}}}{}{}{{Dn{AAnc}{{Ad{{A`{en}}}}}}}}{{{f{DfAAn}}}{{Ch{Ff}}}}{{{f{AAn}}{f{AAn}}}d}{{{f{DfAAn}}{f{Bd}}Dd}{{A`{{f{DfAAn}}n}}}}{{{f{DfAAn}}{f{Bd}}c}{{A`{{f{DfAAn}}n}}}BFb}{{{f{DfAAn}}Gbc}{{A`{{f{DfAAn}}n}}}BDd}{{{f{DfAAn}}Ddc}{{A`{{f{DfAAn}}n}}}BFb};{{{f{AAn}}{Gh{Ff}}{f{BFd}}}{{A`{{Hd{Ff{Gh{Ff}}C`}}n}}}}`{{{f{AAn}}{f{Ab}}dd{Ch{Kd}}}{{A`{AAnn}}}}0{{{f{AAn}}Gbdd{Ch{Kd}}}{{A`{AAnn}}}}{{{f{AAn}}}{{BDb{El}}}}{{{f{AAn}}{f{AAn}}}{{A`{bn}}}}{{{f{AAn}}e}{{A`{AAnn}}}{{BA`{Dd}}}{{I`{}{{Cj{c}}}}}}{{{f{AAn}}Gb}{{Ch{{f{Ff}}}}}}{{{f{AAn}}c}{{A`{AAnn}}}{{BFf{Gb}}}}{{{f{AAn}}c}{{A`{{Gh{Ff}}n}}}{{BFh{Dd}}}}3{{{f{AAn}}e{f{{Mn{{BDb{El}}}}}}}{{A`{AAnn}}}{{BA`{Dd}}}{{I`{}{{Cj{c}}}}}}{{{f{AAn}}e{f{{BDb{El}}}}}{{A`{AAnn}}}{{BA`{Dd}}}{{I`{}{{Cj{c}}}}}}{{{f{DfAAn}}e}{{A`{bn}}}{{BA`{Dd}}}{{I`{}{{Cj{c}}}}}}{{{f{AAn}}}{{Hd{GbGb}}}}{{{f{AAn}}H`}AAn}{{{f{AAn}}}d}{{{f{DfAAn}}}b}{{{f{BEl}}}{{Hd{Gb{Ch{Gb}}}}}}{{{f{BEn}}}{{Hd{Gb{Ch{Gb}}}}}}{{{f{AAn}}H`Gb}AAn}00{{{f{AAn}}cFh}{{A`{AAnn}}}{{BFh{Dd}}}}{{{f{DfAAn}}cFh}{{A`{{f{DfAAn}}n}}}{{BFh{Dd}}}}{{{f{AAn}}H`}{{Hd{AAnAAn}}}}0{{{f{DfAAn}}}{{`{{D`{}{{Cj{AAn}}}}}}}}{{AAnGbd}{{Gh{AAn}}}}{{{f{AAn}}BDf}{{A`{{Ch{Ab}}n}}}}{{{f{AAn}}{Ch{Gb}}}AAn}{{{f{AAn}}{f{{l{Fb}}}}}{{A`{AAnn}}}}{AAn{{Gh{Ff}}}}{{{f{AAn}}{f{{l{Fb}}}}}AAn}{{{f{AAn}}{f{{l{Fb}}}}d}AAn}{{{f{AAn}}}{{f{AAn}}}}{{{f{AAn}}BFj}{{A`{{AAf{AAh{AAd{{AAb{Gb}}}}}}n}}}}{fc{}}00{fEj}{{{f{DfAAn}}{Ch{{f{Bd}}}}{Ch{{AAj{Ej{Gh{Ej}}}}}}}{{A`{AAnn}}}}{{{f{DfAAn}}{Ch{{f{Bd}}}}{Ch{{AAj{Dd{Gh{Dd}}}}}}}{{A`{AAnn}}}}{{{f{DfAAn}}{f{Bd}}e}{{A`{{f{DfAAn}}n}}}BDd{{ABb{{f{Ab}}}{{Ad{{A`{cn}}}}}}}}{{{f{DfAAn}}Gbe}{{A`{{f{DfAAn}}n}}}BDd{{ABb{{f{Ff}}}{{Ad{{A`{cn}}}}}}}}{c{{A`{e}}}{}{}}000{{{Hd{{BFl{{Cn{Cl}}}}{f{{BDb{BAd}}}}}}}{{A`{AAnn}}}}1{BFn{{A`{AAnn}}}}{{c{f{{BDb{El}}}}}{{A`{AAnn}}}{{D`{}{{Cj{{A`{{f{BDl}}n}}}}}}}}{{{f{AAn}}{f{Bd}}}{{A`{Gbn}}}}{{}{{A`{c}}}{}}0000{f{{A`{GjBBj}}}}{fAAl}0000{{{f{AAn}}{Ch{{f{{Bj{Ej}}}}}}BDh{Ch{{Hd{H`Gb}}}}}{{A`{AAnn}}}}{{{f{AAn}}d{Ch{{Gh{Dd}}}}BDh{Ch{{Hd{H`Gb}}}}}{{A`{AAnn}}}}1{{{f{AAn}}c}{{A`{AAnn}}}{{BFh{Dd}}}}{{{f{AAn}}c{f{Bd}}BG`}{{A`{AAnn}}}{{BFh{Dd}}}}0{{{f{AAn}}{f{AAn}}}{{A`{AAnn}}}}{{{f{DfAAn}}{f{AAn}}}{{A`{{f{DfAAn}}n}}}}{{{f{DfAAn}}{f{AAn}}}b}{{}c{}}0000{{{f{AAn}}}Gb}{{{f{DfAAn}}c}{{A`{{f{DfAAn}}n}}}BDd}{{{f{DfAAn}}c{f{{BDb{El}}}}}{{A`{{f{DfAAn}}n}}}BDd}{{{f{DfAAn}}Ab}{{f{DfAAn}}}}{{{f{AAn}}Dd{Ch{Jj}}}{{A`{AAnn}}}}{{{f{DfAAn}}Dd{Ch{Jj}}}{{f{DfAAn}}}}`````{{fh}b}0{{{f{Ff}}{f{Ff}}}}{{{f{Ff}}c}{}{AnMf}}{{FfFf}}{{Ffc}{}{AnMf}}{{{f{Ff}}{f{C`}}}Ff}0000000{{{f{Ff}}{f{C`}}AjA@`}Ff}1{{{f{Ff}}{f{C`}}Bh}Ff}{{{f{DfFf}}{f{Ff}}}{{A`{{f{DfFf}}n}}}}{{{f{Ff}}F`}{{l{Fb}}}}{{{f{Ff}}}{{A`{{f{{l{Cb}}}}n}}}}{{{f{Ff}}}{{f{Ab}}}}{{{f{BGb}}}{{f{Ab}}}}{{{f{Ff}}}{{Ch{{f{BGb}}}}}}{{{f{Ff}}}{{Ch{{f{Ab}}}}}}{{{f{BGb}}}Ab}{{{f{Ff}}}{{A`{{f{{l{Bf}}}}n}}}}{{{f{Ff}}}{{A`{{f{{l{Fd}}}}n}}}}{{{f{Ff}}}{{Ch{BGd}}}}{{{f{Ff}}{f{Ff}}}{{A`{Ffn}}}}{{{f{Ff}}{f{Ff}}}}{{FfFf}}0110{{{f{Ff}}}{{A`{{f{{l{Bl}}}}n}}}}{f{{f{c}}}{}}0{{{f{Df}}}{{f{Dfc}}}{}}0{{{f{Ff}}{f{El}}}{{A`{Ffn}}}}{{{f{BGb}}{f{El}}}{{A`{BGbn}}}}10{{{f{Ff}}{f{El}}Fl}{{A`{Ffn}}}}{{{f{BGb}}{f{El}}Fl}{{A`{BGbn}}}}{{{f{Ff}}}{{A`{{f{AMj}}n}}}}{{{f{Ff}}}Ff}0{{{f{BGb}}}BGb}{{f{f{Dfc}}}b{}}0{fb}0{{{f{Ff}}}{{A`{{f{{Kn{KlKj}}}}n}}}}{{{f{Ff}}}{{A`{{f{{Kn{LdL`}}}}n}}}}{{{f{Ff}}}{{A`{{f{{Kn{LhLf}}}}n}}}}{{}Ff}{Gb{{f{c}}}{}}0{Gb{{f{Dfc}}}{}}0{{{f{Ff}}c}{}{AnMf}}{{FfFf}}{{{f{Ff}}{f{Ff}}}}{{Ffc}{}{AnMf}}{{{f{Ff}}{f{Ff}}}{{A`{Ffn}}}}{Gbb}0?{{{f{Ff}}}{{f{El}}}}{{{f{BGb}}}{{f{El}}}}{{{f{Ff}}}{{A`{{f{{Kn{LjL`}}}}n}}}}{{{f{Ff}}{f{Ff}}}d}{{{f{Ff}}{f{Ff}}}{{A`{{l{Bl}}n}}}}011{{{f{Ff}}}{{A`{Ffn}}}}{{{f{DfFf}}{f{Ff}}}{{A`{{f{DfFf}}n}}}}{{{f{Ff}}JhGb}{{A`{Ffn}}}}{{{f{Ff}}}{{A`{{f{{l{Eh}}}}n}}}}{{{f{Ff}}}{{A`{{f{{l{Ef}}}}n}}}}{{{f{Ff}}}{{Eb{Oj}}}}{{{f{Ff}}AIb}{{A`{Ffn}}}}{{{f{Ff}}{f{{l{Bl}}}}}{{A`{Ffn}}}}{{{f{Ff}}{f{DfHj}}}{{A`{bHl}}}}{{{f{BGb}}{f{DfHj}}}{{A`{bHl}}}}{BGbFf}{AbFf}{cc{}}0{{AbGb}{{A`{BGbn}}}}{{DdGb{f{El}}}Ff}{{{f{Ff}}GbGb}Ff}{{{f{Ff}}Gb}{{A`{Jhn}}}}{{{f{Ff}}}Gb}{{{f{Ff}}}Jl}{{{f{Ff}}Gb}{{Ch{{f{Jn}}}}}}{{{f{Ff}}Gb}Jh}{{{f{Ff}}{f{Ff}}}{{A`{{l{Bl}}n}}}}0{{{f{Ff}}}d}{{{f{BGb}}}d}{{{f{Ff}}{Ch{Gb}}}Ff}{{{f{Ff}}}{{A`{{f{{l{Nn}}}}n}}}}{{{f{Ff}}}{{A`{{f{{l{Kj}}}}n}}}}{{{f{Ff}}}{{A`{{f{{l{L`}}}}n}}}}{{{f{Ff}}}{{A`{{f{{l{Nj}}}}n}}}}{{{f{Ff}}}{{A`{{f{{l{Fb}}}}n}}}}{{}Gb}0{{}c{}}0{BDdFf}{FfFf}{BGbFf}{FfAAn}{{{f{DfFf}}}{{f{DfAb}}}}>={{{f{Ff}}}{{A`{{l{Bl}}n}}}}000{{{f{Ff}}}{{l{Bl}}}}0{{{f{Ff}}}M`}{{{f{Ff}}}Gb}{{{f{BGb}}}Gb}{{{f{Ff}}}{{A`{{f{{l{Ah}}}}n}}}}{{{f{Ff}}{f{Ff}}}{{A`{{l{Bl}}n}}}}0{{{f{Ff}}}{{A`{Mhn}}}}0{{{f{Ff}}c}{}{AnMf}}{{{f{Ff}}{f{Ff}}}}{{FfFf}}{{Ffc}{}{AnMf}}{{{f{Ff}}}{{f{Dd}}}}{{{f{BGb}}}{{f{Dd}}}}{{Ddc}Ff{}}{{DdMhGb}BGb}{{Dd{f{El}}}Ff}{{DdEl}BGb}{{{f{Ff}}GbGb}Ff}{{DdMhGb}Ff}=={{{f{Ff}}}Gb}{{{f{Ff}}}{{Cn{Jb}}}}>{{{f{Ff}}}Ff}>;=<{{{f{DfFf}}Dd}b}{{{f{Ff}}{f{{Bj{H`}}}}}{{A`{Ffn}}}}0{{{f{BGb}}Gb}BGb}3{{{f{Ff}}Ajdd{Ch{Kd}}}{{A`{Ffn}}}}{{{f{Ff}}Gbdd{Ch{Kd}}}{{A`{Ffn}}}}{{{f{DfFf}}M`}b}{{{f{Ff}}H`}Ff}{{{f{DfFf}}}b}{{{f{Ff}}{Ch{Kd}}}Ff}{{{f{Ff}}H`Gb}Ff}{{{f{Ff}}F`}{{A`{Ffn}}}}{{{f{Ff}}H`}{{Hd{FfFf}}}}{{{f{Ff}}}{{A`{{f{{l{Bb}}}}n}}}}{{{f{Ff}}{f{El}}}{{A`{Ffn}}}}{{{f{BGb}}{f{El}}}{{A`{BGbn}}}}{{{f{Ff}}}{{A`{{f{{l{j}}}}n}}}}{{FfFf}}{{{f{Ff}}c}{}{AnMf}}{{{f{Ff}}{f{Ff}}}}{{Ffc}{}{AnMf}}{{{f{Ff}}{Ch{Gb}}}Ff}{{{f{Ff}}{f{{l{Fb}}}}}{{A`{Ffn}}}}{FfAb}{BGbAb}{{{f{Ff}}{f{{Bj{Jj}}}}}{{A`{Ffn}}}}{{{f{Ff}}{f{{Bj{Jj}}}}}Ff}{{{f{Ff}}{f{{l{Fb}}}}}Ff}{fc{}}0{{{f{Ff}}}Ff}{{{f{BGb}}}Ab}{c{{A`{e}}}{}{}}0{{}{{A`{c}}}{}}0{fAAl}0{{{f{Ff}}}{{A`{{f{{l{Nd}}}}n}}}}{{{f{Ff}}}{{A`{{f{{l{Fb}}}}n}}}}{{{f{Ff}}}{{A`{{f{{l{Nh}}}}n}}}}{{{f{Ff}}}{{A`{{f{{l{Of}}}}n}}}}{{{f{Ff}}}{{A`{Ffn}}}}0{{{f{Ff}}A@l{f{Df{Gh{Kd}}}}}{{A`{bn}}}}{{{f{Ff}}A@l{f{Df{Bj{Kd}}}}}{{A`{bn}}}}{{}c{}}0{{FfDd}Ff}{{{f{Ff}}c}Ff{AnMf}}{{{f{Ff}}{f{{l{Bl}}}}{f{Ff}}}{{A`{Ffn}}}}0`{{fh}b}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{BGf}}}BGf}{{f{f{Dfc}}}b{}}{fb}{{}BGf}{Gb{{f{c}}}{}}{Gb{{f{Dfc}}}{}}{Gbb}{{{f{BGf}}{f{BGf}}}d}{{f{f{c}}}d{}}00{{{f{BGf}}{f{DfHj}}}{{A`{bHl}}}}{cc{}}{{{f{BGf}}{f{Dfc}}}bADl}`{{}Gb}{{}c{}}`{fc{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAl}``4````````````````````````````````{{fh}b}000{{{f{BDn}}}{{A`{AAnn}}}}`{{{f{BGh}}}{{f{{Bj{{BGj{Jj}}}}}}}}{{{f{BDn}}c}{{A`{AAnn}}}{{Af{AAn}{{Ad{{A`{AAnn}}}}}}IlIn}}{{{f{C`}}}{{l{Ah}}}}{f{{f{c}}}{}}0000000{{{f{Df}}}{{f{Dfc}}}{}}0000000{{{f{BGh}}}BGh}{{{f{C`}}}C`}{{{f{BDn}}}BDn}{{{f{BGl}}}BGl}{{f{f{Dfc}}}b{}}000{fb}000;{{}BGh}{{}C`}{Gb{{f{c}}}{}}000{{{f{BGn}}}f}1111{Gb{{f{Dfc}}}{}}0000000`{{BH`c}{}BHb}{Gbb}000{{{f{DfBGh}}}b}1111{{{f{BGh}}{f{BGh}}}d}{{{f{C`}}{f{C`}}}d}{{f{f{c}}}d{}}00000`{{{f{BHd}}}Jj}{{{f{BGh}}}{{f{{Bj{Jj}}}}}}{{{f{BDn}}}{{A`{AAnn}}}}{{{f{DfBGh}}}{{f{Df{Gh{Jj}}}}}}{{{f{BGh}}{f{DfHj}}}{{A`{bHl}}}}{{{f{C`}}{f{DfHj}}}{{A`{bHl}}}}{{{f{BDn}}{f{DfHj}}}{{A`{bHl}}}}{{{f{BGl}}{f{DfHj}}}{{A`{bHl}}}}0{{{f{Bd}}BGl}Dd}{cc{}}0000{{{Gh{{Gh{{Hd{Jj{BGj{Jj}}}}}}}}}BGh}{{{Gh{{Hd{{Gh{Jj}}{Gh{{BGj{Jj}}}}}}}}}BGh}{{{Gh{{Hd{Jj{BGj{Jj}}}}}}}BGh}{BGhC`}444{BHfBGl}{cBGh{{I`{}{{Cj{{Hd{Jj{BGj{Jj}}}}}}}}}}{cBGh{{Ij{}{{Cj{{Hd{Jj{BGj{Jj}}}}}}}}}}{{{f{C`}}Gb}BHd}{{{f{BDn}}}{{f{C`}}}}{{{f{DfBDn}}}{{f{DfC`}}}}{{{f{C`}}}{{l{Fb}}}}{{{f{BHh}}dd}{{A`{C`n}}}}{{{f{BDn}}}{{A`{AAnn}}}}{{{f{DfC`}}}{{f{DfBGh}}}}{{}Gb}0000000{{}c{}}0000000{C`BGh}1{BGh}{{{f{BGh}}}}301{{{f{BHd}}}d}{{{f{C`}}}d}{{{f{BGh}}}d}{{{f{BGh}}}{{BHl{{BHj{{G`{Jj}}}}{G`{{BGj{Jj}}}}}}}}{{{f{C`}}}BHn}{{{f{BDn}}}{{Gh{Ff}}}}{{{f{BDn}}{Ch{{Hd{H`Gb}}}}}{{Gh{Ff}}}}={{{f{BHd}}}Gb}{{{f{C`}}}Gb}?????{{{Gh{Jj}}{Gh{{BGj{Jj}}}}d}BGh}{{{f{AAn}}{Gh{Ff}}C`{Ch{{Gh{Dd}}}}}BDn}{{{f{DfBHn}}}Ch}{{{f{DfBHn}}Gb}Ch}{{{f{BDn}}c}{{A`{AAnn}}}{{Dn{AAn}{{Ad{{A`{AAnn}}}}}}IlIn}}{f}{{{f{C`}}}BH`}{{{f{BDn}}AjA@`}{{A`{AAnn}}}}{{BDne}BDn{{BA`{Dd}}}{{I`{}{{Cj{c}}}}}}{{{f{C`}}H`Gb}BGn}{{{f{DfBGh}}}b}{{{f{DfC`}}}b}{{{f{BDn}}Bh}{{A`{AAnn}}}}{{{f{BDn}}}{{A`{AAnn}}}}{C`{{Gh{Jj}}}}0{BDnC`}{{{f{DfBDn}}}C`}{fc{}}000{fEj}{c{{A`{e}}}{}{}}0000000{{}{{A`{c}}}{}}0000000{f{{A`{GjBBj}}}}{fAAl}0000000{C`C`}{{{f{C`}}}{{f{BGh}}}}{{{f{C`}}}{{f{{Gh{{AAb{Jj}}}}}}}}={{}c{}}0000000`````{{{f{BGh}}c}Ab{{Dn{{Hd{Jj{f{{BGj{Jj}}}}}}}{{Ad{Ch}}}}IlIn}}{{{f{BGh}}c}Ab{{Dn{{Hd{Jj{f{{BGj{Jj}}}}}}}{{Ad{}}}}IlIn}}{{{f{{Bj{{AAb{Jj}}}}}}c}Ab{{Dn{{AAb{Jj}}}{{Ad{Ch}}}}IlIn}}{{{f{{Bj{{AAb{Jj}}}}}}c}Ab{{Dn{{AAb{Jj}}}{{Ad{}}}}IlIn}}{{{f{{Bj{c}}}}e{Ch{{Mn{AGf}}}}}{{ALl{c}}}{BI`BIb}{{D`{}{{Cj{{Hd{JjJj}}}}}}Jf}}{{{f{{Bj{c}}}}{f{Ib}}e{Ch{{Mn{AGf}}}}}{{ALl{c}}}{BI`BIb}{{D`{}{{Cj{{Hd{JjJj}}}}}}Jf}}{{{f{{l{c}}}}JjJj}{{l{c}}}Dl}{{{f{{Gh{{AAb{Jj}}}}}}{f{{Bj{{Cn{Cl}}}}}}}d}{{{f{BId}}{f{C`}}}Ab}{{BIfBIf}BIf}0`{{{f{BIh}}{f{AAn}}{f{C`}}}{{A`{Abn}}}}{{{f{BIh}}}{{A`{{f{Dd}}n}}}}````````````````````````````````````{{fh}b}00{{{f{DfBIj}}Jh}{{Ch{b}}}}{{{f{DfBIl}}{f{Jh}}}b}0{f{{f{c}}}{}}00{{{f{Df}}}{{f{Dfc}}}{}}00{{{f{BIj}}}BIj}{{{f{BIl}}}BIl}{{{f{BDl}}}BDl}{{f{f{Dfc}}}b{}}00{fb}00{{{f{{Bj{c}}}}}El{{Id{El}}}}{{}BDl}{Gb{{f{c}}}{}}00{Gb{{f{Dfc}}}{}}00{Gbb}00{{{f{BDl}}{f{BDl}}}d}{{f{f{c}}}d{}}00{{{f{BDl}}{f{DfHj}}}{{A`{bHl}}}}{cc{}}{{{Hd{{f{El}}Gb}}}BIj}1{{{Hd{{f{El}}Gb}}}BIl}2{{gGb}{{BDb{El}}}{{BA`{Dd}}}{{BA`{El}}}{{D`{}{{Cj{{Gh{{Hd{ce}}}}}}}}}}{{}Gb}00{{}c{}}00{BIjAb}{BIlAb}{{{f{El}}Gb}BIj}{{{f{El}}Gb}BIl}{{{Gh{Jh}}}BDl}{{{f{DfBIj}}Gb}Ab}{{{f{DfBIl}}Gb}Ab}{{{f{{Bj{BDl}}}}{Ch{Gb}}}{{A`{{BDb{El}}n}}}}0{{{f{{Bj{BDl}}}}{Ch{Gb}}}{{A`{{Gh{El}}n}}}}{fc{}}00{c{{A`{e}}}{}{}}00{{}{{A`{c}}}{}}00{fAAl}00==={{{f{{Bj{AAn}}}}}{{A`{AAnn}}}}{{{f{{Bj{AAn}}}}d}{{A`{AAnn}}}}````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{fh}b}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{AAn{f{{Bj{Dd}}}}{f{{Bj{Dd}}}}{Ch{Dd}}{f{AAn}}}AAn}{{BF`c}{{A`{AAnn}}}{{Dn{BIn{f{Df{BJb{BJ`}}}}{f{Df{BJb{BJd}}}}}{{Ad{{A`{bn}}}}}}}}{{{f{BJf}}{f{{Bj{Jj}}}}dd}AAn}{{{f{BJf}}{f{AAn}}{f{Ab}}{f{Ab}}BJh}{{A`{AAnn}}}}`{{{f{Bd}}{f{Bd}}}Dd}{{BJj{Mn{{Bj{Dd}}}}}BBd}{{{f{BFn}}Gb}{{Hd{BFnBFn}}}}{{{f{AHd}}}Aj}{{{f{BJl}}}Aj}{{{f{BJn}}{f{{Bj{A@h}}}}M`}AAn}0{{{f{BJn}}{f{{Bj{A@h}}}}}AAn}0{{{f{BK`}}{Ch{{Gh{{f{Bd}}}}}}{Ch{{f{Bd}}}}d}{{A`{AAnn}}}}{{BF`d}BF`}{{{BKb{c}}{Ch{{Mn{BKd}}}}}{{BKb{c}}}BKf}{{{f{Ab}}}{{A`{Abn}}}}{BBdBBd}{{{BKh{}{{Ad{c}}}}{f{Ab}}}c{}}{{BBdBBd}}{{BKjBKj}}{{{f{BG`}}H`{Ch{{f{AMf}}}}}{{A`{H`n}}}}0{{{f{BKl}}{f{Ab}}}{{A`{Abn}}}}1{{BKnc}BF`{{Ih{{Bj{BBd}}}}}}6`{{BBdc}BBd{{BA`{Dd}}}}{{}BBd}{{BBdd}BBd}{{}BL`}{c{{A`{BBdn}}}{{Ih{{Bj{BBd}}}}}}{{{f{{Mn{ce}}}}}{{f{e}}}A@fBLb}{{BLdd}BLd}`{{{f{BLf}}}d}00`{{BBdc}BBd{{BA`{BBd}}}}{{{Mn{BLf}}BLh}{{A`{BF`n}}}}75{{BBdcd}BBd{{BA`{BBd}}}}{{{f{DfACd}}}b}{{{f{DfACf}}}b}{{{f{DfACd}}{Ch{{f{Ab}}}}}{{A`{bn}}}}{{{f{DfACf}}{Ch{c}}}b{}}{{{f{DfACd}}{f{Ab}}}{{A`{bn}}}}{{{f{DfACf}}c}b{}}{{{f{{AHh{}{{AHf{c}}}}}}g}{{AHh{}{{AHf{c}}}}}{}{}{{Dn{{Ch{e}}}{{Ad{{Ch{c}}}}}}E`}}{{BKnc{Mn{{BDb{El}}}}}BF`{{Dn{AAn}{{Ad{{A`{AAnn}}}}}}IlIn}}{{BBdc{BLl{{Mn{BLj}}}}}BBd{{Dn{Ff}{{Ad{{A`{{Ch{Ff}}n}}}}}}IlIn}}{{BBdBBdc{BLl{{Mn{BLj}}}}}BBd{{Dn{FfFf}{{Ad{{A`{{Ch{Ff}}n}}}}}}IlIn}}{{{f{BBd}}{f{Dfc}}f}{{A`{BLnn}}}{{Af{{f{BBd}}f}{{Ad{{A`{BLnn}}}}}}}}{{{f{AHj}}{f{Dn}}}AHj}{{{f{AHj}}{f{Dn}}}{{l{c}}}Dl}{{BBdc{f{{Bj{BBd}}}}{BLl{{Mn{BLj}}}}}BBd{{Dn{{f{Df{Bj{Ff}}}}}{{Ad{{A`{{Ch{Ff}}n}}}}}}IlIn}}{{BBdBM`{f{{Bj{BBd}}}}dd}BBd}{{ce{BLl{{Mn{BLj}}}}d}BBd{{Dn{{f{Df{Bj{Ff}}}}}{{Ad{{A`{{Ch{Ff}}n}}}}}}IlIn}{{Ih{{Bj{BBd}}}}}}{{{f{{AHh{}{{AHf{c}}}}}}i{f{Df{Bj{g}}}}}b{}{}{}{{Dn{{Ch{e}}{f{g}}}{{Ad{g}}}}}}{{{f{{AHh{}{{AHf{c}}}}}}g}{{AHh{}{{AHf{c}}}}}{}{}{{Dn{e}{{Ad{c}}}}E`}}{{BBdBBdH`El}BBd}{BFn{{Mn{Cl}}}}{{{f{BMb}}}{{Ch{Gb}}}}{BMdBBd}{BMfBBd}{BBdBBd}3210{{{f{AHl}}F`}{{l{Fb}}}}{{BBdF`}BBd}{{{f{BJl}}F`}{{l{Fb}}}}{{cFh}BBd{{Ih{{Bj{BBd}}}}}}{{{f{AHl}}{f{{Bj{Ff}}}}{f{Fh}}}{{A`{{l{Fb}}n}}}}{{{f{AHn}}}{{A`{{l{Fb}}n}}}}6{{{f{BJl}}}{{A`{{l{Fb}}n}}}}{cBBd{{BA`{BBd}}}}{{{f{BMh}}}{{f{{Bj{Oj}}}}}}``{BBdBMd}{eAMn{}{{I`{}{{Cj{c}}}}}}{cBFn{{I`{}{{Cj{{Ch{b}}}}}}}}{cBFn{{I`{}{{Cj{b}}}}}}2{{AGde}AN`{}{{I`{}{{Cj{c}}}}}}0{{AGdc}BFn{{I`{}{{Cj{{Ch{b}}}}}}}}{{AGdc}BFn{{I`{}{{Cj{b}}}}}}`{{{f{Df{BMj{c}}}}}{{A`{{BDb{BAd}}n}}}BMl}{{{f{BLf}}}{{f{AGf}}}}{{{f{BJl}}}{{f{AGf}}}}{{{f{BMn}}}{{f{AGf}}}}{{{f{BFn}}}{{f{AGf}}}}{{{f{DfBJl}}}{{f{DfAGf}}}}{{{f{DfBFn}}}{{f{DfAGf}}}}{{{f{Mh}}}Jh}{{{f{BN`}}}{{f{{l{Bf}}}}}}{{{f{BNb}}{Ch{{f{Bd}}}}d}{{A`{{Kn{KlKj}}n}}}}{{{f{BNb}}{Ch{{f{Bd}}}}}{{A`{{Kn{KlKj}}n}}}}{{{f{BNb}}{Ch{{f{Bd}}}}Lbdd{Ch{{f{Dd}}}}{f{{l{Bb}}}}}{{A`{{Kn{LdL`}}n}}}}{{{f{BNb}}{Ch{{f{Bd}}}}Lbd{Ch{{f{Dd}}}}{f{{l{Bb}}}}}{{A`{{Kn{LdL`}}n}}}}{{{f{{Mn{c}}}}}BNd{BNfA@f}}{{{f{BNh}}}{{f{{l{Ah}}}}}}{{{f{{Mn{ce}}}}}{}A@fBLb}{{{f{{Mn{c}}}}}ObBNj}{{{f{BNl}}}{{f{BBd}}}}{{{f{{Mn{ce}}}}}{{f{c}}}A@fBLb}{{{f{ANf}}}{{f{El}}}}{{{f{BNn}}}{{f{Ab}}}}{{{f{DfBJl}}}{{A`{Gbn}}}}{{{f{{ALd{}{{ANh{c}}{ANj{e}}{ANl{g}}}}}}}{{Ch{{f{{Bj{c}}}}}}}Jd{ANn{AO`{c}}}{{Gn{}{{Cj{c}}}}JfIlIn}}{{{f{BO`}}}{{f{{l{Bb}}}}}}{{{Gh{BBd}}}BBd}{{{f{BNb}}{Ch{{f{Bd}}}}d}{{A`{{Kn{LlL`}}n}}}}{{{Mn{{BOb{c}}e}}}{{Mn{ce}}}{}BLb}{{{Mn{{Bj{{BOb{c}}}}e}}}{{Mn{{Bj{c}}e}}}{}BLb}{{{f{Bd}}}BBd}{{BBd{Ch{Jj}}}BBd}{{{f{BOd}}}{{A`{{l{Bb}}n}}}}{{{f{BOd}}}{{l{Bb}}}}{{{f{{Kn{LdL`}}}}{f{Lb}}{f{AMf}}}{{Kn{LjL`}}}}`{{{BKb{{Cn{BKf}}}}{Ch{{Mn{{BDb{El}}}}}}}{{A`{BOfn}}}}{{{BOh{c}}{f{{BDb{El}}}}}{{A`{{BOj{c}}n}}}BOl}{{{BOn{c}}{f{{BDb{El}}}}}{{A`{{C@`{c}}n}}}BOl}{{{C@b{c}}Gb}{{A`{C@dn}}}BKf}{{{C@f{c}}{f{{BDb{El}}}}}{{A`{{C@h{c}}n}}}BOl}{{{f{Df{BKb{c}}}}}{{A`{C@jn}}}BKf}`{BBdC@l}{{BBdC@nBBd}BBd}{{BKjBKj}}{{BL`BL`}BL`}{{{f{BJl}}{f{Ab}}}{{A`{Abn}}}}{{{f{DfBL`}}BL`}b}210{{{f{BL`}}}Jj}04321{f{{f{c}}}{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{{f{{Mn{ce}}}}}{{f{c}}}A@fBLb}111111111111{{{f{Df}}}{{f{Dfc}}}{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{BF`JjcFh}BF`{{Ih{{Bj{BBd}}}}}}{BFn{{Cn{Cl}}}}``{BF`BF`}```{{{f{CA`}}{f{Dd}}}{{A`{Ddn}}}}{{CAb{Gh{BBd}}}{{A`{BBdn}}}}{{{f{AMj}}{f{AMj}}c}{{A`{AMjn}}}AOf}{{{f{BMn}}{f{Df{Bj{Ff}}}}}{{A`{{Ch{Ff}}n}}}}{{{f{CAd}}FfFf}{{A`{Ffn}}}}{{CAb{Gh{BBd}}}BBd}{{{f{CAf}}}b}{{BBdEl}BBd}{{{f{BJl}}{f{El}}Fl}{{A`{Abn}}}}{{BF`{CAh{{f{Bd}}ElA@l}}d}BF`}{{{f{AI`}}{f{El}}}{{A`{Abn}}}}3{{{f{AOh}}{f{El}}}{{A`{Abn}}}}{{BF`Eld}BF`}2{{{f{AI`}}{f{El}}Fl}{{A`{Abn}}}}{{{f{AOh}}{f{El}}Fl}{{A`{Abn}}}}{{BBdElFl}BBd}`{BBdCAj}{{{f{{Mn{c}}}}}{{Ch{{f{ALh}}}}}{ALhA@f}}{BBdBBd}{{{f{CAl}}}{{A`{Abn}}}}1`{{{f{CAn}}}{{A`{{l{Kj}}n}}}}{{{f{BFn}}Gb}d}{{{C@b{c}}{f{{BDb{BAd}}}}}{{A`{{C@b{c}}n}}}BKf}{{{f{CB`}}{f{Ab}}}{{A`{Abn}}}}{{{f{BJl}}{f{Ab}}}{{A`{Abn}}}}{{{f{CB`}}c}{{A`{Abn}}}B`}{{{f{BJl}}}{{Gf{{G`{{Cn{Cl}}}}{Gd{{f{{Cn{Cl}}}}}{{Ad{Gb}}}}}}}}``{{{f{BJl}}}{{f{{Gh{{Cn{Cl}}}}}}}}{{{f{DfBJl}}}{{f{Df{Gh{{Cn{Cl}}}}}}}}{{{f{Ab}}{f{Ab}}{f{Ab}}}{{A`{Abn}}}}{{BBdBBdBBd}BBd}{{{f{Ab}}{f{Ab}}}{{A`{Abn}}}}{{BBdBBd}BBd}10{{{f{CAf}}}CAf}{{{f{BF`}}}BF`}{{{f{BKn}}}BKn}{{{f{BLh}}}BLh}{{{f{CBb}}}CBb}{{{f{CBd}}}CBd}{{{f{CBf}}}CBf}{{{f{CBh}}}CBh}{{{f{CBj}}}CBj}{{{f{BE`}}}BE`}{{{f{BFd}}}BFd}{{{f{CBl}}}CBl}{{{f{BG`}}}BG`}{{{f{CBn}}}CBn}{{{f{CC`}}}CC`}{{{f{CCb}}}CCb}{{{f{CCd}}}CCd}{{{f{AB`}}}AB`}{{{f{A@h}}}A@h}{{{f{CCf}}}CCf}{{{f{CCh}}}CCh}{{{f{CCj}}}CCj}{{{f{CCl}}}CCl}{{{f{CCn}}}CCn}{{{f{BJh}}}BJh}{{{f{CD`}}}CD`}{{{f{CDb}}}CDb}{{{f{CDd}}}CDd}{{{f{CDf}}}CDf}{{{f{CDh}}}CDh}{{{f{CDj}}}CDj}{{{f{CDl}}}CDl}{{{f{CDn}}}CDn}{{{f{CE`}}}CE`}{{{f{CEb}}}CEb}{{{f{CEd}}}CEd}{{{f{CEf}}}CEf}{{{f{CEh}}}CEh}{{{f{CEj}}}CEj}{{{f{CEl}}}CEl}{{{f{CEn}}}CEn}{{{f{CF`}}}CF`}{{{f{CFb}}}CFb}{{{f{CFd}}}CFd}{{{f{CFf}}}CFf}{{{f{CFh}}}CFh}{{{f{CFj}}}CFj}{{{f{CFl}}}CFl}{{{f{CFn}}}CFn}{{{f{CG`}}}CG`}{{{f{CGb}}}CGb}{{{f{CGd}}}CGd}{{{f{CGf}}}CGf}{{{f{BNl}}}BNl}{{{f{BBd}}}BBd}{{{f{CGh}}}CGh}{{{f{C@n}}}C@n}{{{f{{BLl{c}}}}}{{BLl{c}}}Jd}{{{f{CGj}}}CGj}{{{f{CGl}}}CGl}{{{f{CGn}}}CGn}{{{f{CH`}}}CH`}{{{f{CHb}}}CHb}{{{f{CHd}}}CHd}{{{f{BM`}}}BM`}{{{f{CHf}}}CHf}{{{f{CHh}}}CHh}{{{f{CHj}}}CHj}{{{f{CHl}}}CHl}{{{f{CHn}}}CHn}{{{f{CI`}}}CI`}{{{f{CIb}}}CIb}{{{f{CId}}}CId}{{{f{CIf}}}CIf}{{{f{CIh}}}CIh}{{{f{BKj}}}BKj}{{{f{CAb}}}CAb}{{{f{BL`}}}BL`}{{{f{CIj}}}CIj}{{{f{CIl}}}CIl}{{{f{{Mn{ce}}}}}{{Mn{ce}}}A@f{BLbJd}}{{{f{CIn}}}CIn}{{{f{CJ`}}}CJ`}{{{f{A@b}}}A@b}{{{f{BFj}}}BFj}{{{f{BFn}}}BFn}{{{f{Mh}}}Mh}{{{f{BAd}}}BAd}{{{f{A@`}}}A@`}{{{f{CJb}}}CJb}{{{f{CJd}}}CJd}{{{f{CJf}}}CJf}{{{f{BJl}}}{{Mn{BJl}}}}{{f{f{Dfc}}}b{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{fb}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000````{{{f{CJh}}}{{Ch{{f{CJj}}}}}}{{{f{CBb}}}{{Ch{{f{CJj}}}}}}{{{f{CBf}}}{{Ch{{f{CJj}}}}}}``{{{f{BG`}}{f{BG`}}}B@f}{{{f{{Mn{ce}}}}{f{{Mn{ce}}}}}B@f{CJlA@f}BLb}{{{f{{Bj{BBd}}}}}BBd}{{BLdCDb}BLd}{{{f{CDb}}{f{CDf}}}d}`{{{f{{Bj{Ff}}}}}{{A`{Ffn}}}}{cBBd{{BA`{Dd}}}}{BF`{{A`{AAnn}}}}{c{{A`{{Gh{AAn}}n}}}{{Ij{}{{Cj{BF`}}}}}}{B@he{}{{AMn{c}}ALd}}0{{B@hAGd}e{}{{AN`{c}}ALd}}0{{ADnDd}{{l{c}}}Dl}{{AE`{f{{l{c}}}}}{{l{c}}}Dl}10{{AE`DdEl}{{l{c}}}Dl}0{BF`{{A`{CAfn}}}}{{{f{DfBF`}}}{{A`{{Mn{{BDb{El}}}}n}}}}{eBBd{{BA`{Dd}}}{{I`{}{{Cj{c}}}}}}{{{f{CIj}}Gb}CJn}``{{{f{BK`}}{Gh{{f{Bd}}}}{Ch{{f{Bd}}}}d}{{A`{AAnn}}}}`{{f{f{c}}}B@f{}}0{BL`BL`}```{{{f{CFn}}}{{A`{{Mn{{BDb{El}}}}n}}}}{{cCJ`}{{A`{BF`n}}}{{Ih{{Bj{BF`}}}}}}{{{f{BOd}}{f{{l{Bb}}}}}{{l{Bb}}}}{{ed}{{A`{BBdn}}}{{BA`{BBd}}Jd}{{Ih{{Bj{c}}}}}}{{{f{CJh}}{Gh{BF`}}}{{A`{BF`n}}}}{{{f{CBb}}{Gh{BF`}}}{{A`{BF`n}}}}44{e{{A`{BBdn}}}{{BA`{BBd}}Jd}{{Ih{{Bj{c}}}}}}{{c{f{Bd}}d}BBd{{Ih{{Bj{BBd}}}}}}{{BMdc}BBd{{BA`{BBd}}}}{{{f{CK`}}{f{{Bj{Bh}}}}}{{l{Bl}}}}{{{f{BOd}}{f{Bd}}d}{{A`{{l{Bl}}n}}}}{{BMfc}BBd{{BA`{BBd}}}}{{{f{BL`}}BL`}d}{{{f{CK`}}{f{{l{Bf}}}}}{{l{Bl}}}}{{{f{BOd}}{f{{l{Bb}}}}dd}{{A`{{l{Bl}}n}}}}{{{f{BOd}}{f{Bd}}}{{A`{{l{Bl}}n}}}}{{{f{Cl}}{f{AGd}}}{{Cn{Cl}}}}{{{f{Ab}}Gb}{{A`{{l{Fb}}n}}}}{BF`BF`}{{{CKb{c}}}{{A`{Gbn}}}BKf}{BBdBBd}{{{f{BOd}}{f{Bd}}d}{{A`{{l{Fb}}n}}}}{{{f{BOd}}{f{{l{Bb}}}}d}{{A`{{l{Fb}}n}}}}{{{f{ANd}}Bh{Ch{Bh}}{Ch{{f{CCl}}}}Bhd}{{A`{Gbn}}}}{{{f{{Bj{Bh}}}}Bh{Ch{Bh}}{Ch{{f{CCl}}}}Bhd}{{A`{Gbn}}}}{{{AOb{Bd}}}El}{{{f{BJf}}{f{{Bj{A@h}}}}d}AAn}`{{BF`BF`{Ch{Dd}}}BF`}{{{f{CKd}}{f{AAn}}{Ch{Dd}}{Ch{{Hd{H`Gb}}}}}{{A`{AAnn}}}}{{{f{CKd}}{f{AAn}}{Ch{{Hd{H`Gb}}}}d}{{A`{{Hd{AAnAAn}}n}}}}{{{f{Ab}}d}{{A`{Abn}}}}{{BBdd}BBd}{{BBdced}BBd{{Dn{FfFf}{{Ad{{A`{{Ch{Ff}}n}}}}}}IlInJd}{{Ih{{Bj{BBd}}}}}}212121{{ce}BBd{{Dn{FfFf}{{Ad{{A`{{Ch{Ff}}n}}}}}}IlInJd}{{Ih{{Bj{BBd}}}}}}32{{CKfBBdGbd}BBd}```{{BBdBBdBG`CBn}BBd}`{CHhBBd}`{{BBdBBdBG`CBn{Ch{Lb}}{Ch{Dd}}}BBd}0{AMdH`}00{{{f{CKh}}}{{l{Nj}}}}{{{f{CKj}}}{{l{Nj}}}}{{{f{CAn}}}{{A`{{l{Nj}}n}}}}`{{{f{CKl}}}{{l{L`}}}}{{{f{BG`}}}H`}`{{{f{BG`}}}d}```{{}b}{cbBLb}{{}BF`}{{}BLh}{{}CBd}{{}CBh}{{}CKn}{{}BE`}{{}BFd}{{}CCb}{{}CCf}{{}CCh}{{}CCj}{{}BJh}{{}CD`}{{}CDb}{{}CDd}{{}CDh}{{}CDj}{{}CDn}{{}CE`}{{}CEb}{{}CEd}{{}CEf}{{}CEj}{{}CF`}{{}CFb}{{}CFd}{{}CFf}{{}CFn}{{}BBd}{{}{{BLl{{Mn{CAd}}}}}}{{}{{BLl{{Mn{BLj}}}}}}{{}{{BLl{{Mn{CL`}}}}}}{{}CHf}{{}CHh}{{}CHj}{{}CHn}{{}CI`}{{}CIb}{{}CId}{{}CIh}{{}BL`}{{}{{Mn{Bd}}}}{{}{{Mn{CLb}}}}{{}{{Mn{c}}}CLd}{{}{{Mn{{Bj{c}}}}}{}}{{}CIn}{{}CJ`}{{}A@b}{{}BFj}{{}BAd}{{}A@`}`{{}{{AAj{{Gh{AB`}}{Gh{A@h}}}}}}{Gb{{f{c}}}{}}00{{{f{{AM`{c}}}}}f{}}11111111111111111111111111111111111111111111111111111111111111111111111111111111111{{{f{{BLl{c}}}}}f{}}222222222222222222222222{{{f{{Mn{ce}}}}}{{f{c}}}A@fBLb}333333333333{Gb{{f{Dfc}}}{}}0{{{f{Df{AM`{c}}}}}{{f{Df}}}{}}111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111```{{{f{CFn}}}{{A`{Ejn}}}}{{{f{BF`}}}{{A`{Ejn}}}}0001{{{f{{Mn{c}}}}}{{f{Bd}}}{ALhA@f}}{{{f{BAd}}c}{{A`{CLfn}}}{{Jb{}{{Cj{{f{CLh}}}}}}}}```{{{f{Ab}}H`CLj}{{A`{Abn}}}}{{BMfH`CLj}BBd}{{BBdH`CLj}BBd}{{BL`BL`}BL`}{{{f{CFn}}}{{A`{{`{BD`}}n}}}}``{{{BKh{}{{Ad{c}}}}{f{Ab}}}c{}}{{BBdBBd}}{{{f{BKl}}{f{Ab}}}{{A`{Abn}}}}{{BBdc}BBd{{BA`{BBd}}}}{{{Mn{AGfc}}}{{A`{{Mn{ec}}{Mn{AGfc}}}}}BLb{AGfIlIn}}{{{Mn{AGfc}}}{{Mn{ec}}}BLb{AGfIlIn}}{{{f{{Mn{ce}}}}}{{CLl{ce}}}A@f{JdBLb}}{Gbb}000000{{{f{DfCAf}}}b}1{{BF`e}BF`{{BA`{BKj}}}{{I`{}{{Cj{c}}}}}}22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222{{{f{Df{Mn{ce}}}}}bA@fBLb}3333333333333{BBdBBd}2{{BF`{Ch{{Gh{BBd}}}}}BF`}1{{{f{BJl}}}Ab}{{{f{{Kn{LdL`}}}}{f{Lb}}{f{AMf}}}{{Kn{LjL`}}}}`{BBdCLn}{{{f{AOh}}}{{f{El}}}}{{{f{BJl}}}{{f{El}}}}{{{f{BFn}}}{{f{AGd}}}}{{{f{Mh}}}{{f{El}}}}{{{f{BAd}}}{{f{AGd}}}}``{{{f{El}}}BBd}{cBBd{{Ih{{Bj{El}}}}}}`{CHjBBd}{{}CHf}{{}BL`}{fc{{B@n{B@l}}}}0`{{{f{CK`}}{f{{Bj{Bh}}}}}{{l{Bl}}}}{{{f{CK`}}{f{{l{Bf}}}}}{{l{Bl}}}}{{BG`{f{El}}{f{Bd}}}{{A`{bn}}}}{{BG`{Ch{{f{Bd}}}}{f{Bd}}}{{A`{bn}}}}{{{f{{BDb{c}}}}{f{{BDb{c}}}}}{{A`{bn}}}{}}{{{f{CM`}}{f{Bd}}}{{A`{bn}}}}`{{{f{CBj}}{f{CBj}}}d}{{{f{BE`}}{f{BE`}}}d}{{{f{BFd}}{f{BFd}}}d}{{{f{BG`}}{f{BG`}}}d}{{{f{CBn}}{f{CBn}}}d}{{{f{CC`}}{f{CC`}}}d}{{{f{CCb}}{f{CCb}}}d}{{{f{AB`}}{f{AB`}}}d}{{{f{CCf}}{f{CCf}}}d}{{{f{CCh}}{f{CCh}}}d}{{{f{CCj}}{f{CCj}}}d}{{{f{CCl}}{f{CCl}}}d}{{{f{CCn}}{f{CCn}}}d}{{{f{BJh}}{f{BJh}}}d}{{{f{CD`}}{f{CD`}}}d}{{{f{CDb}}{f{CDb}}}d}{{{f{CDd}}{f{CDd}}}d}{{{f{CDf}}{f{CDf}}}d}{{{f{CDh}}{f{CDh}}}d}{{{f{CDj}}{f{CDj}}}d}{{{f{CDl}}{f{CDl}}}d}{{{f{CDn}}{f{CDn}}}d}{{{f{CE`}}{f{CE`}}}d}{{{f{CEb}}{f{CEb}}}d}{{{f{CEd}}{f{CEd}}}d}{{{f{CEf}}{f{CEf}}}d}{{{f{CEh}}{f{CEh}}}d}{{{f{CEj}}{f{CEj}}}d}{{{f{CEl}}{f{CEl}}}d}{{{f{CEn}}{f{CEn}}}d}{{{f{CF`}}{f{CF`}}}d}{{{f{CFb}}{f{CFb}}}d}{{{f{CFd}}{f{CFd}}}d}{{{f{CFf}}{f{CFf}}}d}{{{f{CFh}}{f{CFh}}}d}{{{f{CFj}}{f{CFj}}}d}{{{f{CFl}}{f{CFl}}}d}{{{f{BNl}}{f{BNl}}}d}{{BBdc}BBd{{BA`{BBd}}}}{{{f{BBd}}{f{BBd}}}d}{{{f{CGh}}{f{CGh}}}d}{{{f{C@n}}{f{C@n}}}d}{{{f{{BLl{Ab}}}}{f{{BLl{Ab}}}}}d}{{{f{{BLl{{Mn{c}}}}}}{f{{BLl{{Mn{c}}}}}}}dA@f}{{{f{CGj}}{f{CGj}}}d}{{{f{CGl}}{f{CGl}}}d}{{{f{CGn}}{f{CGn}}}d}{{{f{CH`}}{f{CH`}}}d}{{{f{CHb}}{f{CHb}}}d}{{{f{CHd}}{f{CHd}}}d}{{{f{BM`}}{f{BM`}}}d}{{{f{CLf}}{f{CLf}}}d}{{{f{CHf}}{f{CHf}}}d}{{{f{CHl}}{f{CHl}}}d}{{{f{CHn}}{f{CHn}}}d}{{{f{CI`}}{f{CI`}}}d}{{{f{CIb}}{f{CIb}}}d}{{{f{CId}}{f{CId}}}d}{{{f{CIf}}{f{CIf}}}d}{{{f{CIh}}{f{CIh}}}d}{{{f{BKj}}{f{BKj}}}d}{{{f{CIl}}{f{CIl}}}d}{{{f{{Mn{ce}}}}{f{{Mn{ce}}}}}d{CMbA@f}BLb}{{{f{{Mn{Cl}}}}{f{Cl}}}d}{{{f{{Mn{CMd}}}}{f{CMd}}}d}{{{f{CIn}}{f{CIn}}}d}{{{f{CJ`}}{f{CJ`}}}d}{{{f{A@b}}{f{A@b}}}d}{{{f{BFj}}{f{BFj}}}d}{{{f{BFn}}{f{BFn}}}d}{{{f{BFn}}{f{{f{Cl}}}}}d}{{{f{Mh}}{f{Mh}}}d}{{{f{BAd}}{f{BAd}}}d}{{{f{A@`}}{f{A@`}}}d}{{{f{CJf}}{f{CJf}}}d}{{BBdc}BBd{{BA`{BBd}}}}{{{f{{AId{}{{Cj{c}}}}}}e}c{}{}}0{{f{f{c}}}d{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{CMfBBdd}BBd}``{{BBdc}BBd{{BFh{Dd}}}}{{BBdc}BBd{{Ih{{Bj{El}}}}}}{{{f{Df}}c}{{A`{{f{Dfe}}BCh}}}CMh{}}{{{f{{Bj{CMj}}}}d{Ch{{f{CJj}}}}}{{A`{{Mn{{Bj{CMj}}}}n}}}}{{{f{{Bj{CMj}}}}d{Ch{{f{CJj}}}}d}{{A`{{Hd{{Mn{{Bj{CMj}}}}Gb}}n}}}}{{{f{{Bj{c}}}}{f{{Bj{c}}}}}d{{Ih{ANd}}}}{{{f{BF`}}d}{{A`{Ejn}}}}{{BF`e}BF`{{BA`{BKj}}Jd}{{Ih{{Bj{c}}}}}}{{{f{AIf}}}{{A`{Abn}}}}{BBdBBd}{{{f{AIf}}}{{A`{{Hd{Ab{Hb{H`}}}}n}}}}`{{{f{DfBL`}}c}b{{I`{}{{Cj{BL`}}}}}}{{BBdBBdBBd}BBd}{{{f{BOd}}{f{{l{Bb}}}}Gb}{{A`{{l{Bb}}n}}}}{A@h{{Hd{JjJj}}}}{{{f{BOd}}{f{Bd}}}{{A`{{l{Ah}}n}}}}{{{f{BOd}}{f{{l{Bb}}}}}{{A`{{l{Ah}}n}}}}{{{f{BOd}}{f{Bd}}{f{El}}}{{A`{Abn}}}}{{{f{ACd}}}d}{{{f{CAf}}}{{Ch{{A`{AAnn}}}}}}{{BF`Gb}{{A`{AAnn}}}}{{{f{CAf}}}{{A`{AAnn}}}}{{{f{ACd}}}{{f{Oj}}}}{{{f{BJl}}}{{Eb{Oj}}}}{{BJjH`}BBd}{{BJj{f{Bd}}}BBd}{{BJje}BBd{{BA`{Dd}}}{{I`{}{{Cj{c}}}}}}{{{f{BFn}}}{{f{{Bj{BAd}}}}}}`{{BF`c}BF`{{BA`{BBd}}}}{{BBdc}BBd{{BA`{BBd}}}}`10{{BBdAIb}BBd}{{{f{AIh}}c}{{A`{AIhn}}}{}}{{{f{AIj}}{f{{l{Bl}}}}}{{A`{{l{c}}n}}}Dl}{{{f{BJl}}{f{{l{Bl}}}}}{{A`{Abn}}}}{{BF`BBd}BF`}5{{{f{BOd}}{f{Bd}}d}{{A`{{l{Fb}}n}}}}{{{f{BOd}}{f{{l{Bb}}}}dd}{{A`{{l{Fb}}n}}}}{{{f{BOd}}{f{Bd}}}{{A`{{l{Fb}}n}}}}{CMl{{A`{AAnn}}}}{{{f{DfCMn}}{f{DfAAn}}}{{A`{bn}}}}{ACf{{l{c}}}Dl}{{AOf{f{{l{Fb}}}}{f{{l{Fb}}}}}{{A`{{l{Fb}}n}}}}{BLdBF`}{{{BKb{c}}}{{A`{AAnn}}}BKf}{CJh{{A`{BF`n}}}}{CBb{{A`{BF`n}}}}{CBf{{A`{BF`n}}}}{{{f{Df{BOh{c}}}}{f{DfAAn}}}{{A`{bn}}}BOl}{{{CN`{c}}}{{A`{AAnn}}}BKf}{{{BMj{c}}}{{A`{AAnn}}}BMl}{{{f{Df{CNb{c}}}}{f{DfAAn}}}{{A`{bn}}}BOl}{{{f{Df{BOn{c}}}}{f{DfAAn}}}{{A`{bn}}}BOl}{{{f{Df{CNd{c}}}}{f{DfAAn}}}{{A`{bn}}}BOl}{{{CNf{c}}}{{A`{AAnn}}}BKf}{{{CKb{c}}}{{A`{AAnn}}}BKf}{{{C@b{c}}}{{A`{AAnn}}}BKf}{{{C@f{c}}{f{DfAAn}}}{{A`{Kdn}}}BOl}{{{f{DfACd}}}{{l{Ah}}}}=<;{{{CN`{c}}{Ch{{Mn{BKd}}}}d}{{A`{AAnn}}}BKf}{{{f{C@d}}Gb}d}{{}BBd}{BF`BF`}{BMfBBd}{BBdBBd}`0```{{}{{BLl{{Mn{BLj}}}}}}{{{f{CAl}}}{{A`{Abn}}}}2{{BBdBBd}BBd}{{{f{Ab}}{f{Ab}}}{{A`{Abn}}}}{{{f{Df{Mn{AFj}}}}}{{A`{bBCh}}}}{{{f{BMn}}{f{DfHj}}}{{A`{bHl}}}}{{{f{CAd}}{f{DfHj}}}{{A`{bHl}}}}{{{f{CA`}}{f{DfHj}}}{{A`{bHl}}}}{{{f{CBj}}{f{DfHj}}}{{A`{bHl}}}}{{{f{BE`}}{f{DfHj}}}{{A`{bHl}}}}{{{f{BFd}}{f{DfHj}}}{{A`{bHl}}}}{{{f{CBl}}{f{DfHj}}}{{A`{bHl}}}}{{{f{BG`}}{f{DfHj}}}{{A`{bHl}}}}0{{{f{CBn}}{f{DfHj}}}{{A`{bHl}}}}{{{f{CC`}}{f{DfHj}}}{{A`{bHl}}}}{{{f{CCb}}{f{DfHj}}}{{A`{bHl}}}}{{{f{AB`}}{f{DfHj}}}{{A`{bHl}}}}{{{f{A@h}}{f{DfHj}}}{{A`{bHl}}}}{{{f{BLf}}{f{DfHj}}}{{A`{bHl}}}}{{{f{CCf}}{f{DfHj}}}{{A`{bHl}}}}{{{f{CCh}}{f{DfHj}}}{{A`{bHl}}}}{{{f{CCj}}{f{DfHj}}}{{A`{bHl}}}}{{{f{CCl}}{f{DfHj}}}{{A`{bHl}}}}{{{f{CCn}}{f{DfHj}}}{{A`{bHl}}}}{{{f{BJh}}{f{DfHj}}}{{A`{bHl}}}}{{{f{CD`}}{f{DfHj}}}{{A`{bHl}}}}{{{f{CNh}}{f{DfHj}}}{{A`{bHl}}}}{{{f{CDb}}{f{DfHj}}}{{A`{bHl}}}}{{{f{CDd}}{f{DfHj}}}{{A`{bHl}}}}{{{f{CDf}}{f{DfHj}}}{{A`{bHl}}}}0{{{f{CDh}}{f{DfHj}}}{{A`{bHl}}}}{{{f{CDj}}{f{DfHj}}}{{A`{bHl}}}}0{{{f{CDl}}{f{DfHj}}}{{A`{bHl}}}}{{{f{CDn}}{f{DfHj}}}{{A`{bHl}}}}{{{f{CE`}}{f{DfHj}}}{{A`{bHl}}}}{{{f{CEb}}{f{DfHj}}}{{A`{bHl}}}}{{{f{CEd}}{f{DfHj}}}{{A`{bHl}}}}{{{f{CEf}}{f{DfHj}}}{{A`{bHl}}}}{{{f{CEh}}{f{DfHj}}}{{A`{bHl}}}}{{{f{CEj}}{f{DfHj}}}{{A`{bHl}}}}{{{f{CEl}}{f{DfHj}}}{{A`{bHl}}}}{{{f{CEn}}{f{DfHj}}}{{A`{bHl}}}}{{{f{CF`}}{f{DfHj}}}{{A`{bHl}}}}{{{f{CFb}}{f{DfHj}}}{{A`{bHl}}}}{{{f{CFd}}{f{DfHj}}}{{A`{bHl}}}}{{{f{CFf}}{f{DfHj}}}{{A`{bHl}}}}{{{f{CFh}}{f{DfHj}}}{{A`{bHl}}}}{{{f{CFj}}{f{DfHj}}}{{A`{bHl}}}}{{{f{CFl}}{f{DfHj}}}{{A`{bHl}}}}{{{f{BBd}}{f{DfHj}}}{{A`{bHl}}}}0{{{f{CGh}}{f{DfHj}}}{{A`{bHl}}}}{{{f{C@n}}{f{DfHj}}}{{A`{bHl}}}}0{{{f{{BLl{c}}}}{f{DfHj}}}{{A`{bHl}}}{}}{{{f{CGj}}{f{DfHj}}}{{A`{bHl}}}}0{{{f{CGl}}{f{DfHj}}}{{A`{bHl}}}}0{{{f{CGn}}{f{DfHj}}}{{A`{bHl}}}}0{{{f{CH`}}{f{DfHj}}}{{A`{bHl}}}}0{{{f{CHb}}{f{DfHj}}}{{A`{bHl}}}}0{{{f{CHd}}{f{DfHj}}}{{A`{bHl}}}}0{{{f{BM`}}{f{DfHj}}}{{A`{bHl}}}}0{{{f{CLf}}{f{DfHj}}}{{A`{bHl}}}}{{{f{CHf}}{f{DfHj}}}{{A`{bHl}}}}{{{f{CHh}}{f{DfHj}}}{{A`{bHl}}}}{{{f{CHj}}{f{DfHj}}}{{A`{bHl}}}}{{{f{CHl}}{f{DfHj}}}{{A`{bHl}}}}{{{f{CHn}}{f{DfHj}}}{{A`{bHl}}}}{{{f{CI`}}{f{DfHj}}}{{A`{bHl}}}}{{{f{CIb}}{f{DfHj}}}{{A`{bHl}}}}{{{f{CId}}{f{DfHj}}}{{A`{bHl}}}}{{{f{CIf}}{f{DfHj}}}{{A`{bHl}}}}{{{f{CIh}}{f{DfHj}}}{{A`{bHl}}}}{{{f{BKj}}{f{DfHj}}}{{A`{bHl}}}}{{{f{CAb}}{f{DfHj}}}{{A`{bHl}}}}{{{f{BL`}}{f{DfHj}}}{{A`{bHl}}}}0000{{{f{CIj}}{f{DfHj}}}{{A`{bHl}}}}{{{f{CIl}}{f{DfHj}}}{{A`{bHl}}}}{{{f{{Mn{ce}}}}{f{DfHj}}}{{A`{bHl}}}{BD`A@f}BLb}{{{f{{Mn{ce}}}}{f{DfHj}}}{{A`{bHl}}}{AGhA@f}BLb}{{{f{{Mn{ce}}}}{f{DfHj}}}{{A`{bHl}}}A@fBLb}{{{f{CIn}}{f{DfHj}}}{{A`{bHl}}}}{{{f{CJ`}}{f{DfHj}}}{{A`{bHl}}}}{{{f{A@b}}{f{DfHj}}}{{A`{bHl}}}}{{{f{BFj}}{f{DfHj}}}{{A`{bHl}}}}{{{f{BFn}}{f{DfHj}}}{{A`{bHl}}}}{{{f{Mh}}{f{DfHj}}}{{A`{bHl}}}}{{{f{BAd}}{f{DfHj}}}{{A`{bHl}}}}{{{f{A@`}}{f{DfHj}}}{{A`{bHl}}}}{{{f{CJb}}{f{DfHj}}}{{A`{bHl}}}}{{{f{CJd}}{f{DfHj}}}{{A`{bHl}}}}{{{f{CJf}}{f{DfHj}}}{{A`{bHl}}}}{{{f{Bd}}BGl}Dd}```{{BBdce}BBd{{Dn{FfFf}{{Ad{{A`{{Ch{Ff}}n}}}}}}IlInJd}{{Ih{{Bj{BBd}}}}}}{{BLdd}BLd}``{{{f{Bd}}c}{{A`{BBdn}}}{{Ih{{Bj{BBd}}}}}}{{BBd{Ch{Jj}}}BBd}{cc{}}0000000{BKnBF`}{CFnBF`}22222222222222222222222222222222222{JjAB`}3333333{{{f{Bd}}}CCl}4{CDfBJh}5555555555555555555555555555555{JjBBd}{NfBBd}{ObBBd}{{{f{Bd}}}BBd}9{NlBBd}{KdBBd}{dBBd}{BhBBd}{O`BBd}{BNlBBd}{H`BBd}{AjBBd}{KbBBd}{cc{}}0{CNj{{BLl{{Mn{BMn}}}}}}{BM`{{BLl{{Mn{BMn}}}}}}{CGn{{BLl{{Mn{BMn}}}}}}{CNl{{BLl{{Mn{BMn}}}}}}{CNn{{BLl{{Mn{BMn}}}}}}{CHd{{BLl{{Mn{BMn}}}}}}{CHb{{BLl{{Mn{BMn}}}}}}{CO`{{BLl{{Mn{BMn}}}}}}{CGj{{BLl{{Mn{BMn}}}}}}{CGl{{BLl{{Mn{BMn}}}}}}:::::::{CGlBM`}{CHbBM`}{CNlBM`}{CGjBM`}>>{CObCLf}??????{CIdCIb}{cc{}}0000{EjBKj}{{{f{Bd}}}BKj}{BBdBKj}{DdBKj}4444{{{f{{Bj{c}}}}}{{Mn{{Bj{c}}}}}Jd}{CMj{{Mn{ANd}}}}{{{f{ANd}}}{{Mn{ANd}}}}{{{Gh{ce}}}{{Mn{{Bj{c}}e}}}{}{BLbJd}}{Gj{{Mn{Bd}}}}{{{Cn{ce}}}{{Mn{ce}}}A@fBLb}{Ej{{Mn{Bd}}}}{COd{{Mn{ANb}}}}{{{f{Bd}}}{{Mn{Bd}}}}{{{Mn{Bd}}}{{Mn{{Bj{Bh}}}}}}{{{AAb{c}}}{{Mn{{Bj{c}}}}}{}}{{{f{ANb}}}{{Mn{ANb}}}}{COfc{}}{c{{Mn{c}}}{}}{{{f{CLb}}}{{Mn{CLb}}}}{COh{{Mn{CLb}}}}{{{Eb{c}}}{{Mn{c}}}{COjA@f}}{cc{}}00000{COlBFn}{COnBFn}22{AjMh}{H`Mh}{ObMh}{O`Mh}{NlMh}{BhMh}{KdMh}{NfMh}{KbMh}{JjMh}<<<<<{{{f{{BDb{BAd}}}}}D@`}{Jj{{Ch{BL`}}}}{JjBL`}00{{c{Ch{Ib}}}D@b{}}{{{D@d{H`}}{D@d{Bh}}{Ch{Ib}}}D@f}{{{D@d{H`}}{D@d{Bh}}{Ch{Ib}}}D@h}{c{{AM`{{l{e}}}}}{{I`{}{{Cj{}}}}}Al}{c{{AM`{{l{Bl}}}}}{{I`{}{{Cj{d}}}}}}{cBL`{{I`{}{{Cj{BL`}}}}}}{e{{Mn{{Bj{c}}}}}{}{{I`{}{{Cj{c}}}}}}{{gGb}{{D@j{H`}}}Ih{{I`{}{{Cj{{Ch{c}}}}}}}{{I`{}{{Cj{{Ch{e}}}}}}}}0{e{{D@j{H`}}}{{I`{}{{Cj{{Ch{d}}}}}}}{{I`{}{{Cj{{Ch{c}}}}}}}}{{Dde}ADj{}{{D`{}{{Cj{{Ch{c}}}}}}}}{{gAGd}{{D@j{H`}}}BIb{{I`{}{{Cj{{Ch{c}}}}}}}{{I`{}{{Cj{{Ch{e}}}}}}}}763{{Dde}ADj{}{{D`{}{{Cj{c}}}}}}{{{f{Bd}}}{{Ch{BL`}}}}{c{{AM`{{l{e}}}}}{{Ij{}{{Cj{}}}}}Al}{e{{Mn{{Bj{c}}}}}Il{{Ij{}{{Cj{c}}}}}}`{c{{A`{{CKb{AFj}}n}}}{{BA`{CMj}}}}{{}{{Mn{c}}}A@f}{c{{Mn{ec}}}BLbA@f}{{Dd{f{{Bj{c}}}}}ADj{}}{{Dd{f{{Bj{{Ch{c}}}}}}}ADj{}}{{{f{Bd}}}{{A`{D@l}}}}{c{{AM`{{l{Bl}}}}}{{Jf{}{{Cj{d}}}}}}{c{{AM`{{l{e}}}}}{{Jf{}{{Cj{}}}}}Al}{El{{BLl{{Mn{BLj}}}}}}{{Ddc}D@n{}}{{{Gh{c}}AGd}{{ALd{}{{ANh{c}}{ANj{e}}{ANl{g}}}}}Jd{ANn{AO`{c}}}{{Gn{}{{Cj{c}}}}JfIlIn}}{{{Gh{c}}AGd}{{ALd{}{{ANh{e}}{ANj{c}}{ANl{g}}}}}{ANn{AO`{e}}}Jd{{Gn{}{{Cj{e}}}}JfIlIn}}`{{DdcGb}AIl{}}{{GbcAGd}{{ALd{}{{ANh{c}}{ANj{e}}{ANl{g}}}}}Jd{ANn{AO`{c}}}{{Gn{}{{Cj{c}}}}JfIlIn}}{{}CHf}{{BF`BF`cc}BF`{{BA`{BBd}}}}{{{f{DA`}}{f{AAn}}ei}{{A`{AAnn}}}{{BA`{Dd}}}{{I`{}{{Cj{c}}}}}{{BA`{Dd}}}{{I`{}{{Cj{g}}}}}}{{DdGb}AIn}{{GbAGd}{{ALd{}{{ANh{c}}{ANj{e}}{ANl{g}}}}}Jd{ANn{AO`{c}}}{{Gn{}{{Cj{c}}}}JfIlIn}}{{GbAGd}BFn}``{{BBdc{BLl{{Mn{BLj}}}}DAb}BBd{{Dn{Ff}{{Ad{{A`{{Ch{Ff}}n}}}}}}IlIn}}`{{BBdc}BBd{{BA`{BBd}}}}{{BBdGbGb}BBd}{{{f{{Mn{ce}}}}{f{{Mn{ce}}}}}d{DAdA@f}BLb}{{{f{BJl}}Gb}{{A`{Jhn}}}}{{BMdBBdd}BBd}{{BMfBBdd}BBd}{{{f{{ALd{}{{ANh{c}}{ANj{e}}{ANl{g}}}}}}Gb}{{Ch{c}}}Jd{ANn{AO`{c}}}{{Gn{}{{Cj{c}}}}JfIlIn}}6{{{f{AJ`}}Gb}{{A`{Jhn}}}}{{{f{AOh}}Gb}{{A`{Jhn}}}}{{{f{AJ`}}Gb}Jh}{{{f{AOh}}Gb}Jh}{CAjBBd}{{{f{BF`}}}BL`}{{{f{CIl}}}El}{{}El}{{{f{CCd}}H`CBn{Ch{{f{AMf}}}}}{{A`{CBln}}}}00{{{f{CL`}}{f{{BDb{El}}}}DAf{f{Oj}}{f{Oj}}}{{Ch{Oj}}}}{{{f{BLj}}{f{{BDb{El}}}}DAf{f{{Bj{Oj}}}}}{{A`{Ojn}}}}{{{f{D@`}}{f{Bd}}}{{Ch{Oj}}}}{{{f{AGd}}}{{f{{Bj{BAd}}}}}}{{{f{BMh}}}Gb}{{{f{{Bj{Bh}}}}}{{Ch{Gb}}}}{{{f{Df{C@b{c}}}}}{{A`{{f{{Mn{CIj}}}}n}}}BKf}{{{f{BJl}}}{{Ch{{Nb{N`}}}}}}{{{f{Df{Mn{ce}}}}}{{Ch{{f{Dfc}}}}}A@fBLb}{{{f{Df{Mn{ce}}}}}{{f{Dfc}}}A@fBLb}{{{f{BJl}}Gb}{{Ch{{f{Jn}}}}}}{{{f{BJl}}GbGb}{{Ch{{f{Jn}}}}}}{{{f{BMn}}}{{Ch{{BLl{{Mn{BLj}}}}}}}}{{{f{CCd}}CBlCBnLb{Ch{{f{AMf}}}}CCb}{{A`{DAhn}}}}{{{f{CCf}}}{{Mn{CCh}}}}{{{f{Dfc}}}{{A`{DAjn}}}{BMlBKfA@f}}{{{f{CNh}}{f{{BDb{El}}}}}{{A`{{Mn{{BDb{El}}}}n}}}}{{{f{BAn}}Gb}Jh}{{{f{{ALd{}{{ANh{c}}{ANj{e}}{ANl{g}}}}}}Gb}{{Ch{c}}}Jd{ANn{AO`{c}}}{{Gn{}{{Cj{c}}}}JfIlIn}}{{{f{BJl}}Gb}Jh}{{{f{CJh}}}d}{{{f{CBb}}}d}`{{BF`e}BKn{{BA`{BBd}}Jd}{{Ih{{Bj{c}}}}}}{{{f{DAl}}{Gh{Ff}}{f{BE`}}}{{A`{{Hd{Ff{Gh{Ff}}C`}}n}}}}{{BF`BBdcBE`}BKn{{Ih{{Bj{BBd}}}}}}2{{BG`BG`{f{{Bj{H`}}}}CBnLb{Ch{AMf}}}{{A`{{Gh{{AAb{Jj}}}}n}}}}{{CCd{f{{Bj{H`}}}}CBnLb{f{{Ch{Dd}}}}ddCCb}{{Hd{{Gh{{AAb{Jj}}}}{Gh{H`}}{Gh{H`}}}}}}{{{f{BHh}}dd}{{A`{C`n}}}}{{{f{{AId{}{{Cj{c}}}}}}e}c{}{}}{{BBdc}BBd{{BA`{BBd}}}}{{{f{{Mn{ce}}}}{f{{Mn{ce}}}}}d{DAdA@f}BLb}21`{{{f{BJl}}}d}{{{f{BE`}}{f{Dfc}}}bADl}{{{f{BFd}}{f{Dfc}}}bADl}{{{f{BG`}}{f{Dfc}}}bADl}{{{f{CBn}}{f{Dfc}}}bADl}{{{f{CC`}}{f{Dfc}}}bADl}{{{f{CCb}}{f{Dfc}}}bADl}{{{f{CCf}}{f{Dfc}}}bADl}{{{f{CCh}}{f{Dfc}}}bADl}{{{f{CCj}}{f{Dfc}}}bADl}{{{f{CCl}}{f{Dfc}}}bADl}{{{f{CCn}}{f{Dfc}}}bADl}{{{f{BJh}}{f{Dfc}}}bADl}{{{f{CD`}}{f{Dfc}}}bADl}{{{f{CDb}}{f{Dfc}}}bADl}{{{f{CDd}}{f{Dfc}}}bADl}{{{f{CDf}}{f{Dfc}}}bADl}{{{f{CDh}}{f{Dfc}}}bADl}{{{f{CDj}}{f{Dfc}}}bADl}{{{f{CDl}}{f{Dfc}}}bADl}{{{f{CDn}}{f{Dfc}}}bADl}{{{f{CE`}}{f{Dfc}}}bADl}{{{f{CEb}}{f{Dfc}}}bADl}{{{f{CEd}}{f{Dfc}}}bADl}{{{f{CEf}}{f{Dfc}}}bADl}{{{f{CEh}}{f{Dfc}}}bADl}{{{f{CEj}}{f{Dfc}}}bADl}{{{f{CEl}}{f{Dfc}}}bADl}{{{f{CEn}}{f{Dfc}}}bADl}{{{f{CF`}}{f{Dfc}}}bADl}{{{f{CFb}}{f{Dfc}}}bADl}{{{f{CFd}}{f{Dfc}}}bADl}{{{f{CFf}}{f{Dfc}}}bADl}{{{f{CFh}}{f{Dfc}}}bADl}{{{f{CFj}}{f{Dfc}}}bADl}{{{f{CFl}}{f{Dfc}}}bADl}{{{f{BNl}}{f{Dfc}}}bADl}{{{f{BBd}}{f{Dfc}}}bADl}{{{f{CGh}}{f{Dfc}}}bADl}{{{f{C@n}}{f{Dfc}}}bADl}{{{f{CGj}}{f{Dfc}}}bADl}{{{f{CGl}}{f{Dfc}}}bADl}{{{f{CGn}}{f{Dfc}}}bADl}{{{f{CH`}}{f{Dfc}}}bADl}{{{f{CHb}}{f{Dfc}}}bADl}{{{f{CHd}}{f{Dfc}}}bADl}{{{f{BM`}}{f{Dfc}}}bADl}{{{f{CHf}}{f{Dfc}}}bADl}{{{f{CHl}}{f{Dfc}}}bADl}{{{f{CHn}}{f{Dfc}}}bADl}{{{f{CI`}}{f{Dfc}}}bADl}{{{f{CIb}}{f{Dfc}}}bADl}{{{f{CId}}{f{Dfc}}}bADl}{{{f{CIf}}{f{Dfc}}}bADl}{{{f{CIh}}{f{Dfc}}}bADl}{{{f{BKj}}{f{Dfc}}}bADl}{{{f{CIl}}{f{Dfc}}}bADl}{{{f{{Mn{ce}}}}{f{Dfg}}}b{DAnA@f}BLbADl}{{{f{CIn}}{f{Dfc}}}bADl}{{{f{CJ`}}{f{Dfc}}}bADl}{{{f{BFj}}{f{Dfc}}}bADl}{{{f{BAd}}{f{Dfc}}}bADl}{{{f{A@`}}{f{Dfc}}}bADl}{{{f{CJf}}{f{Dfc}}}bADl}{{{f{DB`}}{f{Ab}}CDjd}{{A`{{Hd{{Hd{{Gh{Jj}}{Gh{Jj}}}}d}}n}}}}{{{f{DB`}}{f{Ab}}CDjd}{{A`{{Hd{{ALl{Jj}}{ALl{Jj}}}}n}}}}{{BKn{Ch{Gb}}}BF`}{{BMfBBd}BBd}{{BBd{Ch{Gb}}}BBd}{{{f{BOd}}}{{A`{{l{Bb}}n}}}}{{{f{BOd}}}{{l{Bb}}}}``{{{f{{Bj{{f{{l{Bb}}}}}}}}{f{Bd}}d}{{A`{{l{Bb}}n}}}}{{{f{DBb}}}{{l{Nj}}}}{{{f{CKj}}}{{l{Nj}}}}{{{f{CAn}}}{{A`{{l{Nj}}n}}}}`{{{f{CKl}}}{{l{L`}}}}`{{BLdCDf}BLd}`{{{f{AB`}}}Jj}`{{{f{{Bj{Ff}}}}Lb}{{A`{Ffn}}}}{{{f{{Kn{LdL`}}}}{f{{l{Bb}}}}CJf{Gd{H`}{{Ad{AMd}}}}{Gd{AMd}{{Ad{H`}}}}{f{AMf}}{f{AMf}}}{{A`{{l{L`}}n}}}}{{{f{{Kn{LdL`}}}}{Ch{{f{Bd}}}}{Gd{H`}{{Ad{AMd}}}}{Gd{AMd}{{Ad{H`}}}}{f{AMf}}{f{AMf}}}{{A`{{l{L`}}n}}}}{BBdBBd}{{{f{AMd}}}d}{{{BOh{c}}d}{{BOh{c}}}BOl}````0`{{}b}{cb{JdBLb}}``{cBBd{{Ih{{Bj{H`}}}}}}``{{{f{{Bj{Jj}}}}}{{`{{D`{}{{Cj{Gb}}}}}}}}{{{f{DAj}}Bh{Ch{Gb}}d{Ch{{f{{BDb{El}}}}}}GbGb{Ch{{f{CCl}}}}{Ch{Bh}}Bh{Ch{{f{CCn}}}}dd{f{Df{Ch{Gb}}}}d}{{A`{{Hd{{BDb{El}}GbGb}}n}}}}{{{CNf{c}}{Ch{{DBd{Gb}}}}}{{CNf{c}}}BKf}{{{CKb{c}}{Ch{{DBd{Gb}}}}}{{CKb{c}}}BKf}``{{}Gb}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000`{{{f{DfACd}}}{{Cn{Cl}}}}{{BF`BF`cc}BF`{{BA`{BBd}}}}{{{f{DA`}}{f{AAn}}ei}{{A`{AAnn}}}{{BA`{Dd}}}{{I`{}{{Cj{c}}}}}{{BA`{Dd}}}{{I`{}{{Cj{g}}}}}}{{{f{DfA@h}}}{{f{DfKd}}}}`{{{f{DfBL`}}BL`}b}{{BBdBBdH`El}BBd}{{BBdBBdBBd}BBd}``{{{f{Ab}}CEh}Ab}{{BBdCEh}BBd}`{{{f{Ff}}{f{Ff}}d}{{A`{Ffn}}}}{{BBdBBd}BBd}{{BL`BL`}BL`}{{{f{BL`}}BL`}d}{{}c{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{BDdFf}{{}Ff}{{MhDd}Ff}{BFn{{Hd{{Gh{BAd}}{Gh{{Cn{Cl}}}}{Ch{Ib}}}}}}{{{AM`{c}}}c{}}{{{Mn{ce}}}{{Ch{c}}}{}BLb}66{{{f{BBd}}}}{BL`}{{{f{BFn}}}}{DBfBMf}{BMfBMf}{{{Mn{ce}}}{}A@fBLb}{{{Mn{ce}}}{{Hd{e}}}A@fBLb}{{CCfc}{{BKb{c}}}BKf}{{BB`El}{{A`{Mhn}}}}{BFbAb}{{{Mn{BJl}}}Ab}{{MhDd}Ab}{BFh{{Gh{c}}}{}}{{}{{Gh{Dd}}}}{{{f{BL`}}}d}{{{f{C@n}}}d}{{{f{CDf}}}d}{{{f{Ab}}{f{Ab}}{f{Ab}}CEj}{{A`{{l{Bl}}n}}}}{{BBdccCEj}BBd{{BA`{BBd}}}}{cd{{Ih{ANd}}}}4{{{f{BG`}}{Ch{{f{Bd}}}}}d}{{{f{CHf}}}d}7{{{f{BJl}}}d}{{{f{C@d}}}d}{BBdBBd}{{{f{Ab}}}{{A`{{l{Bl}}n}}}}{{{f{AJb}}}{{A`{{l{Bl}}n}}}}25{{{f{BG`}}}d}{{{f{Ab}}{f{Ab}}}{{A`{{l{Bl}}n}}}}{{BBdc}BBd{{BA`{BBd}}}}54{{{f{AJd}}}{{A`{{l{Bl}}n}}}}6{{{f{CKh}}}{{l{Bl}}}}{{{f{CKj}}}{{l{Bl}}}}{{{f{CAn}}}{{A`{{l{Bl}}n}}}}9{{{f{Mh}}}d}::{{{f{BJl}}}{{l{Bl}}}};;0{{{f{A@h}}}d}<2{{{f{AB`}}}d}`{{{f{Ab}}}d}{{{f{{Mn{AFj}}}}}d}{{{f{CIl}}}d}{{}d}{{{f{CM`}}F`}{{A`{dn}}}}{fd}{{{f{c}}}d{}}{{{f{CDj}}{f{CDf}}}{{A`{bn}}}}6{{{f{BG`}}}d}{{{f{CKh}}}{{l{Kj}}}}{{{f{CKj}}}{{l{Kj}}}}{{{f{CAn}}}{{A`{{l{Kj}}n}}}}{{{f{{ALd{}{{ANh{c}}{ANj{e}}{ANl{g}}}}}}}{{AGl{cgAGj}}}Jd{ANn{AO`{c}}}{{Gn{}{{Cj{c}}}}JfIlIn}}{{{f{BL`}}}{{AFf{BL`}}}}{{{f{BFn}}}{{AGl{{Gh{{Cn{CMd}}}}DBhAGj}}}}{{{f{D@`}}}{{`{Jb}}}}{{{f{BL`}}}{{AFh{BL`}}}}{{{f{{DBl{}{{DBj{c}}}}}}}{{`{Jb}}}{AGhJdCLdCMb}}{{BMdBBdd}BBd}{{BF`BF`ccBJh}BF`{{Ih{{Bj{BBd}}}}}}{{BMfBBdd}BBd}{{{f{DA`}}{f{AAn}}eiBJh}{{A`{AAnn}}}{{BA`{Dd}}}{{I`{}{{Cj{c}}}}}{{BA`{Dd}}}{{I`{}{{Cj{g}}}}}}{{{f{DBn}}{f{AAn}}{f{Bd}}{f{Bd}}eeCEd{Ch{Jh}}}{{A`{AAnn}}}{{Ih{Bd}}}{{I`{}{{Cj{c}}}}}}{BF`BLd}{{{f{DC`}}{f{Bd}}d}{{A`{{l{Bb}}n}}}}{{{f{DC`}}{f{{l{Bb}}}}d}{{A`{{l{Bb}}n}}}}{{BLdd}BLd}`{{BLd{Gh{BBd}}}BF`}{BJjBBd}{DCbBBd}{{{f{CIj}}}{{f{{Ch{{Gh{DCd}}}}}}}}``{{}BBd}{BF`BF`}{BMfBBd}{{{f{{ALd{}{{ANh{c}}{ANj{e}}{ANl{g}}}}}}}{{Ch{c}}}Jd{ANn{AO`{c}}}{{Gn{}{{Cj{c}}}}JfIlIn}}{BBdBBd}{DCfBF`}4{{{f{{Mn{ce}}}}{f{{Mn{ce}}}}}d{DAdA@f}BLb}`{{BF`BF`cc}BF`{{BA`{BBd}}}}{{{f{DA`}}{f{AAn}}ei}{{A`{AAnn}}}{{BA`{Dd}}}{{I`{}{{Cj{c}}}}}{{BA`{Dd}}}{{I`{}{{Cj{g}}}}}}{{BLdc}BLd{{Ih{{Bj{BBd}}}}}}{{{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}}e{}{}{}}{{{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}c}e{}{}{}}{{c{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}}e{}{}{}}<{{{f{BJl}}}Gb};9{{{f{BFn}}}Gb}{{BF`Jj}BF`}{{{f{BJl}}Gb}Ab}`{BBdBMf}{cBBdDCh}{DChBBd}{BG`BBd}{DCjBBd}{CIlBBd}{MhBBd}{{BBdc}BBd{{BA`{BBd}}}}0``{{CBfd}CBf}{{{CKb{c}}d}{{CKb{c}}}BKf}```{BBdBBd}{{{f{DC`}}}{{l{Fb}}}}0{{{f{DC`}}{f{{Bj{Ff}}}}}{{A`{{l{Ah}}n}}}}{{{f{DC`}}H`CLj}{{A`{{l{Ah}}n}}}}{{{f{DC`}}H`d}{{A`{Abn}}}}{{{f{DC`}}{f{{l{Bb}}}}d}{{A`{{l{Bb}}n}}}}4{{{f{DC`}}}{{A`{Abn}}}}{{{f{DC`}}}Ab}01{{{f{DC`}}}{{A`{{l{Fb}}n}}}}{{{f{DC`}}}{{l{Ah}}}}{{{f{DC`}}{f{Ff}}}{{A`{{l{Ah}}n}}}}{{{f{DC`}}H`Gb}{{l{Ah}}}}{{{f{DC`}}F`}{{A`{{l{Ah}}n}}}}{{{f{DC`}}Bh}Ab}7{{{f{DC`}}}{{A`{{l{Ah}}n}}}}01{{{f{{AId{}{{Cj{c}}}}}}e}c{}{}}{{BBdc}BBd{{BA`{BBd}}}}{{{f{{Mn{ce}}}}{f{{Mn{ce}}}}}d{DAdA@f}BLb}21``````{{{f{AMj}}{f{AMj}}}{{A`{{Hd{AMjAMj}}n}}}}{{{l{Ah}}{l{Ah}}}{{A`{{Hd{{l{Ah}}{l{Ah}}}}n}}}}{{{f{Df{Mn{ce}}}}}{{f{Dfc}}}{DClA@f}{BLbJd}}{{BF`cBL`{Ch{{Mn{CNh}}}}{Ch{{f{Bd}}}}}BF`{{Dn{AAn}{{Ad{{A`{AAnn}}}}}}IlIn}}{{DCbc}BBd{{Dn{{f{Dd}}}{{Ad{{A`{Ddn}}}}}}IlIn}}{{BBdc{BLl{{Mn{BLj}}}}}BBd{{Dn{Ff}{{Ad{{A`{{Ch{Ff}}n}}}}}}IlIn}}{{BBdBBdc{BLl{{Mn{BLj}}}}}BBd{{Dn{FfFf}{{Ad{{A`{{Ch{Ff}}n}}}}}}IlIn}}{{BBd{f{Dfc}}{f{Df}}}{{A`{BBdn}}}{{Af{BBd{f{Df}}}{{Ad{{A`{BBdn}}}}}}}}{{{f{BMh}}{Ch{{f{Dd}}}}}{{A`{Ojn}}}}{{{f{BMh}}c}{{A`{Ojn}}}{{ABb{{f{El}}}{{Ad{El}}}}}}{c{{BLl{{Mn{BLj}}}}}{{Dn{{f{El}}}{{Ad{{A`{Eln}}}}}}IlIn}}{c{{BLl{{Mn{BLj}}}}}{{Dn{{f{{Bj{{f{El}}}}}}}{{Ad{{A`{Eln}}}}}}IlIn}}{{BBdc}BBd{{Af{BBd}{{Ad{BBd}}}}}}{c{{BLl{{Mn{BLj}}}}}{{Dn{{f{Oj}}}{{Ad{{A`{Ojn}}}}}}IlIn}}{{DCb{Mn{Dn}}}BBd}{c{{BLl{{Mn{BLj}}}}}{{Dn{{f{{Bj{Oj}}}}}{{Ad{{A`{Ojn}}}}}}IlIn}}:{{ce{BLl{{Mn{BLj}}}}}BBd{{Dn{{f{Df{Bj{Ff}}}}}{{Ad{{A`{{Ch{Ff}}n}}}}}}IlIn}{{Ih{{Bj{BBd}}}}}}{{BBdc{f{{Bj{BBd}}}}{BLl{{Mn{BLj}}}}}BBd{{Dn{{f{Df{Bj{Ff}}}}}{{Ad{{A`{{Ch{Ff}}n}}}}}}IlIn}}{{BBdBM`{f{{Bj{BBd}}}}d{Ch{DCn}}}BBd}2{{{f{BMh}}}{{A`{Ojn}}}}{{CCfc}CCf{{Dn{CCh}{{Ad{CCh}}}}}}1111{CIlCIl}{{{Ch{{f{{Bj{Gb}}}}}}{f{{BDb{BAd}}}}{Ch{{f{{Bj{Ab}}}}}}{Ch{{f{DD`}}}}}AAn}{{{Ch{{f{{Bj{Dd}}}}}}{f{{BDb{El}}}}{Ch{{f{{Bj{Ab}}}}}}d}{{Ch{{Gh{Gb}}}}}}{{{f{Bd}}}BBd}{BMdBBd}{BF`BF`}{BMfBBd}{{{f{AHd}}}{{Ch{c}}}{}}{BBdBBd}{{{f{DDb}}}Mh}{{{f{BJl}}}{{A`{Mhn}}}}```754{{{f{AHd}}}{{Ch{Aj}}}}3{{{f{BJl}}}{{Ch{Aj}}}}9876{{{f{AJf}}}{{Ch{c}}}{}}51{{{f{DDd}}}Mh}4{{{CN`{c}}{Ch{CMj}}}{{CN`{c}}}BKf}{{{f{El}}{f{El}}}{{A`{Eln}}}}```{{{f{CKl}}}{{l{L`}}}}`{{{f{CAn}}}{{A`{{l{Kj}}n}}}}1`?>=<;:{{{f{AHd}}}{{Ch{{Hd{cc}}}}}{}}```:9``{{{f{DBb}}}{{l{Nj}}}}{{{f{CKj}}}{{l{Nj}}}}{{{f{CAn}}}{{A`{{l{Nj}}n}}}}`5```>{{{f{CKh}}}{{l{Nj}}}}21`{{{f{BG`}}}H`}{{{f{BG`}}}d}{{{BKh{}{{Ad{c}}}}{f{Ab}}}c{}}{{BG`H`}BG`}{{BBdBBd}}{{{f{BKl}}{f{Ab}}}{{A`{Abn}}}}``{{{f{BJl}}}Gb}{{{f{CJh}}}{{Ch{Gb}}}}{{{f{CBb}}}{{Ch{Gb}}}}{{{f{CBf}}}{{Ch{Gb}}}}`````{{{BOh{c}}Gb}{{BOh{c}}}BOl}`{BMdBBd}{BMfBBd}{{{f{AHn}}}{{A`{Gbn}}}}{BBdBBd}{{{f{BJl}}}{{A`{Gbn}}}}{{{f{BJl}}}{{f{Dd}}}}{BBdDCb}````33`{{{f{DBb}}}{{l{Kj}}}}{{{f{CKj}}}{{l{Kj}}}}{{{f{CAn}}}{{A`{{l{Kj}}n}}}}{{{f{CKl}}}{{l{L`}}}}{{{f{BG`}}}H`}`{{{f{{Mn{ce}}}}{f{{Mn{ce}}}}}d{CMbA@f}BLb}{{{f{CDj}}}d}{BG`}{BBd}{{{f{Ab}}}{{A`{Abn}}}}0{{{f{BG`}}}d}{{DDfGb}{{Ch{Gb}}}}{{BBdc}BBd{{BA`{BBd}}}}0{{{f{BMh}}}{{A`{Ojn}}}}{{}c{}}{cCMlBMl}{cCMnBOl}2{{Ddc}DDh{}}{c{{AM`{c}}}{}}{BF`BLd}{c{{BKb{c}}}BKf}{cCBb{{Ih{ANd}}}}{cCBf{{Ih{ANd}}}}{c{{BOh{c}}}BOl}{{{f{{Bj{Oj}}}}}BMh}{c{{CN`{c}}}BKf}{c{{BMj{c}}}BMl}{c{{CNb{c}}}BOl}{{}CKn}{c{{BOn{c}}}BOl}{H`BG`}{c{{CNd{c}}}BOl}{c{{CNf{c}}}BKf}{{BG`BG`BG`}CCd}{c{{CKb{c}}}BKf}{{DDj{Mn{CIj}}{Mn{{BDb{BAd}}}}{Hd{GbGb}}{Ch{{Gh{Gb}}}}{Ch{{Mn{BKd}}}}{Ch{DD`}}Gbd{Ch{{Gh{Ab}}}}{Ch{{Hd{Dd{Mn{Bd}}}}}}CF`}{{A`{C@dn}}}}{c{{C@b{c}}}BKf}{c{{C@f{c}}}{BOlBOl}}{CDfBJh}{c{{BLl{c}}}{}}{{BBdBBdBBd}CHh}{{}CHj}{BBdBKj}{{Dd{Gh{Oj}}{BLl{{Mn{BLj}}}}c}CAbBMn}{c{{Mn{c}}}{}}{{AGd{Gh{{Cn{Cl}}}}{Ch{Ib}}}BFn}{{ElJh}Mh}{{DdAGdd}BAd}{e{{Mn{c}}}{}{{ABb{{f{{CLl{c}}}}}{{Ad{c}}}}}}{AGdBFn}{{{f{AJh}}GbGb}{{l{c}}}Dl}{{{f{BJl}}GbGb}Ab}{{{f{Bd}}}CCl}{{ce}{{Mn{ce}}}{}BLb}{{H`Dd}{{A`{Abn}}}}{DdCCl}{{AGdGb}BFn}{{{Mn{{Bj{CMj}}}}}CBb}{{{Mn{{Bj{CMj}}}}}CBf}{BhCCl}{{}{{Mn{{BOb{c}}}}}{}}{c{{Mn{{BOb{e}}c}}}BLb{}}{Gb{{Mn{{Bj{{BOb{c}}}}}}}{}}{{Gbc}{{Mn{{Bj{{BOb{e}}}}c}}}BLb{}}{DDlCBb}{DDlCBf}5432{{{f{DfDDn}}}Ch}{{{f{DfDAh}}}Ch}{{{f{BLf}}DE`}{{A`{{Ch{AAn}}n}}}}{{{f{DfC@j}}Gb}{{A`{{Ch{{Gh{AAn}}}}n}}}}{{{f{DfBOf}}Gb}{{A`{{Ch{{Gh{AAn}}}}n}}}}{{{f{DfC@d}}Gb}{{A`{{Ch{{Gh{AAn}}}}n}}}}{{{f{BBd}}{f{Df{BGj{{f{BBd}}}}}}}b}{{BBd{f{Df{BGj{BBd}}}}}b}{BBdBBd}0{BL`BL`}{{{f{{AId{}{{Cj{c}}}}}}e}c{}{}}0{H`BBd}`{{}AB`}{{}A@h}`{{{f{BJl}}}Gb}{BF`BF`}7`````{{{f{Df{C@b{c}}}}}{{A`{Gbn}}}BKf}````{{{f{AIf}}}{{A`{{Hb{H`}}n}}}}{{BLdc}BLd{{Ih{{Bj{BBd}}}}}}``{{BF`{f{Df{BJb{BJ`}}}}{f{Df{BJb{BJd}}}}}{{A`{BInn}}}}`{{BBdc}BBd{{BA`{BBd}}}}{{{f{CKh}}}{{l{Nn}}}}{{{f{CKj}}}{{l{Nn}}}}{{{f{CAn}}}{{A`{{l{Nn}}n}}}}{{{f{CAn}}}{{A`{{l{Kj}}n}}}}{{CGbc}BBd{{BA`{BBd}}}}{{CGfc}BBd{{BA`{BBd}}}}`{{BBde}BBd{{BA`{BBd}}Jd}{{Ih{{Bj{c}}}}}}{{BBde{Ch{{Hd{eF`}}}}CId}BBd{{BA`{BBd}}Jd}{{Ih{{Bj{c}}}}}}{{{f{Df{BDb{El}}}}{f{{BDb{El}}}}}{{A`{bn}}}}```{{{f{Bd}}}BG`}{{Dd{f{{Bj{{f{Bd}}}}}}{f{Bd}}}{{Kn{KlKj}}}}{{Dd{f{{Bj{{f{Bd}}}}}}{f{Bd}}}{{Kn{LlL`}}}}{{Dd{f{{Bj{{f{Bd}}}}}}{f{Bd}}Lb}{{Kn{LdL`}}}}``{{{f{BG`}}{f{BG`}}}{{Ch{B@f}}}}{{{f{{Mn{ce}}}}{f{{Mn{ce}}}}}{{Ch{B@f}}}{DAdA@f}BLb}```{{}BBd}{c{{DEb{{Mn{c}}}}}{}}{{ce}{{DEb{{Mn{ce}}}}}{}BLb}````{{BBdc}BBd{{BA`{BBd}}}}`{{DCb{f{Bd}}}BBd}0{{{f{AAn}}{f{AAn}}d}{{A`{{Hd{{AAj{{Gh{Jj}}{Gh{A@h}}}}{AAj{{Gh{AB`}}{Gh{A@h}}}}}}n}}}}`{{{f{DDb}}}Mh}{BBdBBd}{BF`{{A`{{Hd{AAnAAn}}n}}}}`{{{f{BFn}}}BFn}{{{f{{Mn{c}}}}{f{DfDEd}}}b{ALhA@f}}{{{f{{Mn{ce}}}}{f{{Mn{ce}}}}}dA@fBLb}{{{f{Bd}}BBdA@`}BBd}{{BF`BBdA@`}BF`}{{{f{AJf}}AjA@`}{{A`{{Ch{c}}n}}}{}}{{BBdBBdA@`}BBd}{{{f{DDd}}AjA@`}{{A`{Mhn}}}}{{{f{BJl}}AjA@`}{{A`{Mhn}}}}{{{f{CKh}}}{{l{Nj}}}}{{{f{CKj}}}{{l{Nj}}}}{{{f{CAn}}}{{A`{{l{Nj}}n}}}}{{{f{Df}}c}{{A`{{f{Dfe}}BCh}}}CMh{}}````{{{f{DEf}}CFb{Ch{Kd}}}Ab}{{BBdCFb{Ch{Kd}}}BBd}{{{f{Df{Mn{AFj}}}}{f{Df{Bj{Bh}}}}}{{A`{GbBCh}}}}{{{f{Df{Mn{AFj}}}}DEh}{{A`{bBCh}}}}{{{C@b{c}}CF`}{{C@b{c}}}BKf}{{{f{Df{Mn{AFj}}}}{f{Df{Gh{Bh}}}}}{{A`{GbBCh}}}}{{{f{Df{Mn{AFj}}}}{f{DfEj}}}{{A`{GbBCh}}}}{{{f{Df}}}{{A`{cBCh}}}DEj}{{{f{Df{Mn{AFj}}}}{f{Df{Bj{DEl}}}}}{{A`{GbBCh}}}}{{{f{CJh}}}d}{{{f{BJl}}}Ab}{{{f{CBb}}}d}{{{f{CBf}}}d}````{{ce}BBd{{Dn{FfFf}{{Ad{{A`{{Ch{Ff}}n}}}}}}IlInJd}{{Ih{{Bj{BBd}}}}}}{{{f{AJj}}}Ab}0{{{BKh{}{{Ad{c}}}}{f{Ab}}}c{}}{{BBdBBd}}{{{f{BKl}}{f{Ab}}}{{A`{Abn}}}}{{{f{DfBL`}}BL`}b}{{{f{{Bj{Bh}}}}}{{A`{{f{{Bj{Bh}}}}n}}}}{{{f{DfBJl}}Dd}b}{{BF`ei}BF`{{Ih{Bd}}}{{I`{}{{Cj{c}}}}}{{Ih{Bd}}}{{I`{}{{Cj{g}}}}}}{{BJje}BBd{{BA`{Dd}}}{{I`{}{{Cj{c}}}}}}{{cBBd}BBd{{BA`{BBd}}}}{{{f{Ab}}{f{{l{Fb}}}}}{{A`{{l{Ah}}n}}}}{{BBdc}BBd{{BA`{BBd}}}}{{{f{Ab}}{f{Ab}}{f{Ab}}}{{A`{Abn}}}}{{{f{BOd}}{f{Bd}}{f{Bd}}}{{A`{{l{Bb}}n}}}}{{BBdcc}BBd{{BA`{BBd}}}}1{{{f{BMh}}{Ch{El}}}{{A`{Ojn}}}}{{{f{BOd}}{f{Bd}}{f{Bd}}Gb}{{A`{{l{Bb}}n}}}}3{{{f{Ab}}{f{Ab}}{f{Ab}}{f{Ab}}{Ch{El}}}{{A`{Abn}}}}{{{f{Ab}}{f{Ab}}{f{Ab}}{Ch{El}}}{{A`{Abn}}}}{{BBdcc{Ch{c}}{Ch{El}}}BBd{{BA`{BBd}}}}{{{f{{Kn{LdL`}}}}{Ch{{f{Bd}}}}{f{{l{Bb}}}}CJf}{{A`{{Kn{LdL`}}n}}}}{{BBd{f{{Bj{H`}}}}CIf}BBd}{{{f{ANd}}}CMj}`{{{f{AJl}}}AJl}{{{f{BJl}}}Ab}{BMdBBd}{BF`BF`}{BMfBBd}{BBdBBd}`{{BLdc}BLd{{Ih{{Bj{BBd}}}}}}{{{f{DAl}}{Gh{Ff}}{f{BFd}}}{{A`{{Hd{Ff{Gh{Ff}}C`}}n}}}}{{BF`BBdcBFd}BKn{{Ih{{Bj{BBd}}}}}}{{BBdBFd}BBd}{{{f{AJn}}{f{Dn}}A@b}{{A`{Abn}}}}{{BBd{Mn{Dn}}{BLl{{Mn{BLj}}}}A@b}BBd}{{{f{BJl}}{f{Dn}}A@b}{{A`{Abn}}}}{{BBdGbc}BBd{{Af{{f{Df{l{Ef}}}}}{{Ad{{Ch{Aj}}}}}}IlInE`}}{{{f{DEn}}A@b}{{A`{Abn}}}}{{BBdA@b}BBd}{{{f{DEn}}{f{Ab}}CBj}{{A`{Abn}}}}{{BBdBBdCBj}BBd}32102032103{{BBdA@`AjA@b}BBd}2{{BBdBBdA@`AjCBj}BBd}543254325432{{{f{DF`}}{f{{l{Bb}}}}{Ch{{f{AMf}}}}}{{A`{DF`n}}}}{{{f{CAl}}Jj}{{A`{Abn}}}}{{BBdJj}BBd}{{{f{CCd}}H`{Ch{{f{AMf}}}}}{{A`{H`n}}}}0{{{f{CAl}}Ob}{{A`{Abn}}}}{{BBdOb}BBd}2``{{{f{CJh}}}{{Ch{{f{DD`}}}}}}{{{f{CBb}}}{{Ch{{f{DD`}}}}}}{{{f{CBf}}}{{Ch{{f{DD`}}}}}}``````{{{f{DC`}}{l{Ah}}}{{l{Ah}}}}{{}{{BLl{{Mn{BLj}}}}}}{{BBdBBddd{Ch{Kd}}}BBd}0`{{{f{BLf}}DE`}{{A`{AAnn}}}}{{cCBd}{{A`{BF`n}}}{{Ih{ANd}}}}{{{Mn{{Bj{CMj}}}}CBd}{{A`{BF`n}}}}{{DDlCBd}{{A`{BF`n}}}}{{cCBh}{{A`{BF`n}}}{{Ih{ANd}}}}{{{Mn{{Bj{CMj}}}}CBh}{{A`{BF`n}}}}{{DDlCBh}{{A`{BF`n}}}}{{DFb{f{{Bj{Jj}}}}e}{{A`{Abn}}}E`{{I`{}{{Cj{{Ch{c}}}}}}}}{{{f{AK`}}c{Ch{e}}}{{A`{AK`n}}}{{I`{}{{Cj{Jj}}}}}{}}{{{f{AK`}}ci}{{A`{AK`n}}}{{I`{}{{Cj{Jj}}}}}{}{}{{Dn{{Ch{e}}}{{Ad{{Ch{g}}}}}}}}{{{f{Df{CN`{c}}}}}{{A`{{Mn{{BDb{BAd}}}}n}}}BKf}{{{f{Df{BMj{c}}}}}{{A`{{BDb{El}}n}}}BMl}{{{f{C@d}}}{{f{{Mn{{BDb{BAd}}}}}}}}{{{f{Df{C@b{c}}}}}{{A`{{Mn{{BDb{BAd}}}}n}}}BKf}{{{f{BLf}}{Ch{Gb}}}{{A`{{Mn{{BDb{El}}}}n}}}}{{{f{CIj}}}{{f{DFd}}}}`````{{}BL`}`{{{f{DfBF`}}{f{Df{BJb{BJ`}}}}{f{Df{BJb{BJd}}}}}{{A`{{Mn{{BDb{El}}}}n}}}}`{{{f{DBb}}}{{l{Nj}}}}{{{f{CKj}}}{{l{Nj}}}}{{{f{CAn}}}{{A`{{l{Nj}}n}}}}`{{{f{CKl}}}{{l{L`}}}}`{{{f{Df{Mn{AFj}}}}DFf}{{A`{KdBCh}}}}{{BF`c}BF`{{Ih{{Bj{BBd}}}}}}0````{{{f{AK`}}{f{{l{Bl}}}}{Ch{c}}}{{A`{AK`n}}}{}}{{{f{DfBL`}}BL`d}b}{{{f{BF`}}{BJb{BJ`}}{BJb{BJd}}}b}{{{C@b{c}}d}{{C@b{c}}}BKf}{{{C@f{c}}d}{{C@f{c}}}BOl}{{{CN`{c}}d}{{CN`{c}}}BKf}{{{BMj{c}}d}{{BMj{c}}}BMl}{{{CNf{c}}d}{{CNf{c}}}BKf}4{{CMld}CMl}{{BBdM`}BBd}{{{f{DfBFn}}{Ch{Ib}}}b}{{{f{AKb}}H`}{{l{c}}}Dl}{{{f{BJl}}H`}Ab}{{BMdBBd}BBd}{{BF`c}BF`{{BA`{BBd}}}}{{BMfBBd}BBd}{{BBdBBd}BBd}{{{f{AKd}}H`c}{{l{e}}}{}Dl}{{BF`ce}BF`{{BA`{BBd}}}{{BA`{BBd}}}}{{BBdce}BBd{{BA`{BBd}}}{{BA`{BBd}}}}{{{f{BJh}}}d}{BBdBBd}{{{f{DfACf}}}b}{{{f{DfBJl}}}b}{{BBd{Ch{Kd}}}BBd}{{BF`cCD`}{{A`{bn}}}{{Ih{ANd}}}}{{BF`cCDn}{{A`{bn}}}{{Ih{ANd}}}}{{BF`cCEf}{{A`{bn}}}{{Ih{ANd}}}}{{BF`cCFd}{{A`{bn}}}{{Ih{ANd}}}}{{{f{CK`}}}{{l{Fb}}}}````{{{f{BJl}}H`Gb}Ab}{{BF`H`Jj}BF`}{{BMfBBdBBd}BBd}={{{f{DfBFn}}GbGb}b}0`{{{f{AKf}}GbGb}AKf}{{fGbGb}c{}}1022{{BFnGbGb}BFn}0`{{{f{AHl}}d}{{l{c}}}Dl}{{BMdF`}BBd}{{BF`cFh}BF`{{BFh{Dd}}}}{{BMfF`}BBd}{{BBdF`}BBd}{{BBdeFh}BBd{{BA`{BBd}}Jd}{{Ih{{Bj{c}}}}}}{{BF`cFh}BF`{{Ih{{Bj{BBd}}}}}}{{{f{AHl}}F`}{{l{c}}}Dl}{{{f{BJl}}F`}{{A`{Abn}}}}{{{f{{Mn{c}}}}}{{Ch{{f{ALh}}}}}{ALhA@f}}{{{f{CJh}}}{{f{DDl}}}}{{{f{CBb}}}{{f{DDl}}}}{{{f{CBf}}}{{f{DDl}}}}{{{f{BOd}}{f{{l{Bb}}}}}{{l{Ah}}}}{{{f{BJl}}H`}{{Hd{AbAb}}}}{{{f{BFn}}Gb}{{Hd{{Cn{Cl}}{Cn{Cl}}}}}}0{{{f{BOd}}{f{{l{Bb}}}}Gb}{{A`{{l{j}}n}}}}0{{{f{{l{Bb}}}}{f{{l{Bb}}}}e}{{l{Ah}}}{{D`{}{{Cj{{f{Bd}}}}}}}{{Dn{{f{Bd}}{f{Bd}}}{{Ad{c}}}}}}4{{{f{{l{Bb}}}}{f{{l{Bb}}}}Gbed}{{A`{{l{j}}n}}}{{D`{}{{Cj{{f{Bd}}}}}}}{{Dn{{f{Bd}}{f{Bd}}}{{Ad{c}}}}}}2{BBdBBd}`{{{f{CK`}}{f{{Bj{Bh}}}}}{{l{Bl}}}}{{{f{CK`}}{f{{l{Bf}}}}}{{l{Bl}}}}`{{BMdBh}BBd}{{BF`Bh}BF`}{{BMfBh}BBd}{{{f{AKh}}Bh}{{Ch{Aj}}}}{{BBdBh}BBd}{{{f{BJl}}Bh}{{Ch{Aj}}}}{{{f{DFh}}Bh}Mh}{{{f{BJl}}Bh}{{A`{Mhn}}}}{{JjJj}A@h}{BBdDFj}{{{f{BOd}}{f{Ff}}}{{A`{{l{Bb}}n}}}}{{{f{{l{Bb}}}}{f{Bd}}d}{{l{Bb}}}}{{{f{BOd}}}{{l{Fb}}}}0{{{f{BOd}}}{{l{Bb}}}}{{{f{BOd}}{f{Ff}}{f{Ff}}}{{A`{{l{Bb}}n}}}}4`{{{f{CAn}}{f{Bd}}}{{A`{Abn}}}}`{{BBdEl}BBd}`{{{f{{l{Bb}}}}{f{{l{Bb}}}}}{{l{Bb}}}}707070{{{f{BOd}}{f{{l{Bb}}}}}{{l{Bb}}}}10{{{f{{Mn{ce}}}}}GbA@fBLb}{BBdBJj}{{{BKh{}{{Ad{c}}}}{f{Ab}}}c{}}{{BBdBBd}}{{BKjBKj}}{{BL`BL`}BL`}{{{f{DfBL`}}BL`}b}{{{f{BKl}}{f{Ab}}}{{A`{Abn}}}}{{BLdc}BLd{{BA`{Dd}}}}{{DCb{f{Bd}}}BBd}{{{f{BJh}}}{{f{Dd}}}}`1{{{f{Bd}}}BBd}{BMdBBd}{BF`BF`}{BMfBBd}{{{f{AHd}}}{{Ch{c}}}{}}{BBdBBd}{{{f{DDb}}}Mh}{{{f{BJl}}}{{A`{Mhn}}}}{{}{{BLl{{Mn{BLj}}}}}}{C@nC@n}?{{{f{Df}}g}{{A`{eBCh}}}{}{}{{ABb{{f{Dfc}}}{{Ad{e}}}}}}{{BF`Jj}BF`}{{BKn{Ch{Gb}}}BF`}{{BMfBBd}BBd}{{BBd{Ch{Gb}}}BBd}{{{f{AKj}}{f{c}}}{{A`{AKjn}}}A@f}{{{f{BJl}}{f{{l{Fb}}}}}{{A`{Abn}}}}{{{f{DFl}}{f{{Bj{A@h}}}}M`}DFl}{{{f{DFl}}{f{{Bj{A@h}}}}}DFl}{{{f{BJl}}{f{{Bj{Jj}}}}}{{A`{Abn}}}}{{{f{BJl}}{f{{Bj{Jj}}}}}Ab}{{{f{AKl}}{f{c}}}AKlA@f}{{{f{BJl}}{f{{l{Fb}}}}}Ab}{{{f{DfBFn}}}{{Ch{Ib}}}}{{BBdBBdBBd}BBd}{{CG`c}CGb{{BA`{BBd}}}}{{CGdc}CGf{{BA`{BBd}}}}`{{BBdBBdBG`CBn}BBd}```{{{f{CAn}}Lb}{{A`{{l{L`}}n}}}}{BF`{{A`{DFnn}}}}{CFn{{A`{DFnn}}}}1{{{f{CIl}}}{{Ch{Jh}}}}{{BMfGb}BBd}{{{f{D@`}}B@`}{{BDb{BAd}}}}{{{f{BFn}}}{{Cn{Cl}}}}{{{f{AKn}}}{{Gh{{f{{Bj{Bh}}}}}}}}{{{f{BF`}}d}{{A`{Ejn}}}}{{{f{DG`}}{Ch{{f{Bd}}}}d}{{A`{AAnn}}}}{{{f{BK`}}{Ch{{f{Bd}}}}d}{{A`{AAnn}}}}{{{f{BBd}}{f{{BDb{El}}}}DAf}{{A`{Ojn}}}}{{{f{BOd}}{f{{l{Fb}}}}d}{{A`{{l{L`}}n}}}}{BMdBBd}{{{f{BOd}}}{{l{Bb}}}}{DCbBBd}{{{f{AB`}}}{{Ch{Jj}}}}{fc{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{BBdBBd}{{{f{BMh}}}{{A`{Ojn}}}}{{{f{CAn}}{f{Bd}}}{{A`{Abn}}}}{fEj}000000000000{{{f{DfD@`}}{f{{BDb{El}}}}}{{A`{dn}}}}`887{{{f{CDn}}c}{{BOn{c}}}BOl}{{{f{CFd}}c}{{C@f{c}}}BOl}{{{f{DfBL`}}BL`}b}``{{BF`JjcFh}BF`{{Ih{{Bj{BBd}}}}}}{{{f{BFn}}{f{BFn}}}Ib}{{{f{BFn}}f}Ib}10{{{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}}g{}{}{}}{{{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}c}g{}{}{}}{{c{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}}g{}{}{}}{{{f{DGb}}{Ch{{f{AMf}}}}{f{{l{Bb}}}}}{{A`{DGbn}}}}{{{f{BG`}}H`{Ch{{f{AMf}}}}ceg}{{A`{H`n}}}{{Dn{H`}{{Ad{H`}}}}}{{Dn{H`}{{Ad{AMd}}}}}{{Dn{AMd}{{Ad{H`}}}}}}{{{f{BG`}}H`{Ch{{f{AMf}}}}}{{A`{H`n}}}}{{{f{CCd}}H`{Ch{{f{AMf}}}}}{{A`{H`n}}}}10`10{g{{A`{AMne}}}{}{}{{I`{}{{Cj{{A`{ce}}}}}}}}{e{{A`{BFnc}}}{}{{I`{}{{Cj{{A`{{Ch{b}}c}}}}}}}}{e{{A`{BFnc}}}{}{{I`{}{{Cj{{A`{bc}}}}}}}}2{{AGdg}{{A`{AN`e}}}{}{}{{I`{}{{Cj{{A`{ce}}}}}}}}0{{AGde}{{A`{BFnc}}}{}{{I`{}{{Cj{{A`{{Ch{b}}c}}}}}}}}{{AGde}{{A`{BFnc}}}{}{{I`{}{{Cj{{A`{bc}}}}}}}}{B@h{{A`{eg}}}{}{{AMn{c}}ALd}{}}0{{B@hAGd}{{A`{eg}}}{}{{AN`{c}}ALd}{}}0{{ADnDd}{{A`{{l{c}}e}}}Dl{}}{{AE`{f{{l{c}}}}}{{A`{{l{c}}e}}}Dl{}}10{{AE`DdEl}{{A`{{l{c}}e}}}Dl{}}0{c{{A`{e}}}{}{}}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{Jh{{A`{CIln}}}}{{{Mn{{Bj{c}}e}}}{{A`{{Mn{{AAb{c}}e}}}}}{}BLb}2222222222222{DGd{{A`{CIjBCl}}}}{{{f{D@`}}{f{Bd}}}{{A`{Ojn}}}}{{}{{A`{c}}}{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{CCf{Ch{CMj}}}{{A`{{BKb{AFj}}n}}}}{{{f{BMh}}c}{{A`{Ojn}}}{{ABb{{f{El}}}{{Ad{{A`{Eln}}}}}}}}{{{f{BMh}}c}{{A`{Ojn}}}{{ABb{{f{{Bj{{f{El}}}}}}}{{Ad{{A`{Eln}}}}}}}}{{BBdc}{{A`{BBdn}}}{{Af{BBd}{{Ad{{A`{BBdn}}}}}}}}{{{f{BMh}}c}{{A`{Ojn}}}{{ABb{{f{Oj}}}{{Ad{{A`{Ojn}}}}}}}}{{DDfGb}{{A`{Gbn}}}}{Bh{{A`{CFhn}}}}{Jj{{A`{CFjn}}}}{Ob{{A`{CFln}}}}{c{{A`{{Mn{c}}DGf}}}{}}{{AGd{Gh{{Cn{Cl}}}}{Ch{Ib}}}{{A`{BFnn}}}}{{ce}{{A`{{Mn{ce}}DGf}}}{}BLb}{{}{{A`{{Mn{{BOb{c}}}}DGf}}}{}}{c{{A`{{Mn{{BOb{e}}c}}DGf}}}BLb{}}10`{c{{A`{{DEb{{Mn{c}}}}DGf}}}{}}{{ce}{{A`{{DEb{{Mn{ce}}}}DGf}}}{}BLb}{{{f{BMn}}{f{Df{Gh{Bh}}}}}{{A`{bn}}}}{{{f{CA`}}{f{Df{Gh{Bh}}}}}{{A`{bn}}}}{{{f{BLj}}{f{Df{Gh{Bh}}}}}{{A`{bn}}}}{f{{A`{GjBBj}}}}000000000000{{{Mn{ce}}}{{A`{c{Mn{ce}}}}}{}BLb}{fAAl}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{}{{f{Bd}}}}`{{BL`BL`}BL`}{{{f{AHn}}}{{A`{AHnn}}}}{BMdBBd}{{BF`{Ch{{Gh{Ej}}}}BDh}BF`}{BMfBBd}{BBdBBd}{{{f{BJl}}}{{A`{Abn}}}}{{BF`{Ch{e}}BDh}BF`{{BA`{BKj}}Jd}{{Ih{{Bj{c}}}}}}5{{BF`{Ch{{Gh{Dd}}}}BDh}BF`}431{{BF`e}BF`{{BA`{BKj}}Jd}{{Ih{{Bj{c}}}}}}{{{Mn{{AG`{c}}}}}{{A`{cb}}}Il}{{{Mn{ce}}}cJdBLb}{{{f{DfMh}}Jh}b}{{{f{DfCCf}}{f{DGh}}}b}8{{{f{DGj}}c{f{Bd}}BG`}{{A`{AAnn}}}{{BFh{Dd}}}}0{{{C@b{c}}d}{{C@b{c}}}BKf}```{{BLdCDj}BLd}`{{{f{BFn}}}{{Ch{{f{Ib}}}}}}0{{{f{{ALd{}{{ANh{c}}{ANj{e}}{ANl{g}}}}}}Gb}cJd{ANn{AO`{c}}}{{Gn{}{{Cj{c}}}}JfIlIn}}{{{f{Mh}}}{{f{Jh}}}}{{{f{CM`}}ddDdd}{{A`{AAnn}}}}{{BBddd{f{Bd}}d}BBd}``3{{{f{BFn}}}{{f{{Bj{{Cn{Cl}}}}}}}}{{{f{{ALd{}{{ANh{c}}{ANj{e}}{ANl{g}}}}}}}gJd{ANn{AO`{c}}}{{Gn{}{{Cj{c}}}}JfIlIn}}{{{f{BFn}}}DBh}{{BMdBh}BBd}{{BF`Bh}BF`}{{BMfBh}BBd}{{{f{AKh}}Bh}{{Ch{Aj}}}}{{BBdBh}BBd}{{{f{BJl}}Bh}{{Ch{Aj}}}}{{{f{DFh}}Bh}Mh}{{{f{BJl}}Bh}{{A`{Mhn}}}}``{{{f{DGl}}A@l{f{Df{Gh{Kd}}}}}{{A`{bn}}}}{{{f{DGl}}A@l{f{Df{Bj{Kd}}}}}{{A`{bn}}}}`{{{f{{Mn{{AG`{c}}}}}}g}{{A`{eb}}}Il{}{{ABb{{f{c}}}{{Ad{e}}}}}}{{}c{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{{f{{Mn{ce}}}}}GbA@fBLb}{{{f{CKh}}}{{l{Nj}}}}{{{f{CKj}}}{{l{Nj}}}}{{{f{CAn}}}{{A`{{l{Nj}}n}}}}10{{{f{CCb}}}{{Ch{Jj}}}}{{{f{BG`}}}H`}`{{{f{BG`}}}d}`{cCG`{{BA`{BBd}}}}{{CGbc}CGd{{BA`{BBd}}}}{{CGfc}CGd{{BA`{BBd}}}}```{{BLdBF`}BLd}{{CHhBBd}CHh}{{CBf{Ch{{DBd{Gb}}}}}CBf}{{{BOh{c}}{DBd{Gb}}}{{BOh{c}}}BOl}{{{CNf{c}}{DBd{Gb}}}{{CNf{c}}}BKf}{{CBbd}CBb}{Gbc{}}0{{{CKb{c}}{Ch{{DBd{Gb}}}}}{{CKb{c}}}BKf}{{CCfGb}CCf}{{CBb{Ch{CJj}}}CBb}{{CBf{Ch{CJj}}}CBf}{{BF`d}BF`}{{BJhCDb}BJh}{{BF`BBd}BF`}{{BF`c}BF`{{Ih{{Bj{BBd}}}}}}{{{CN`{c}}{Ch{{Gh{Ej}}}}}{{CN`{c}}}BKf}{{{BMj{c}}{Ch{{Gh{Ej}}}}}{{BMj{c}}}BMl}{{{C@b{c}}{Ch{{Gh{Ej}}}}}{{C@b{c}}}BKf}{{CCf{Ch{{Mn{{Bj{Dd}}}}}}}CCf}`4{{CBb{Ch{Dd}}}CBb}{{CCh{Ch{c}}}CCh{{BA`{CCl}}}}{{{CNb{c}}B@`}{{CNb{c}}}{}}{{{BOn{c}}B@`}{{BOn{c}}}BOl}{{{CNb{c}}{Ch{CEb}}}{{CNb{c}}}{}}{{CKn{Ch{CEb}}}CKn}{{{BOn{c}}{Ch{CEb}}}{{BOn{c}}}BOl}{{{C@f{c}}CFf}{{C@f{c}}}BOl}{{BF`c}BF`{{Ih{{Bj{BF`}}}}}}{{{C@f{c}}{Ch{Gb}}}{{C@f{c}}}BOl}{{{BOh{c}}{Ch{Ej}}}{{BOh{c}}}BOl}0{{CHhBBd}CHh}{{CHjBBd}CHj}{{CBbd}CBb}{{CChd}CCh}{{{f{BMh}}El}{{A`{Ojn}}}}{{CBb{Ch{{Mn{{BDb{El}}}}}}}CBb}{{CCf{Ch{{Mn{{Gh{El}}}}}}}CCf}{{CBbCCj}CBb}{{CChCCj}CCh}{{CBbBh}CBb}{{CChBh}CCh}{{CKnCMj}CKn}{{BJj{Gh{BBd}}}{{A`{BBdn}}}}{{{BOh{c}}{Ch{Gb}}}{{BOh{c}}}BOl}{{{BOh{c}}{Ch{d}}}{{BOh{c}}}BOl}{{CHjBBdBBdBBd}CHj}=={{CCfd}CCf}{{{CN`{c}}{Ch{{Gh{Ab}}}}}{{CN`{c}}}BKf}{{{C@b{c}}{Ch{{Gh{Ab}}}}}{{C@b{c}}}BKf}{{CHhBBdBBdBBd}CHh}4{{CHhBBd}CHh}{{CHjBBd}CHj}{{CBbd}CBb}{{CBfd}CBf}{{{CNf{c}}d}{{CNf{c}}}BKf}{{{CKb{c}}d}{{CKb{c}}}BKf}9{{{CN`{c}}{Ch{{Hd{Dd{Mn{Bd}}}}}}}{{CN`{c}}}BKf}{{{C@b{c}}{Ch{{Hd{Dd{Mn{Bd}}}}}}}{{C@b{c}}}BKf}{{CBb{Ch{Dd}}}CBb}{{CBf{Ch{Dd}}}CBf}{{CBb{Ch{Gb}}}CBb}{{CBf{Ch{{DBd{Gb}}}}}CBf}{{CCf{Ch{Gb}}}CCf}{{{CNd{c}}DGn}{{CNd{c}}}BOl}{{{CNf{c}}DGn}{{CNf{c}}}BKf}{{{BOh{c}}Ej}{{BOh{c}}}BOl}={{CCfd}CCf}{{BAd{DH`{DdDd}}}BAd}{{CHhBBd}CHh}{{CHjBBd}CHj}010{{CBbd}CBb}{{CChd}CCh}3{{CJhc}CJh{{BA`{{Ch{Gb}}}}}}<{{CBbc}CBb{{BA`{{Ch{Gb}}}}}}{{CBf{Ch{Gb}}}CBf}{{CBfc}CBf{{BA`{{Ch{Gb}}}}}}{{{CN`{c}}{Ch{Gb}}}{{CN`{c}}}BKf}{{{BMj{c}}{Ch{Gb}}}{{BMj{c}}}BMl}{{{CKb{c}}{Ch{Gb}}}{{CKb{c}}}BKf}{{CCf{Ch{Gb}}}CCf}10:>{{CBb{Ch{CCn}}}CBb}{{CCh{Ch{CCn}}}CCh}{{BF`BL`}BF`}{{CCfCCh}CCf}{{{CKb{c}}{Ch{e}}}{{CKb{c}}}BKf{{BA`{CMj}}}}{{CCf{Ch{c}}}CCf{{BA`{CMj}}}}{{CJh{Mn{{Bj{CMj}}}}}CJh}{{{CKb{c}}{Ch{{Mn{BKd}}}}}{{CKb{c}}}BKf}{{{C@b{c}}{Ch{{Mn{BKd}}}}}{{C@b{c}}}BKf}{{BF`d}BF`}{{{CN`{c}}{Ch{{Gh{Gb}}}}}{{CN`{c}}}BKf}{{{BMj{c}}{Ch{{Gh{Gb}}}}}{{BMj{c}}}BMl}{{{CNf{c}}{Ch{{Gh{Dd}}}}}{{CNf{c}}}BKf}{{{CKb{c}}{Ch{{Mn{{Bj{Dd}}}}}}}{{CKb{c}}}BKf}{{{C@b{c}}{Ch{{Gh{Gb}}}}}{{C@b{c}}}BKf}{{CCf{Ch{{Mn{{Gh{Gb}}}}}}}CCf}6{{CBb{Ch{Bh}}}CBb}{{{BOh{c}}Bh}{{BOh{c}}}BOl}{{CCh{Ch{Bh}}}CCh}{{{BOh{c}}CDh}{{BOh{c}}}BOl}{{CBbd}CBb}{{CCfd}CCf}{{CJhd}CJh}2{{CBfd}CBf}{{{CKb{c}}d}{{CKb{c}}}BKf}3?{{{C@f{c}}{Ch{Gb}}}{{C@f{c}}}BOl}{{CJhc}CJh{{BA`{{Ch{DD`}}}}}}{{BF`c{Ch{Jj}}}BF`{{BA`{Dd}}}}{{CBb{Ch{DD`}}}CBb}{{CBbc}CBb{{BA`{{Ch{DD`}}}}}}{{CBfc}CBf{{BA`{{Ch{DD`}}}}}}{{CBf{Ch{DD`}}}CBf}{{{CN`{c}}{Ch{DD`}}}{{CN`{c}}}BKf}{{{BMj{c}}{Ch{DD`}}}{{BMj{c}}}BMl}{{{CKb{c}}{Ch{{f{DfDD`}}}}}{{CKb{c}}}BKf}{{{C@b{c}}{Ch{DD`}}}{{C@b{c}}}BKf}{{CCf{Ch{DD`}}}CCf}{{{f{BMh}}}{{A`{Ojn}}}}{{CCfGb}CCf}{{CBb{Ch{{Mn{{BDb{El}}}}}}}CBb}{{CBf{Ch{{Mn{{BDb{El}}}}}}}CBf}{{{CNf{c}}{Mn{{BDb{El}}}}}{{CNf{c}}}BKf}{{{CKb{c}}{Mn{{BDb{El}}}}}{{CKb{c}}}BKf}{{CCf{Ch{{Mn{{BDb{El}}}}}}}CCf}{{CBbc}{{A`{CBbn}}}{{Dn{{BDb{El}}}{{Ad{{A`{{BDb{El}}n}}}}}}}}4{{{CNf{c}}{f{{BDb{El}}}}}{{CNf{c}}}BKf}{{{CKb{c}}{f{{BDb{El}}}}}{{CKb{c}}}BKf}3{{CHhBBd}CHh}{{CHjBBd}CHj}{{CBbBh}CBb}{{{BOh{c}}Bh}{{BOh{c}}}BOl}{{CChBh}CCh}{{BF`d}BF`}{{CBbGb}CBb}?0?{{{C@b{c}}{Ch{{Hd{GbGb}}}}}{{C@b{c}}}BKf}2{{CJhDDl}CJh}{{CBbDDl}CBb}{{CBfDDl}CBf}{{{C@f{c}}CHf}{{C@f{c}}}BOl}{{BJh{Ch{Dd}}}BJh}{{{BOh{c}}{Ch{Ej}}}{{BOh{c}}}BOl}{{CHhLb}CHh}{{CHh{Ch{Dd}}}CHh}{{CBbd}CBb}{{CChd}CCh}10<{{BFn{Ch{Ib}}}BFn}{{{f{BFn}}{Ch{Ib}}}{{Cn{Cl}}}}{{{ALd{}{{ANh{c}}{ANj{e}}{ANl{g}}}}{Ch{Ib}}}{{ALd{}{{ANh{c}}{ANj{e}}{ANl{g}}}}}Jd{ANn{AO`{c}}}{{Gn{}{{Cj{c}}}}JfIlIn}}2{{CHjBBd}CHj}{{CHhBBd}CHh}{BF`BF`}{{{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}}e{}{}{}}{{{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}}e{}{}{}}{{{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}c}e{}{}{}}10{{c{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}}e{}{}{}}210213210210{{{f{Df{Mn{AFj}}}}{f{{Bj{Bh}}}}}{{A`{GbBCh}}}}{{{f{CDn}}AAnc}{{A`{bn}}}BOl}{{{f{CFd}}AAnc}{{A`{bn}}}BOl}{{{f{DfAAn}}{f{ANd}}e{f{g}}Gb}{{A`{bn}}}{{BA`{Dd}}}{{I`{}{{Cj{c}}}}}{DHbIlIn}}{{{f{Df}}c}{{A`{GbBCh}}}DEj}{{{f{Df{Mn{AFj}}}}{f{{Bj{DHd}}}}}{{A`{GbBCh}}}}{{BBdc}BBd{{BA`{BBd}}}}{{{f{CKh}}}{{l{Kj}}}}{{{f{CKj}}}{{l{Kj}}}}{{{f{CAn}}}{{A`{{l{Kj}}n}}}}``{{{f{AL`}}{f{{l{Bl}}}}{f{{l{c}}}}}{{A`{{l{c}}n}}}Dl}```````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{Ib}}}Aj}{Gb{{f{c}}}{}}{Gb{{f{Dfc}}}{}}{Gbb}{cc{}}{{}Gb}{{}DHf}{{}c{}}{{{Ch{{f{BKd}}}}{f{DHh}}{f{{BDb{BAd}}}}}{{A`{dn}}}}{{{f{DHf}}Aj{f{AGd}}}d}{{{Gh{{Hd{{f{CLh}}DHj}}}}BAd{Ch{DHl}}}{{A`{{Cn{Cl}}n}}}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAl}6``{{{f{BGh}}c}Ab{{Dn{{Hd{Jj{f{{BGj{Jj}}}}}}}{{Ad{Ch}}}}IlIn}}{{{f{BGh}}c}Ab{{Dn{{Hd{Jj{f{{BGj{Jj}}}}}}}{{Ad{}}}}IlIn}}{{{f{{Bj{{AAb{Jj}}}}}}c}Ab{{Dn{{AAb{Jj}}}{{Ad{Ch}}}}IlIn}}{{{f{{Bj{{AAb{Jj}}}}}}c}Ab{{Dn{{AAb{Jj}}}{{Ad{}}}}IlIn}}{{{f{{Bj{c}}}}e{Ch{{Mn{AGf}}}}}{{ALl{c}}}{BI`BIb}{{D`{}{{Cj{{Hd{JjJj}}}}}}Jf}}{{{f{{Bj{c}}}}{f{Ib}}e{Ch{{Mn{AGf}}}}}{{ALl{c}}}{BI`BIb}{{D`{}{{Cj{{Hd{JjJj}}}}}}Jf}}{{{f{{l{c}}}}JjJj}{{l{c}}}Dl}{{{f{{Gh{{AAb{Jj}}}}}}{f{{Bj{{Cn{Cl}}}}}}}d}{{{f{BId}}{f{C`}}}Ab}{{BIfBIf}BIf}0``````{{{f{{l{c}}}}{f{{l{e}}}}gik}{{l{m}}}DlDl{{Dn{ff}{{Ad{}}}}}{{Dn{f}{{Ad{}}}}}{{Dn{f}{{Ad{}}}}}Dl}{{{l{c}}{l{e}}gik}{{l{m}}}DlDl{{Dn{}{{Ad{}}}}}{{Dn{}{{Ad{}}}}}{{Dn{}{{Ad{}}}}}Dl}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}DlDlCl{{Af{ff}{{Ad{g}}}}}{{Dl{}{{Hn{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{l{i}}}DlDl{{ALb{ChCh}}}Dl}{{{f{{l{c}}}}{f{{l{e}}}}g}bDlDl{{Af{ChCh}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{l{Bb}}}DlDl{{Af{{f{DfEj}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}DlDl{}{{Af{}{{Ad{g}}}}}Dl}{{{f{{l{c}}}}{f{{l{e}}}}iDd}{{l{k}}}DlDl{ClALd}{{Af{ff}{{Ad{g}}}}}{{Dl{}{{Hn{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}iDd}{{l{k}}}DlDlCl{{Af{ff}{{Ad{g}}}}}{{Dl{}{{Hn{g}}}}}}{{{l{c}}{l{e}}i}{{l{k}}}DlDlCl{{Af{}{{Ad{g}}}}}{{Dl{}{{Hn{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{A`{Abn}}}DlDl{{Af{ff}{{Ad{{Cn{Cl}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}gdd}{{l{c}}}DlDl{{Af{ff}{{Ad{{Cn{Cl}}}}}}}}85{{{f{{l{c}}}}{f{{l{e}}}}k}{{A`{{l{m}}i}}}DlDl{}{}{{Af{ChCh}{{Ad{{A`{{Ch{g}}i}}}}}}}Dl}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}i}{{l{k}}}DlDlDl{{ALf{ChChCh}}}Dl}{{{f{{l{c}}}}{f{{l{e}}}}k}{{A`{{l{m}}i}}}DlDlClALh{{Af{ff}{{Ad{{A`{gi}}}}}}}{{Dl{}{{Hn{g}}}}}}2{{{f{{l{c}}}}{f{{l{e}}}}kDd}{{A`{{l{m}}i}}}DlDlClALh{{Af{ff}{{Ad{{A`{gi}}}}}}}{{Dl{}{{Hn{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}idd}{{A`{{l{c}}g}}}DlDlALh{{Af{ff}{{Ad{{A`{{Cn{Cl}}g}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}m}{{A`{{l{o}}k}}}DlDlDl{}{}{{Af{ChChCh}{{Ad{{A`{{Ch{i}}k}}}}}}}Dl}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dl{}{}{{Af{Ch}{{Ad{{A`{{Ch{e}}g}}}}}}}Dl}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dl{}{}{{Af{}{{Ad{{A`{eg}}}}}}}Dl}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dl{ClALd}ALh{{Af{f}{{Ad{{A`{eg}}}}}}}{{Dl{}{{Hn{e}}}}}}{{{f{{l{c}}}}e}{{l{g}}}Dl{{ALj{Ch}}}Dl}{{{f{{l{c}}}}e}{{l{g}}}DlALjDl}{{{f{{l{c}}}}g}{{l{i}}}DlCl{{Af{f}{{Ad{e}}}}}{{Dl{}{{Hn{e}}}}}}{{{l{c}}g}{{l{i}}}DlCl{{Af{}{{Ad{e}}}}}{{Dl{}{{Hn{e}}}}}}{{{f{{l{c}}}}g}{{l{i}}}Dl{ClALd}{{Af{f}{{Ad{e}}}}}{{Dl{}{{Hn{e}}}}}}0``{{{f{DHn}}}{{l{Fb}}}}0{{{f{DHn}}{f{{l{L`}}}}d}{{A`{Abn}}}}{{{f{DHn}}{f{{l{Bb}}}}d}{{A`{Abn}}}}{{{f{DHn}}}Ab}{{{f{DHn}}}{{A`{Abn}}}}1{{{f{DHn}}}{{A`{{l{Fb}}n}}}}{{{f{DHn}}}{{l{Cb}}}}{{{f{DHn}}{f{Ab}}}{{A`{Abn}}}}{{{f{DHn}}F`}{{A`{{l{Cb}}n}}}}{{{f{DHn}}Bh}{{A`{Abn}}}}5{{{f{DHn}}}{{A`{{l{Ah}}n}}}}01{{{f{DI`}}}{{f{{l{Cb}}}}}}`{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{C@lBBd}BBd}{Gb{{f{c}}}{}}{Gb{{f{Dfc}}}{}}{Gbb}3{cc{}}{{}Gb}{{}c{}}{C@lBBd}7{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAl}4`````````````````````{{{f{DfDIb}}{f{{Bj{Bh}}}}ddd}{{A`{bn}}}}{{{f{DfDIb}}d}b}>>>>====;;;;::::9999{{{f{DIb}}}El}99998888{{{f{{Bj{Gb}}}}Gb{f{{BDb{El}}}}{Ch{Bh}}CCjd}{{A`{{Gh{DIb}}n}}}}8888{DIb{{A`{Abn}}}}7777666655559999```````````{{{f{BNb}}{Ch{{f{Bd}}}}d}{{A`{{Kn{KlKj}}n}}}}{{{f{BNb}}{Ch{{f{Bd}}}}}{{A`{{Kn{KlKj}}n}}}}{{{f{BNb}}{Ch{{f{Bd}}}}Lbdd{Ch{{f{Dd}}}}{f{{l{Bb}}}}}{{A`{{Kn{LdL`}}n}}}}{{{f{BNb}}{Ch{{f{Bd}}}}Lbd{Ch{{f{Dd}}}}{f{{l{Bb}}}}}{{A`{{Kn{LdL`}}n}}}}{{{f{BNb}}{Ch{{f{Bd}}}}d}{{A`{{Kn{LlL`}}n}}}}`{{{f{CKh}}}{{l{Nj}}}}{{{f{CKj}}}{{l{Nj}}}}{{{f{CKl}}}{{l{L`}}}}`{{{f{DBb}}}{{l{Nj}}}}21{{{f{CKh}}}{{l{Bl}}}}{{{f{CKj}}}{{l{Bl}}}}{{{f{CKh}}}{{l{Kj}}}}{{{f{CKj}}}{{l{Kj}}}}55`46576{{{f{DBb}}}{{l{Kj}}}}16{{{f{CKh}}}{{l{Nn}}}}{{{f{CKj}}}{{l{Nn}}}}{{Dd{f{{Bj{{f{Bd}}}}}}{f{Bd}}}{{Kn{KlKj}}}}{{Dd{f{{Bj{{f{Bd}}}}}}{f{Bd}}}{{Kn{LlL`}}}}{{Dd{f{{Bj{{f{Bd}}}}}}{f{Bd}}Lb}{{Kn{LdL`}}}}=<{{{f{DEn}}A@b}{{A`{Abn}}}}{{{f{DEn}}{f{Ab}}CBj}{{A`{Abn}}}}101010101010<>=`?>>`98````````{{fh}b}{{{f{BNb}}{Ch{{f{Bd}}}}d}{{A`{{Kn{KlKj}}n}}}}{{{f{BNb}}{Ch{{f{Bd}}}}}{{A`{{Kn{KlKj}}n}}}}{{{f{BNb}}{Ch{{f{Bd}}}}Lbdd{Ch{{f{Dd}}}}{f{{l{Bb}}}}}{{A`{{Kn{LdL`}}n}}}}{{{f{BNb}}{Ch{{f{Bd}}}}Lbd{Ch{{f{Dd}}}}{f{{l{Bb}}}}}{{A`{{Kn{LdL`}}n}}}}{{{f{DId}}}{{f{{l{Bb}}}}}}{{{f{BNb}}{Ch{{f{Bd}}}}d}{{A`{{Kn{LlL`}}n}}}}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{DIf}}}DIf}{{f{f{Dfc}}}b{}}{fb}{Gb{{f{c}}}{}}{Gb{{f{Dfc}}}{}}{Gbb}{{{f{DIf}}{f{DIf}}}d}{{f{f{c}}}d{}}00{{{f{DIf}}{f{DfHj}}}{{A`{bHl}}}}{cc{}}{{{f{DIf}}{f{Dfc}}}bADl}`{{}Gb}{{}c{}}{{{f{DIf}}{f{Bd}}}d}{fc{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAl}5````{{fh}b}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{{DIh{c}}}}}{{DIh{c}}}{JdAl}}{{f{f{Dfc}}}b{}}{fb}{Gb{{f{c}}}{}}{Gb{{f{Dfc}}}{}}{Gbb}{cc{}}{{{f{Bd}}}{{Ch{DIf}}}}{{}Gb}{{}c{}}`{{{f{Df{DIh{c}}}}{f{Bd}}}ChAl}{{{f{DfDIj}}{f{{Bj{Bh}}}}{Ch{Lb}}}{{Ch{c}}}{}}{{{f{Df{DIh{Kj}}}}{f{{Bj{Bh}}}}{Ch{Lb}}}{{Ch{Ob}}}}{{{f{Df{DIh{L`}}}}{f{{Bj{Bh}}}}{Ch{Lb}}}{{Ch{H`}}}}`{fc{}}{c{{A`{e}}}{}{}}{{c{Ch{Lb}}}{{A`{{DIn{}{{DIl{e}}}}n}}}{}{}}{{DIf{Ch{Lb}}}{{A`{{DIh{Kj}}n}}}}{{DIf{Ch{Lb}}}{{A`{{DIh{L`}}n}}}}{{}{{A`{c}}}{}}{fAAl};````````{{fh}b}{f{{f{c}}}{}}0{{{f{Df}}}{{f{Dfc}}}{}}0{{{f{CJj}}}CJj}{{f{f{Dfc}}}b{}}{fb}{{}CJj}{Gb{{f{c}}}{}}0{Gb{{f{Dfc}}}{}}0{Gbb}0{{{f{CJj}}{f{CJj}}}d}{{{f{DJ`}}{f{DJ`}}}d}{{f{f{c}}}d{}}00{{{f{CJj}}{f{DfHj}}}{{A`{bHl}}}}{cc{}}0{{{f{Bd}}}{{A`{DJ`}}}}{{{f{Bd}}g}{{A`{CJjn}}}{{Ih{Bd}}}{{BA`{Ej}}}{{I`{}{{Cj{{Hd{ce}}}}}}}}{{{f{CJj}}{f{Dfc}}}bADl}{{}Gb}0{{}c{}}0``{fc{}}{c{{A`{e}}}{}{}}0{{}{{A`{c}}}{}}0{fAAl}044{{CJjGb}CJj}`````````````{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{{Bj{Bh}}}}}{{Ch{DJb}}}}{Gb{{f{c}}}{}}{Gb{{f{Dfc}}}{}}{Gbb}{cc{}}=<{{{f{{Bj{Bh}}}}{f{Df{Gh{Bh}}}}}{{A`{{f{{Bj{Bh}}}}n}}}};:9=`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{eAMn{}{{I`{}{{Cj{c}}}}}}0{{AGde}AN`{}{{I`{}{{Cj{c}}}}}}0{{{f{ANf}}}{{f{El}}}}{{{f{{ALd{}{{ANh{c}}{ANj{e}}{ANl{g}}}}}}}{{Ch{{f{{Bj{c}}}}}}}Jd{ANn{AO`{c}}}{{Gn{}{{Cj{c}}}}JfIlIn}}{{{f{AMj}}{f{AMj}}c}{{A`{AMjn}}}AOf}{{{f{AOh}}{f{El}}}{{A`{Abn}}}}{{{f{AOh}}{f{El}}Fl}{{A`{Abn}}}}`{B@he{}{{AMn{c}}ALd}}0{{B@hAGd}e{}{{AN`{c}}ALd}}0{{{AOb{Bd}}}El}{{{f{AOh}}}{{f{El}}}}`{{AOf{f{{l{Fb}}}}{f{{l{Fb}}}}}{{A`{{l{Fb}}n}}}}{{{Gh{c}}AGd}{{ALd{}{{ANh{c}}{ANj{e}}{ANl{g}}}}}Jd{ANn{AO`{c}}}{{Gn{}{{Cj{c}}}}JfIlIn}}{{{Gh{c}}AGd}{{ALd{}{{ANh{e}}{ANj{c}}{ANl{g}}}}}{ANn{AO`{e}}}Jd{{Gn{}{{Cj{e}}}}JfIlIn}}{{GbcAGd}{{ALd{}{{ANh{c}}{ANj{e}}{ANl{g}}}}}Jd{ANn{AO`{c}}}{{Gn{}{{Cj{c}}}}JfIlIn}}{{GbAGd}{{ALd{}{{ANh{c}}{ANj{e}}{ANl{g}}}}}Jd{ANn{AO`{c}}}{{Gn{}{{Cj{c}}}}JfIlIn}}{{{f{{ALd{}{{ANh{c}}{ANj{e}}{ANl{g}}}}}}Gb}{{Ch{c}}}Jd{ANn{AO`{c}}}{{Gn{}{{Cj{c}}}}JfIlIn}}{{{f{AOh}}Gb}{{A`{Jhn}}}}{{{f{AOh}}Gb}Jh}{{}El}{{{f{BAn}}Gb}Jh}4{{BB`El}{{A`{Mhn}}}}{{{f{{ALd{}{{ANh{c}}{ANj{e}}{ANl{g}}}}}}}{{AGl{cgAGj}}}Jd{ANn{AO`{c}}}{{Gn{}{{Cj{c}}}}JfIlIn}}{{{f{{ALd{}{{ANh{c}}{ANj{e}}{ANl{g}}}}}}}{{Ch{c}}}Jd{ANn{AO`{c}}}{{Gn{}{{Cj{c}}}}JfIlIn}}{{{f{AMj}}{f{AMj}}}{{A`{{Hd{AMjAMj}}n}}}}{{{l{Ah}}{l{Ah}}}{{A`{{Hd{{l{Ah}}{l{Ah}}}}n}}}}{{{f{El}}{f{El}}}{{A`{Eln}}}}`{{}c{}}0{g{{A`{AMne}}}{}{}{{I`{}{{Cj{{A`{ce}}}}}}}}0{{AGdg}{{A`{AN`e}}}{}{}{{I`{}{{Cj{{A`{ce}}}}}}}}0{B@h{{A`{eg}}}{}{{AMn{c}}ALd}{}}0{{B@hAGd}{{A`{eg}}}{}{{AN`{c}}ALd}{}}0{{{f{{ALd{}{{ANh{c}}{ANj{e}}{ANl{g}}}}}}Gb}cJd{ANn{AO`{c}}}{{Gn{}{{Cj{c}}}}JfIlIn}}0{{{f{{ALd{}{{ANh{c}}{ANj{e}}{ANl{g}}}}}}}gJd{ANn{AO`{c}}}{{Gn{}{{Cj{c}}}}JfIlIn}}{Gbc{}}0{{{ALd{}{{ANh{c}}{ANj{e}}{ANl{g}}}}{Ch{Ib}}}{{ALd{}{{ANh{c}}{ANj{e}}{ANl{g}}}}}Jd{ANn{AO`{c}}}{{Gn{}{{Cj{c}}}}JfIlIn}}```````````{{{f{AMj}}{f{AMj}}c}{{A`{AMjn}}}AOf}{{AOf{f{{l{Fb}}}}{f{{l{Fb}}}}}{{A`{{l{Fb}}n}}}}=<`````````{{}b}0{{}d}{{{f{{Kn{LdL`}}}}{f{{l{Bb}}}}CJf{Gd{H`}{{Ad{AMd}}}}{Gd{AMd}{{Ad{H`}}}}{f{AMf}}{f{AMf}}}{{A`{{l{L`}}n}}}}{{{f{{Kn{LdL`}}}}{Ch{{f{Bd}}}}{Gd{H`}{{Ad{AMd}}}}{Gd{AMd}{{Ad{H`}}}}{f{AMf}}{f{AMf}}}{{A`{{l{L`}}n}}}}{{{f{{Kn{LdL`}}}}{Ch{{f{Bd}}}}{f{{l{Bb}}}}CJf}{{A`{{Kn{LdL`}}n}}}}```{{c{Ch{Ib}}}D@b{}}{{{D@d{H`}}{D@d{Bh}}{Ch{Ib}}}D@f}{{{D@d{H`}}{D@d{Bh}}{Ch{Ib}}}D@h}`{CLnBBd}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{CLnLb}BBd}3{{CLnBBdLb}BBd}{{CLnDd}BBd}555{Gb{{f{c}}}{}}{Gb{{f{Dfc}}}{}}{Gbb}8{cc{}}9{{}Gb}{{}c{}};;;;;;;;;;{{CLn{Ch{Dd}}BBdCJf}BBd}{{CLnBBd}BBd}={{CLn{f{Bd}}}BBd}>;0>>>>>>>1{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAl}6{CLnBBd}0?0`{{{f{BIh}}{f{AAn}}{f{C`}}}{{A`{Abn}}}}{{{f{BIh}}}{{A`{{f{Dd}}n}}}}`{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{}DJd}{Gb{{f{c}}}{}}{Gb{{f{Dfc}}}{}}{Gbb}{{DJd{Ch{{f{AGd}}}}}{{A`{AEln}}}}{cc{}}{{}Gb}{{}c{}}{{{f{DJd}}}d}{{GbGb}DJd}{{{f{DfDJd}}{Cn{Cl}}}b}{{{f{DfDJd}}}b}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAl}7`{{{f{{l{c}}}}}GbAl}0````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{fh}b}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{DJf}}}DJf}{{f{f{Dfc}}}b{}}{fb}{Gb{{f{c}}}{}}{Gb{{f{Dfc}}}{}}{Gbb}{{{f{DJf}}{f{DJf}}}d}{{{f{DJf}}{f{DfHj}}}{{A`{bHl}}}}0{cc{}}{{{f{DJf}}{f{Dfc}}}bADl}{{}Gb}{{}c{}}{fc{}}{fEj}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{f{{A`{GjBBj}}}}{fAAl}6````````{{fh}b}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{DJh}}}DJh}{{f{f{Dfc}}}b{}}{fb}{Gb{{f{c}}}{}}{Gb{{f{Dfc}}}{}}{Gbb}{{{f{DJh}}{f{DJh}}}d}{{{f{DJh}}{f{DfHj}}}{{A`{bHl}}}}0{cc{}}{{{f{DJh}}{f{Dfc}}}bADl}{{}Gb}{{}c{}}{fc{}}{fEj}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{f{{A`{GjBBj}}}}{fAAl}6{{M`M`}M`}{{{f{{l{Fb}}}}Jj}{{A`{bn}}}}{{{f{{ALl{Jj}}}}Jj}{{A`{bn}}}}```{{{f{Ab}}CEh}Ab}{{{f{Ff}}{f{Ff}}d}{{A`{Ffn}}}}{{{f{Ab}}}{{A`{Abn}}}}{{{f{{l{c}}}}e}ChLn{{Dn{}{{Ad{}}}}E`}}{{{f{Ab}}{f{C`}}}Ab}0{{{f{Ab}}Dd}Ab}0`{{fh}b}{{{f{DJj}}}{{f{AGf}}}}{{{f{DfDJj}}}{{Cn{Cl}}}}{{{f{DfDJj}}}{{f{DfAGf}}}}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{DJj}}}DJj}{{f{f{Dfc}}}b{}}{fb}{{}DJj}{Gb{{f{c}}}{}}{Gb{{f{Dfc}}}{}}{Gbb}{{{f{DJj}}}{{f{AGd}}}}{{{f{DfDJj}}Gb}b}{{{f{DJj}}{f{DfHj}}}{{A`{bHl}}}}{cc{}}{{}Gb}{{}c{}}{{{f{DJj}}}Gb}{GbDJj}{{{f{DfDJj}}}b}70{fc{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAl}{{{f{DJj}}}{{Ch{{f{DJl}}}}}}8`{{fh}b}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{DGh}}}DGh}{{f{f{Dfc}}}b{}}{fb}{{}DGh}{Gb{{f{c}}}{}}{Gb{{f{Dfc}}}{}}{Gbb}{{{f{{BDj{ElA@l}}}}}El}{{{f{DGh}}{f{DfHj}}}{{A`{bHl}}}}{cc{}}{{{f{DGh}}}Gb}{{{f{DGh}}}{{Mn{{BDb{El}}}}}}{{{f{Bd}}dd}El}{{{f{DAj}}Bh{Ch{Gb}}d{Ch{{f{{BDb{El}}}}}}GbGb{Ch{{f{CCl}}}}{Ch{Bh}}Bh{Ch{{f{CCn}}}}dd{f{Df{Ch{Gb}}}}d}{{A`{{Hd{{BDb{El}}GbGb}}n}}}}{{}Gb}{{}c{}}{fc{}}{c{{A`{e}}}{}{}}{{{f{DAj}}{f{CCf}}}{{A`{DGhn}}}}{{}{{A`{c}}}{}}{fAAl}5{{DGh{Mn{{BDb{El}}}}}DGh}````{{{f{{l{c}}}}eALnd}{{Gh{Jj}}}Dl{{D`{}{{Cj{Ch}}}}}}{{{f{{Bj{f}}}}cJje}{{Gh{Jj}}}{{D`{}{{Cj{Ch}}}}}{{Dn{fGbf}{{Ad{d}}}}}}``{{{f{DJn}}}{{f{Ab}}}}{{{f{CAn}}}{{A`{{l{Kj}}n}}}}{{{f{CAn}}}{{A`{{l{Nj}}n}}}}0{{{f{CAn}}}{{A`{{l{Bl}}n}}}}22112{{{f{CAn}}}{{A`{{l{Nn}}n}}}}322{{{f{CAn}}{f{Bd}}}{{A`{Abn}}}}{{{f{CAn}}Lb}{{A`{{l{L`}}n}}}}1445`{{Gb{f{Df{Gh{d}}}}}b}```{{{f{AKf}}GbGb}AKf}0{{Gb{f{{Bj{Ff}}}}{f{DfFh}}}{{A`{{AM`{{l{Fb}}}}n}}}}{{{f{{Bj{Ff}}}}{f{{Bj{d}}}}{f{{Bj{d}}}}}{{A`{AMbn}}}}{{{f{{Bj{Ff}}}}{f{{Bj{d}}}}{f{{Bj{d}}}}}{{A`{{K`{H`}}n}}}}{{Dd{f{{Bj{Ff}}}}{f{{Bj{d}}}}{f{{Bj{d}}}}}{{A`{{l{Fd}}n}}}}{{Dd{f{{Bj{Ab}}}}}{{A`{{l{Fd}}n}}}}{{{f{Ab}}}{{A`{{Cn{Cl}}n}}}}{{{f{{Bj{Ab}}}}}{{A`{AMbn}}}}{{{f{{Bj{Ab}}}}}{{A`{{l{Fd}}n}}}}0```````````88```{{{f{BO`}}}{{f{{l{Bb}}}}}}{{{f{BOd}}}{{A`{{l{Bb}}n}}}}{{{f{BOd}}}{{l{Bb}}}}{{{f{BOd}}{f{{l{Bb}}}}}{{l{Bb}}}}{{{f{BOd}}{f{Bd}}d}{{A`{{l{Bl}}n}}}}{{{f{BOd}}{f{{l{Bb}}}}dd}{{A`{{l{Bl}}n}}}}{{{f{BOd}}{f{Bd}}}{{A`{{l{Bl}}n}}}}{{{f{BOd}}{f{Bd}}d}{{A`{{l{Fb}}n}}}}{{{f{BOd}}{f{{l{Bb}}}}d}{{A`{{l{Fb}}n}}}}{{{f{BOd}}{f{{l{Bb}}}}Gb}{{A`{{l{Bb}}n}}}}{{{f{BOd}}{f{Bd}}}{{A`{{l{Ah}}n}}}}{{{f{BOd}}{f{{l{Bb}}}}}{{A`{{l{Ah}}n}}}}{{{f{BOd}}{f{Bd}}{f{El}}}{{A`{Abn}}}}5{{{f{BOd}}{f{{l{Bb}}}}dd}{{A`{{l{Fb}}n}}}}{{{f{BOd}}{f{Bd}}}{{A`{{l{Fb}}n}}}}=<{{{f{{Bj{{f{{l{Bb}}}}}}}}{f{Bd}}d}{{A`{{l{Bb}}n}}}}{{{f{BOd}}{f{Bd}}{f{Bd}}}{{A`{{l{Bb}}n}}}}0{{{f{BOd}}{f{Bd}}{f{Bd}}Gb}{{A`{{l{Bb}}n}}}}1{{{f{BOd}}{f{{l{Bb}}}}}{{l{Ah}}}}{{{f{BOd}}{f{{l{Bb}}}}Gb}{{A`{{l{j}}n}}}}0{{{f{{l{Bb}}}}{f{{l{Bb}}}}e}{{l{Ah}}}{{D`{}{{Cj{{f{Bd}}}}}}}{{Dn{{f{Bd}}{f{Bd}}}{{Ad{c}}}}}}2{{{f{{l{Bb}}}}{f{{l{Bb}}}}Gbed}{{A`{{l{j}}n}}}{{D`{}{{Cj{{f{Bd}}}}}}}{{Dn{{f{Bd}}{f{Bd}}}{{Ad{c}}}}}}2{{{f{BOd}}{f{Ff}}}{{A`{{l{Bb}}n}}}}{{{f{{l{Bb}}}}{f{Bd}}d}{{l{Bb}}}}{{{f{BOd}}}{{l{Fb}}}}0{{{f{BOd}}}{{l{Bb}}}}{{{f{BOd}}{f{Ff}}{f{Ff}}}{{A`{{l{Bb}}n}}}}4{{{f{{l{Bb}}}}{f{{l{Bb}}}}}{{l{Bb}}}}505050{{{f{BOd}}{f{{l{Bb}}}}}{{l{Bb}}}}10{{{f{BOd}}{f{{l{Fb}}}}d}{{A`{{l{L`}}n}}}}444````````{{eGbGb}{{DK`{H`}}}{{Ih{Bd}}}{{D`{}{{Cj{c}}}}}}{{eGbGb}{{K`{H`}}}{{Ih{{Bj{Bh}}}}}{{D`{}{{Cj{c}}}}}}``````````````{{fh}b}0{{{f{BJl}}}Aj}{{Dd{Gh{{Cn{Cl}}}}{f{AGd}}}{{A`{Abn}}}}{{Dd{Gh{{Cn{Cl}}}}{f{AGd}}{Ch{{f{{DH`{DdDd}}}}}}}{{A`{Abn}}}}{{AbAb}}{{Abc}{}{AnMf}}{{{f{Ab}}c}{}{AnMf}}{{{f{Ab}}{f{Ab}}}}`{{{f{DfAb}}{f{Ab}}}{{A`{{f{DfAb}}n}}}}{{{f{Ab}}}{{Ch{Gb}}}}0{{{f{BJl}}F`}{{l{Fb}}}}{{{f{BJl}}}{{A`{{l{Fb}}n}}}}`{{{f{Ab}}}{{A`{{f{{l{Cb}}}}n}}}}{{{f{Ab}}Gb}{{f{{Cn{Cl}}}}}}{{{f{BJl}}}{{f{AGf}}}}{{{f{DfBJl}}}{{f{DfAGf}}}}{{{f{Ab}}}{{l{Ah}}}}{{{f{DfBJl}}}{{f{Df{l{c}}}}}Dl}{{{f{BJl}}}{{f{{l{c}}}}}Dl}{{{f{Ab}}}{{f{BJl}}}}{{{f{Ab}}}{{f{Ab}}}}0{{{f{DfBJl}}}{{A`{Gbn}}}}{{{f{DfAb}}}{{A`{Gbn}}}}{{{f{Ab}}}{{A`{{f{{l{Bf}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Fd}}}}n}}}}{{{f{BJl}}{f{Ab}}}{{A`{Abn}}}}00{{{f{Ab}}}{{A`{{f{{l{Bl}}}}n}}}}{f{{f{c}}}{}}000{{{f{Df}}}{{f{Dfc}}}{}}000{{{f{BJl}}{f{El}}Fl}{{A`{Abn}}}}{{{f{Ab}}{f{El}}}{{A`{Abn}}}}0{{{f{Ab}}{f{El}}Fl}{{A`{Abn}}}}{{{f{Ab}}}{{A`{{f{AMj}}n}}}}7{{{f{Ab}}{f{Ab}}}{{A`{Abn}}}}{{{f{Ab}}c}{{A`{Abn}}}B`}{{{f{BJl}}}{{Gf{{G`{{Cn{Cl}}}}{Gd{{f{{Cn{Cl}}}}}{{Ad{Gb}}}}}}}}{{{f{Ab}}}{{`{{D`{}{{Cj{Gb}}}}}}}}{{{f{BJl}}}{{f{{Gh{{Cn{Cl}}}}}}}}{{{f{DfBJl}}}{{f{Df{Gh{{Cn{Cl}}}}}}}}{{{f{DfAb}}}{{f{Df{Gh{{Cn{Cl}}}}}}}}{{{f{Ab}}}Ab}{{{f{M`}}}M`}1{{{f{BJl}}}{{Mn{BJl}}}}{{f{f{Dfc}}}b{}}0{fb}0{{{f{DfAb}}}b}{{{f{Ab}}}{{A`{{f{{Kn{KlKj}}}}n}}}}{{{f{Ab}}}{{A`{{f{{Kn{LdL`}}}}n}}}}{{{f{Ab}}}{{A`{{f{{Kn{LhLf}}}}n}}}}{{}Ab}{Gb{{f{c}}}{}}00{{{f{Ab}}}f}1{Gb{{f{Dfc}}}{}}000{{{f{Ab}}{f{Ab}}}}{{AbAb}}{{{f{Ab}}c}{}{AnMf}}{{Abc}{}{AnMf}}{Gbb}000{{{f{BJl}}}Ab}{{{f{BJl}}}{{f{El}}}}{{{f{Ab}}}{{A`{{f{{Kn{LjL`}}}}n}}}}{{{f{M`}}{f{M`}}}d}{{{f{Ab}}{f{Ab}}}d}{{{f{{AId{}{{Cj{c}}}}}}e}c{}{}}{{{f{Ab}}{f{Ab}}}{{A`{{l{Bl}}n}}}}{{{f{Ab}}c}{{A`{{l{Bl}}n}}}BAb}{{{f{Ab}}{f{Bd}}}{{A`{{l{Bl}}n}}}}3{{{f{Ab}}{f{Bd}}}}3{{{f{Ab}}c}{}BAb}66{{f{f{c}}}d{}}00{{{f{Ab}}}Gb}{{{f{Ab}}}{{A`{Abn}}}}{{{f{DfAb}}{f{Ab}}}{{A`{{f{DfAb}}n}}}}{{{f{Ab}}JhGb}{{A`{Abn}}}}{{{f{Ab}}}{{A`{{f{{l{Eh}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Ef}}}}n}}}}{{{f{BJl}}}{{Eb{Oj}}}}{{{f{Ab}}AIb}{{A`{Abn}}}}{{{f{BJl}}{f{{l{Bl}}}}}{{A`{Abn}}}}{{{f{M`}}{f{DfHj}}}{{A`{bHl}}}}{{{f{Ab}}{f{DfHj}}}{{A`{bHl}}}}0{{{f{Ab}}}Ej}{cc{}}00{{{Kn{KlKj}}}Ab}{DKbAb}2{{{Kn{LlL`}}}Ab}{{{Kn{LjL`}}}Ab}{{{Kn{LdL`}}}Ab}{{{l{c}}}AbDl}{{Dd{f{{Bj{Jh}}}}d}{{A`{Abn}}}}{{Dd{f{{Bj{Jh}}}}{f{El}}d}{{A`{Abn}}}}{{Dd{Cn{Cl}}}{{A`{Abn}}}}{{Dd{Gh{{Cn{Cl}}}}}{{A`{Abn}}}}{{Dd{Gh{{Cn{Cl}}}}{f{El}}}Ab}{cAb{{I`{}{{Cj{{f{Ob}}}}}}}}{cAb{{I`{}{{Cj{{f{Jj}}}}}}}}{cAb{{I`{}{{Cj{{f{Bh}}}}}}}}{cAb{{I`{}{{Cj{Bh}}}}}}{cAb{{I`{}{{Cj{{Ch{Bh}}}}}}}}{cAb{{I`{}{{Cj{{Ch{Nf}}}}}}}}{cAb{{I`{}{{Cj{{Ch{Kd}}}}}}}}{cAb{{I`{}{{Cj{Jj}}}}}}{cAb{{I`{}{{Cj{Kd}}}}}}{cAb{{I`{}{{Cj{Ej}}}}}}{cAb{{I`{}{{Cj{{Ch{Ej}}}}}}}}{cAb{{I`{}{{Cj{{f{Bd}}}}}}}}{cAb{{I`{}{{Cj{{Ch{{f{Bd}}}}}}}}}}{cAb{{I`{}{{Cj{{f{d}}}}}}}}{cAb{{I`{}{{Cj{{f{Kd}}}}}}}}{cAb{{I`{}{{Cj{d}}}}}}{cAb{{I`{}{{Cj{{Ch{d}}}}}}}}{cAb{{I`{}{{Cj{{f{Aj}}}}}}}}{cAb{{I`{}{{Cj{Aj}}}}}}{cAb{{I`{}{{Cj{{Ch{Aj}}}}}}}}{cAb{{I`{}{{Cj{{Ch{Nl}}}}}}}}{cAb{{I`{}{{Cj{{f{Kb}}}}}}}}{cAb{{I`{}{{Cj{Nf}}}}}}{cAb{{I`{}{{Cj{Nl}}}}}}{cAb{{I`{}{{Cj{{f{Nl}}}}}}}}{cAb{{I`{}{{Cj{{f{Nf}}}}}}}}{cAb{{I`{}{{Cj{Kb}}}}}}{cAb{{I`{}{{Cj{{Ch{O`}}}}}}}}{cAb{{I`{}{{Cj{O`}}}}}}{cAb{{I`{}{{Cj{{f{O`}}}}}}}}{cAb{{I`{}{{Cj{{Ch{Kb}}}}}}}}{cAb{{I`{}{{Cj{{f{H`}}}}}}}}{cAb{{I`{}{{Cj{{Ch{Ob}}}}}}}}{cAb{{I`{}{{Cj{{Ch{Jj}}}}}}}}{cAb{{I`{}{{Cj{Ob}}}}}}{cAb{{I`{}{{Cj{H`}}}}}}{cAb{{I`{}{{Cj{{Ch{H`}}}}}}}}{{Dd{Gh{O`}}}Ab}{{Dd{Gh{Ob}}}Ab}{{Dd{Gh{Bh}}}Ab}{{Dd{Gh{Od}}}Ab}{{Dd{Gh{H`}}}Ab}{{Dd{Gh{Aj}}}Ab}{{Dd{Gh{Jj}}}Ab}{{Dd{Gh{Kb}}}Ab}{{Dd{Gh{Kd}}}Ab}{{Dd{Gh{Nf}}}Ab}{{Dd{Gh{Nl}}}Ab}{{DdGb{f{El}}}Ab}{{{f{Ab}}GbGb}Ab}{{{f{BJl}}Gb}{{A`{Jhn}}}}{{{f{Ab}}}Gb}{{{f{Ab}}}Jl}{{{f{Ab}}}Ab}{{{f{BJl}}}{{Ch{{Nb{N`}}}}}}{{{f{BJl}}Gb}{{Ch{{f{Jn}}}}}}{{{f{BJl}}GbGb}{{Ch{{f{Jn}}}}}}{{{f{BJl}}Gb}Jh}{{{f{{AId{}{{Cj{c}}}}}}e}c{}{}}{{{f{Ab}}{f{Bd}}}{{A`{{l{Bl}}n}}}}{{{f{Ab}}c}{{A`{{l{Bl}}n}}}BAb}{{{f{Ab}}{f{Ab}}}{{A`{{l{Bl}}n}}}}31{{{f{Ab}}{f{Bd}}}}1{{{f{BJl}}}d}{{{f{M`}}{f{Dfc}}}bADl}{{{f{Ab}}{Ch{Gb}}}Ab}{{{f{Ab}}}{{A`{{f{{l{Nn}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Kj}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{L`}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Nj}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Fb}}}}n}}}}`{{{f{Ab}}}{{A`{{l{Ah}}n}}}}{{}Gb}000{{}c{}}000{{}Ff}{AbAAn}2{BFbAb}{AbAb}>{{{f{Ab}}}{{A`{{l{Bl}}n}}}}000{{{f{BJl}}}{{l{Bl}}}}0{{}d}0{{{f{Ab}}}M`}{{{f{Ab}}}DKd}{{{f{Ab}}}{{`{{D`{}{{Cj{Ab}}}}}}}}{{{f{BJl}}}Gb}{{{f{Ab}}}Gb}{{{f{BJl}}Gb}Ab}{{{f{Ab}}}{{A`{{f{{l{Ah}}}}n}}}}{AbBBd}{{{f{{AId{}{{Cj{c}}}}}}e}c{}{}}{{{f{Ab}}c}{{A`{{l{Bl}}n}}}BAb}{{{f{Ab}}{f{Bd}}}}{{{f{Ab}}{f{Ab}}}{{A`{{l{Bl}}n}}}}3120{{{f{Ab}}}{{A`{{Ch{c}}n}}}Mf}{{{f{BJl}}}{{A`{Mhn}}}}{{{f{BJl}}}{{Ch{Aj}}}}{{{f{Ab}}}Mh}1232{{{f{Ab}}{f{Ab}}}}{{{f{Ab}}c}{}{AnMf}}{{Abc}{}{AnMf}}{{AbAb}}{{{f{BJl}}}Gb}{{{f{Ab}}}Gb}{{{f{BJl}}}{{A`{Gbn}}}}{{{f{BJl}}}{{f{Dd}}}}{{Ddc}Ab{{Ih{{Bj{Ob}}}}}}{{Ddc}Ab{{Ih{{Bj{Od}}}}}}{{Ddc}Ab{{Ih{{Bj{{Eb{{Bj{Bh}}}}}}}}}}{{Ddc}Ab{{Ih{{Bj{Ej}}}}}}{{Ddc}Ab{{Ih{{Bj{{Gh{Bh}}}}}}}}{{Ddc}Ab{{Ih{{Bj{{Ch{Aj}}}}}}}}{{Dd{Oh{H`}}}Ab}{{Ddc}Ab{{Ih{{Bj{d}}}}}}{{Ddc}Ab{{Ih{{Bj{Bh}}}}}}{{Ddc}Ab{{Ih{{Bj{{Ch{AMh}}}}}}}}{{Dd{Oh{Ob}}}Ab}{{Ddc}Ab{{Ih{{Bj{Nf}}}}}}{{Dd{Oh{Kd}}}Ab}{{Ddc}Ab{{Ih{{Bj{Jj}}}}}}{{Ddc}Ab{{Ih{{Bj{Kd}}}}}}{{Ddc}Ab{{Ih{{Bj{Nl}}}}}}{{Dd{Oh{Jj}}}Ab}{{Ddc}Ab{{Ih{{Bj{Ab}}}}}}{{Ddc}Ab{{Ih{{Bj{{Ch{Ab}}}}}}}}{{Ddc}Ab{{Ih{{Bj{{Ch{{Eb{Bd}}}}}}}}}}{{Ddc}Ab{{Ih{{Bj{AMh}}}}}}{{Ddc}Ab{{Ih{{Bj{{f{Bd}}}}}}}}{{Ddc}AbBFb}{{Ddc}Ab{{Ih{{Bj{Jh}}}}}}{{Ddc}Ab{{Ih{{Bj{{Ch{Kb}}}}}}}}{{Ddc}Ab{{Ih{{Bj{{Ch{BAj}}}}}}}}{{Dd{f{Ab}}}Ab}{{Ddc}Ab{{Ih{{Bj{BAj}}}}}}{{Ddc}Ab{{Ih{{Bj{{Ch{{f{Bd}}}}}}}}}}{{Ddc}Ab{{Ih{{Bj{O`}}}}}}{{Ddc}Ab{{Ih{{Bj{{Ch{Od}}}}}}}}{{Ddc}Ab{{Ih{{Bj{{Ch{{Eb{{Bj{Bh}}}}}}}}}}}}{{Ddc}Ab{{Ih{{Bj{{Ch{H`}}}}}}}}{{Ddc}Ab{{Ih{{Bj{{Ch{Ob}}}}}}}}{{Ddc}Ab{{Ih{{Bj{{Ch{O`}}}}}}}}{{Ddc}Ab{{Ih{{Bj{{Ch{Nl}}}}}}}}{{Ddc}Ab{{Ih{{Bj{{Ch{Kd}}}}}}}}{{Ddc}Ab{{Ih{{Bj{{f{{Bj{Bh}}}}}}}}}}{{Ddc}Ab{{Ih{{Bj{{Eb{Bd}}}}}}}}{{Ddc}Ab{{Ih{{Bj{{Ch{AMd}}}}}}}}{{Ddc}Ab{{Ih{{Bj{{Ch{Nf}}}}}}}}{{Ddc}Ab{{Ih{{Bj{{Ch{Bh}}}}}}}}{{Ddc}Ab{{Ih{{Bj{{Ch{d}}}}}}}}{{Ddc}Ab{{Ih{{Bj{{Ch{{Gh{Bh}}}}}}}}}}{{Ddc}Ab{{Ih{{Bj{{Ch{Ej}}}}}}}}{{Ddc}Ab{{Ih{{Bj{AMd}}}}}}{{Ddc}Ab{{Ih{{Bj{{Ch{{f{{Bj{Bh}}}}}}}}}}}}{{Ddc}Ab{{Ih{{Bj{{Ch{BAl}}}}}}}}{{Ddc}Ab{{Ih{{Bj{Aj}}}}}}{{Ddc}Ab{{Ih{{Bj{Kb}}}}}}{{Ddc}Ab{{Ih{{Bj{BAl}}}}}}{{Ddc}Ab{{Ih{{Bj{H`}}}}}}{{Ddc}Ab{{Ih{{Bj{{Ch{Jj}}}}}}}}{{Dd{f{El}}}Ab}{{{f{BJl}}GbGb}Ab}{{DdGb}Ab}{{{f{DfDKd}}}Ch}{{{f{{AId{}{{Cj{c}}}}}}e}c{}{}}{{{f{Ab}}{f{Bd}}}{{A`{{l{Bl}}n}}}}{{{f{Ab}}{f{Ab}}}{{A`{{l{Bl}}n}}}}{{{f{Ab}}c}{{A`{{l{Bl}}n}}}BAb}31{{{f{Ab}}c}{}BAb}{{{f{Ab}}{f{Bd}}}}{{{f{Ab}}}{{A`{{f{ADh}}n}}}}{{{f{BJl}}}Gb}`{{{f{Ab}}}{{Cn{Jb}}}}{{{f{Ab}}}{{A`{Mhn}}}}{{{f{BJl}}AjA@`}{{A`{Mhn}}}}{{{f{BJl}}}Ab}{{Abc}{}{AnMf}}{{{f{Ab}}{f{Ab}}}}{{{f{Ab}}c}{}{AnMf}}{{{f{DfBJl}}Dd}b}{{{f{DfAb}}Dd}{{f{DfAb}}}}{{{f{Ab}}{f{{Bj{H`}}}}}{{A`{Abn}}}}06{M`M`}{{{f{BJl}}{f{Dn}}A@b}{{A`{Abn}}}}{{{f{Ab}}Ajdd{Ch{Kd}}}{{A`{Abn}}}}{{{f{Ab}}Gbdd{Ch{Kd}}}{{A`{Abn}}}}{{{f{Ab}}Gb}Ab}{{{f{DfAb}}M`}b}{{{f{BJl}}H`}Ab}{{{f{DfBJl}}}b}{{{f{DfAb}}}b}{{{f{Ab}}{Ch{Kd}}}Ab}{{{f{DKd}}}{{Hd{Gb{Ch{Gb}}}}}}{{{f{BJl}}H`Gb}Ab}{{{f{Ab}}H`Gb}Ab}{{{f{Ab}}F`}{{A`{Abn}}}}{{{f{BJl}}F`}{{A`{Abn}}}}{{{f{BJl}}H`}{{Hd{AbAb}}}}{{{f{Ab}}H`}{{Hd{AbAb}}}}{{{f{BJl}}Bh}{{Ch{Aj}}}}{{{f{BJl}}Bh}{{A`{Mhn}}}}{{{f{Ab}}}{{A`{{f{{l{Bb}}}}n}}}}{{{f{Ab}}Gb}{{A`{{Eb{Bd}}n}}}}{{{f{Ab}}{f{El}}}{{A`{Abn}}}}{{{f{Ab}}}{{A`{{f{{l{j}}}}n}}}}{{AbAb}}{{{f{Ab}}{f{Ab}}}}{{{f{Ab}}c}{}{AnMf}}{{Abc}{}{AnMf}}{{{f{Ab}}}{{A`{cn}}}Mf}{{{f{BJl}}}{{A`{Mhn}}}}{{{f{Ab}}}{{A`{Mhn}}}}{{{f{Ab}}{Ch{Gb}}}Ab}{{{f{BJl}}{f{{l{Fb}}}}}{{A`{Abn}}}}{{{f{Ab}}{f{{Bj{A@h}}}}M`}Ab}{{{f{Ab}}{f{{Bj{A@h}}}}}Ab}{{{f{BJl}}{f{{Bj{Jj}}}}}{{A`{Abn}}}}{{{f{BJl}}{f{{Bj{Jj}}}}}Ab}{{{f{BJl}}{f{{l{Fb}}}}}Ab}{{{f{Ab}}{f{{Bj{Jj}}}}}Ab}{{{f{Ab}}}{{A`{{f{{Kn{LlL`}}}}n}}}}{{{f{Ab}}GbB@`}{{Cn{Cl}}}}{{{f{Ab}}{Ch{{f{Bd}}}}d}{{A`{AAnn}}}}{{{f{Ab}}}{{A`{Abn}}}}{fc{}}0{{{f{Ab}}}{{Eb{Ab}}}}{fEj}{{AbAb}{{A`{Abn}}}}{c{{A`{e}}}{}{}}00{{{Hd{{f{BAd}}{Gh{{Cn{Cl}}}}}}}{{A`{Abn}}}}{{{Hd{Dd{Gh{{Cn{Cl}}}}}}}{{A`{Abn}}}}{{{Hd{Dd{Cn{Cl}}}}}{{A`{Abn}}}}3{{{Hd{{f{BAd}}{Cn{Cl}}}}}{{A`{Abn}}}}{{}{{A`{c}}}{}}0006{{Ddc}{{A`{Ab}}}{}}{{{f{DfAb}}{Kf{c}}}dDl}8{f{{A`{GjBBj}}}}{fAAl}000{{{f{Ab}}}{{A`{{f{{l{Nd}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Fb}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Nh}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Of}}}}n}}}}{{{f{BJl}}}{{A`{Abn}}}}{{{f{Ab}}}{{A`{Abn}}}}{{{f{BJl}}}{{A`{{f{{l{c}}}}n}}}Dl}{{{f{BJl}}Bh}{{Ch{Aj}}}}{{{f{BJl}}Bh}{{A`{Mhn}}}}{{}c{}}000{{AbDd}Ab}{{{f{Ab}}c}Ab{AnMf}}{{{f{Ab}}{f{{l{Bl}}}}{f{Ab}}}{{A`{Abn}}}}``{{fh}b}{{{f{Ed}}}{{f{Ab}}}}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{Ed}}}Ed}{{f{f{Dfc}}}b{}}{fb}{{{f{Ed}}}Ab}{Gb{{f{c}}}{}}{Gb{{f{Dfc}}}{}}{Gbb}{cc{}}{{}Gb}{{}c{}}{{{DKf{Ab}}}Ed}{{{f{DfEd}}{f{Df{Cn{Cl}}}}}b}{fc{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAl}6{{{f{DfEd}}{f{Df{Cn{Cl}}}}e}c{}{{Dn{{f{Ed}}}{{Ad{c}}}}}}````{{{f{Ab}}{f{Ab}}c}{{A`{Abn}}}{{Af{{f{Ab}}{f{Ab}}}{{Ad{{A`{Abn}}}}}}}}{{{BKh{}{{Ad{c}}}}{f{Ab}}}c{}}{{{f{BKl}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{Bn}}}}{f{Ab}}}{{A`{Abn}}}}`210210210210``{{{f{CB`}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{Fn}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{CB`}}c}{{A`{Abn}}}B`}{{{f{{l{Fn}}}}c}{{A`{Abn}}}B`}```{{fh}b}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{CLj}}}CLj}{{f{f{Dfc}}}b{}}{fb}{{}CLj}{Gb{{f{c}}}{}}{Gb{{f{Dfc}}}{}}{Gbb}{{{f{CLj}}{f{CLj}}}d}{{f{f{c}}}d{}}00{{{f{CLj}}{f{DfHj}}}{{A`{bHl}}}}{cc{}}{{{f{CLj}}{f{Dfc}}}bADl}{{}Gb}{{}c{}}{fc{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAl}4","D":"AELbB@d","p":[[1,"unit"],[1,"bool"],[1,"reference"],[5,"Private",11655],[5,"StructType",1998,11656],[5,"ChunkedArray",17,11657],[6,"PolarsError",3499,11658],[6,"Result",11659],[5,"Series",11138,11660],[17,"Output"],[10,"FnMut",11661],[5,"ListType",1998,11656],[1,"f64"],[10,"PolarsNumericType",1998,11656],[10,"Num",11662],[10,"ToPrimitive",11663],[5,"StringType",1998,11656],[1,"str"],[5,"BinaryType",1998,11656],[1,"u8"],[1,"slice"],[5,"BooleanType",1998,11656],[10,"NumOpsDispatchInner",11601,11664],[6,"GroupsProxy",4115,11665],[5,"FixedSizeListType",1998,11656],[5,"ObjectType",1998,11656],[10,"PolarsObject",1553,11666],[6,"Option",11667],[17,"Item"],[10,"Array",11668],[5,"Box",11669],[10,"Iterator",11670],[5,"AmortizedListIter",11671],[5,"PlSmallStr",1998,11672],[0,"mut"],[17,"IsNested"],[5,"FalseT",1998,11656],[10,"PolarsDataType",1998,11656],[10,"Fn",11661],[10,"Copy",11673],[6,"Cow",11674],[5,"AmortSeries",11577,11675],[5,"Float64Type",1998,11656],[5,"Float32Type",1998,11656],[5,"String",11676],[6,"DataType",1998,11677],[5,"View",11678],[5,"SortOptions",1681,11679],[5,"UInt32Type",1998,11656],[5,"BinaryOffsetType",1998,11656],[6,"Column",3871,11680],[5,"SortMultipleOptions",1681,11679],[10,"PolarsIntegerType",1998,11656],[6,"CastOptions",1164,11681],[10,"NumOpsDispatchCheckedInner",11622,11682],[5,"Iter",11683],[1,"usize"],[1,"fn"],[5,"Map",11684],[5,"Vec",11685],[5,"CompactString",11686],[5,"MetadataProperties",1270,11687],[10,"DoubleEndedIterator",11688],[1,"i64"],[5,"OffsetsBuffer",11689],[1,"tuple"],[17,"HasViews"],[17,"IsObject"],[5,"Formatter",11690],[5,"Error",11690],[17,"Array"],[10,"IntoIterator",11691],[5,"Bitmap",11692],[10,"Borrow",11693],[10,"PolarsAsRef",11694],[10,"AsRef",11695],[10,"IntoParallelIterator",11696],[10,"Send",11673],[10,"Sync",11673],[10,"NoOption",11697],[10,"ExactSizeIterator",11698],[10,"Clone",11699],[10,"TrustedLen",11700],[6,"AnyValue",1998,11701],[1,"u32"],[5,"MetadataFlags",1270,11687],[10,"PolarsObjectSafe",1553,11666],[5,"BinaryArray",11702],[1,"f32"],[1,"u64"],[5,"Metadata",1270,11687],[5,"RwLockWriteGuard",11703],[5,"Int32Type",1998,11656],[5,"DateType",1998,11656],[5,"Logical",1998,11704],[5,"Int64Type",1998,11656],[6,"TimeUnit",1998,11705],[5,"DatetimeType",1998,11656],[5,"Int128Type",1998,11656],[5,"DecimalType",1998,11656],[5,"DurationType",1998,11656],[5,"TimeType",1998,11656],[10,"PolarsFloatType",1998,11656],[6,"IsSorted",11138,11706],[10,"PolarsIterator",1213,11707],[6,"ChunkedArrayLayout",17,11657],[10,"NumCast",11663],[5,"Scalar",4485,11708],[6,"MetadataReadGuard",1270,11709],[5,"IMMetadata",1270,11710],[5,"Arc",4485,11711],[10,"MetadataTrait",1270,11712],[5,"RwLockReadGuard",11703],[5,"UInt16Type",1998,11656],[1,"u16"],[5,"UInt64Type",1998,11656],[5,"Int8Type",1998,11656],[1,"i8"],[5,"Int16Type",1998,11656],[1,"i16"],[1,"i32"],[1,"i128"],[5,"UInt8Type",1998,11656],[5,"Range",11713],[5,"Field",1998,11714],[10,"ParallelIterator",11696],[10,"IndexedParallelIterator",11696],[6,"QuantileInterpolOptions",4485,11715],[5,"RollingOptionsFixedWindow",4485,11716],[10,"PolarsOpsNumericType",11717],[10,"Sized",11673],[5,"ChunkId",4485,11718],[17,"IsStruct"],[5,"RandomState",11719],[5,"BytesHash",11720],[5,"ViewRepr",11721],[1,"array"],[5,"Dim",11722],[5,"ArrayBase",11721],[5,"OwnedRepr",11723],[6,"Either",11724],[5,"TypeId",11725],[5,"DataFrame",3598,11726],[5,"NullableIdxSize",4485,11718],[10,"FnOnce",11661],[17,"Scalar"],[17,"Out"],[17,"TrueDivOut"],[10,"ArithmeticChunked",858,11727],[5,"AnonymousListBuilder",886,11728],[5,"AnonymousOwnedListBuilder",886,11728],[5,"ListBooleanChunkedBuilder",886,11729],[5,"ListPrimitiveChunkedBuilder",886,11730],[10,"ListBuilderTrait",886,11731],[10,"ChunkedBuilder",886,11732],[5,"ListStringChunkedBuilder",886,11733],[5,"ListBinaryChunkedBuilder",886,11733],[5,"ListNullChunkedBuilder",886,11734],[5,"BinViewChunkedBuilder",886,11735],[10,"ViewType",11736],[5,"BooleanChunkedBuilder",886,11737],[5,"NullChunkedBuilder",886,11738],[5,"PrimitiveChunkedBuilder",886,11739],[5,"NullChunked",11740],[10,"NewChunkedArray",886,11732],[10,"Hasher",11741],[10,"ChunkedCollectInferIterExt",1193,11742],[10,"ChunkedCollectIterExt",1193,11742],[10,"Canonical",1207,11743],[10,"ChunkedCollectParIterExt",1209,11744],[10,"FromParIterWithDtype",1209,11744],[5,"BooleanArray",11745],[5,"BoolIterNoNull",1213,11707],[5,"FixedSizeListArray",11746],[5,"FixedSizeListIterNoNull",1213,11707],[5,"SomeIterator",1213,11707],[5,"MetadataEnv",1270,11747],[10,"MetadataCollectable",1270,11748],[5,"Iter",11749],[5,"IterNames",11749],[5,"File",11750],[5,"Mutex",11751],[6,"MetadataMerge",1270,11687],[5,"RwLock",11703],[5,"ObjectArray",1553,11666],[6,"ArrowDataType",1998,11752],[10,"Any",11725],[10,"Debug",11690],[5,"BitmapIter",11753],[6,"ZipValidity",11754],[5,"ObjectChunkedBuilder",1630,11755],[10,"AnonymousObjectBuilder",1653,11756],[5,"ObjectRegistry",1653,11756],[10,"ChunkAgg",1681,11757],[17,"FuncRet"],[10,"ChunkApply",1681,11757],[10,"ChunkApplyKernel",1681,11757],[10,"ChunkSort",1681,11757],[10,"ChunkUnique",1681,11757],[10,"ChunkCast",1681,11757],[6,"FillNullStrategy",1681,11757],[10,"ChunkCompare",11138,11757],[10,"ChunkExplode",1681,11757],[10,"ChunkFillNullValue",1681,11757],[10,"ChunkFilter",1681,11757],[10,"ChunkFull",1681,11757],[10,"ChunkFullNull",1681,11757],[10,"ChunkAnyValue",1681,11757],[10,"IsFirstDistinct",1681,11757],[10,"IsLastDistinct",1681,11757],[10,"ChunkQuantile",1681,11757],[10,"ChunkExpandAtIndex",1681,11757],[10,"Reinterpret",1681,11757],[10,"ChunkReverse",1681,11757],[10,"ChunkRollApply",1681,11757],[10,"ChunkSet",1681,11757],[10,"ChunkShift",1681,11757],[10,"ChunkShiftFill",1681,11757],[10,"SlicedArray",1681,11758],[10,"ChunkVar",1681,11757],[10,"ChunkTake",1681,11757],[10,"ChunkTakeUnchecked",1681,11757],[10,"ChunkBytes",1681,11757],[10,"ChunkZip",1681,11757],[10,"BinaryFnMut",1887,11759],[10,"StaticArray",1998,11760],[10,"TernaryFnMut",1887,11759],[10,"Error",11761],[10,"UnaryFnMut",1887,11759],[5,"PrimitiveArray",11762],[6,"SearchSortedSide",1928,11763],[5,"NoNull",4485,11764],[5,"RowsEncoded",11765],[5,"NaiveDateTime",11766],[6,"Tz",11767],[5,"NaiveTime",11768],[5,"CategoricalChunked",1998,11769],[5,"CategoricalChunkedBuilder",1998,11770],[10,"ArrayFromIter",1998,11771],[10,"ArrayFromIterDtype",1998,11771],[5,"OsStr",11772],[5,"Path",11773],[10,"AsRefDataType",1998,11677],[17,"ValueT"],[17,"ZeroableValueT"],[17,"ValueIterT"],[10,"Zeroable",11774],[10,"From",11695],[5,"BinaryViewArrayGeneric",11736],[6,"RevMapping",1998,11775],[10,"CategoricalMergeOperation",1998,11776],[10,"LogicalType",1998,11704],[6,"CategoricalOrdering",1998,11775],[5,"OwnedObject",1998,11701],[6,"UnknownKind",1998,11677],[5,"CompatLevel",1998,11677],[5,"CategoricalType",1998,11656],[6,"ArrowTimeUnit",1998],[6,"Ordering",11777],[10,"ArrayCollectIterExt",1998,11771],[5,"GlobalRevMapMerger",1998,11776],[1,"char"],[10,"FromIterator",11691],[10,"Into",11695],[10,"NumericNative",1998,11656],[5,"ArrowField",4485],[6,"IntegerType",11778],[6,"PrimitiveType",11779],[5,"TimeDelta",11780],[5,"NaiveDate",11781],[10,"GetAnyValue",1998,11701],[10,"IntoScalar",1998,11782],[5,"CatIter",1998,11769],[6,"Expr",4485,11783],[1,"u128"],[6,"PhysicalType",11778],[6,"ToCompactStringError",11686],[5,"Arguments",11690],[5,"StringCacheHolder",3478,11784],[5,"ErrString",3499,11658],[6,"PolarsWarning",3499,11785],[5,"Error",11786],[6,"Error",11787],[5,"Error",11788],[5,"TryReserveError",11789],[6,"ParquetError",11790],[5,"Utf8Error",11791],[10,"Display",11690],[5,"Schema",11792],[10,"IntoColumn",3871,11680],[6,"NullStrategy",3598,11726],[6,"UniqueKeepStrategy",3598,11726],[5,"HashSet",11793],[5,"Row",4373,11794],[5,"GroupBy",4115,11795],[5,"DynamicGroupOptions",4485,11796],[5,"RangeToInclusive",11713],[5,"RangeInclusive",11713],[5,"RangeFull",11713],[5,"RangeFrom",11713],[5,"RangeTo",11713],[5,"RecordBatchIter",3598,11726],[5,"PhysRecordBatchIter",3598,11726],[5,"LazyFrame",4485,11797],[10,"IntoSeries",11138,11798],[5,"RollingGroupOptions",4485,11796],[10,"RangeBounds",11713],[10,"IntoVec",4485,11764],[6,"IndexOrder",4485,11799],[5,"RecordBatchT",11800],[5,"StructArray",4485,11801],[5,"Duration",4485,11802],[5,"ScalarColumn",3871,11680],[6,"BitRepr",11138,11706],[5,"UnpivotArgsIR",4086,11803],[5,"GroupsIdx",4115,11665],[5,"UnitVec",11804],[6,"GroupByMethod",4115,11795],[5,"SlicedGroups",4115,11665],[5,"GroupsProxyParIter",4115,11665],[10,"UnindexedConsumer",11805],[6,"GroupsIndicator",4115,11665],[6,"IRAggExpr",11806],[10,"IntoGroupsProxy",4115,11807],[5,"Copied",11808],[5,"Zip",11809],[5,"GroupsProxyIter",4115,11665],[10,"IsFloat",11810],[10,"NativeType",11811],[10,"AggList",4357,11812],[10,"TakeExtremum",4357,11813],[10,"PhysicalAggExpr",4370,11814],[6,"AnyValueBuffer",4373,11815],[6,"AnyValueBufferTrusted",4373,11815],[5,"Node",11816],[6,"IR",11817],[5,"Arena",11816],[6,"AExpr",11806],[10,"JoinDispatch",4485,11818],[5,"JoinArgs",4485,11819],[5,"StructNameSpace",4485,11820],[10,"SeriesTrait",11138,11706],[10,"DfTake",4485,11821],[10,"DataFrameOps",4485,11822],[5,"CsvReader",4485,11823],[10,"PhysicalIoExpr",11824],[10,"MmapBytesReader",11825],[10,"LhsNumOps",11601,11664],[6,"Selector",4485,11826],[10,"NumOpsDispatch",11601,11664],[5,"LazyGroupBy",4485,11797],[5,"OptFlags",4485,11827],[10,"Allocator",11828],[5,"JoinBuilder",4485,11797],[10,"AnonymousScan",4485,11829],[5,"ScanArgsAnonymous",4485,11830],[10,"FunctionOutputField",4485,11831],[5,"SpecialEq",4485,11831],[6,"VisitRecursion",11832],[6,"FunctionExpr",4485,11833],[10,"ArgAgg",4485,11834],[5,"ArrayNameSpace",4485,11835],[5,"ListNameSpace",4485,11836],[5,"FieldsMapper",4485,11837],[5,"IpcStreamReader",4485,11838],[10,"Read",11839],[10,"ColumnsUdf",4485,11831],[10,"AsBinary",4485,11840],[10,"StringMethods",10061,11841],[5,"BorrowedFd",11842],[10,"AsFd",11842],[10,"AsList",4485,11843],[10,"AsRawFd",11844],[6,"AggExpr",4485,11783],[10,"SeriesSealed",4485,11845],[10,"AsString",4485,11846],[20,"MaybeUninit",11847],[10,"StringNameSpaceImpl",4485,11848],[5,"OwnedBatchedCsvReader",4485,11849],[5,"CsvWriter",4485,11850],[5,"BatchedWriter",11850],[10,"Write",11839],[5,"IpcWriter",4485,11851],[5,"BatchedWriter",11851],[5,"ParquetReader",4485,11852],[5,"BatchedParquetReader",4485,11853],[5,"ParquetWriter",4485,11854],[5,"BatchedWriter",11855],[5,"BatchedCsvReader",4485,11849],[5,"BinaryNameSpace",9966,11856],[6,"Operator",4485,11783],[10,"RenameAliasFn",4485,11831],[5,"UserDefinedFunction",4485,11857],[10,"ColumnBinaryUdf",4485,11831],[5,"InProcessQuery",4485,11858],[5,"HashMap",11859],[5,"CategoricalNameSpace",4485,11860],[10,"RoundSeries",4485,11861],[10,"TemporalMethods",11023,11862],[10,"NumOpsDispatchChecked",11622,11682],[5,"LazyCsvReader",4485,11863],[5,"ScanArgsIpc",4485,11864],[5,"LazyJsonLineReader",4485,11865],[5,"ScanArgsParquet",4485,11866],[5,"RollingOptionsDynamicWindow",4485,11867],[5,"Bounds",4485,11868],[6,"ClosedWindow",4485,11869],[6,"Label",4485,11869],[6,"StartBy",4485,11869],[5,"Window",4485,11870],[5,"CsvReadOptions",4485,11871],[5,"CsvParseOptions",4485,11871],[6,"CsvEncoding",4485,11871],[6,"CommentPrefix",4485,11871],[6,"NullValues",4485,11871],[5,"CsvWriterOptions",4485,11872],[6,"JoinCoalesce",4485,11819],[5,"SerializeOptions",4485,11872],[6,"JoinType",4485,11819],[6,"QuoteStyle",4485,11872],[6,"JoinValidation",4485,11819],[5,"IpcScanOptions",4485,11873],[5,"IpcWriterOptions",4485,11851],[5,"AsOfOptions",4485,11874],[6,"IpcCompression",4485,11851],[6,"AsofStrategy",4485,11874],[5,"JsonWriterOptions",4485,11875],[6,"InterpolationMethod",4485,11876],[6,"ClosedInterval",4485,11877],[5,"ParquetOptions",4485,11878],[6,"RankMethod",4485,11879],[6,"ParallelStrategy",4485,11878],[5,"RankOptions",4485,11879],[5,"ParquetWriteOptions",4485,11880],[6,"ParquetCompression",4485,11880],[5,"GzipLevel",4485,11880],[5,"BrotliLevel",4485,11880],[5,"ZstdLevel",4485,11880],[6,"DslPlan",4485,11881],[5,"When",4485,11882],[5,"Then",4485,11882],[5,"ChainedWhen",4485,11882],[5,"ChainedThen",4485,11882],[6,"Excluded",4485,11783],[6,"BooleanFunction",4485,11883],[6,"CategoricalFunction",4485,11884],[6,"TemporalFunction",4485,11885],[6,"PowFunction",4485,11886],[6,"StringFunction",4485,11887],[6,"StructFunction",4485,11888],[5,"StatisticsOptions",4485,11889],[5,"DatetimeArgs",4485,11890],[5,"DurationArgs",4485,11890],[5,"RollingCovOptions",4485,11891],[5,"StrptimeOptions",4485,11891],[5,"JoinOptions",4485,11891],[6,"WindowType",4485,11891],[6,"WindowMapping",4485,11891],[6,"NestedType",4485,11891],[5,"UnpivotArgsDSL",4485,11891],[5,"FileMetadata",4485,11892],[6,"LiteralValue",4485,11893],[5,"AnonymousScanOptions",4485,11894],[5,"UnionArgs",4485,11894],[5,"RollingVarParams",4485,11895],[5,"RollingQuantileParams",4485,11895],[6,"NonExistent",4485,11896],[10,"LazyFileListReader",4485,11897],[5,"CloudOptions",10197,11898],[10,"Ord",11777],[6,"ColumnOrder",11899],[10,"BinaryNameSpaceImpl",4485,11900],[5,"JsonLineReader",4485,11901],[10,"CrossJoin",4485,11902],[10,"ExprEvalExtension",4485,11903],[10,"DateMethods",10061,11904],[10,"DatetimeMethods",10061,11905],[10,"DurationMethods",10061,11906],[5,"IpcStreamWriterOption",4485,11838],[10,"BinaryUdfOutputField",4485,11831],[5,"CStr",11907],[10,"Default",11908],[5,"ParquetStatistics",4485],[5,"ColumnChunkMetadata",11909],[6,"NullBehavior",11628,11910],[5,"Weak",11711],[5,"DateLikeNameSpace",10586,11911],[10,"SeriesMethods",4485,11912],[10,"PartialEq",11777],[10,"Scalar",11913],[10,"ListNameSpaceExtension",4485,11914],[10,"Command",11915],[5,"PathBuf",11773],[10,"SerReader",4485,11916],[10,"SerWriter",4485,11916],[5,"IpcReader",4485,11873],[5,"IpcStreamWriter",4485,11838],[5,"JsonWriter",4485,11875],[5,"JsonReader",4485,11875],[10,"UdfSchema",4485,11917],[6,"ListFunction",11918],[6,"BinaryFunction",11919],[6,"ArrayFunction",11920],[6,"RangeFunction",11921],[5,"MutableStatistics",11922],[5,"OsString",11772],[1,"never"],[5,"CString",11923],[10,"ToOwned",11674],[5,"GrowableStruct",11924],[5,"MutableStructArray",11925],[10,"SchemaExt",4485,11926],[10,"FromData",10580,11927],[5,"Buffer",11928],[10,"FromDataUtf8",10580,11927],[10,"FromDataBinary",10580,11927],[5,"ListArray",11929],[6,"Ambiguous",4485,11896],[10,"NamedFromOwned",4485,11930],[10,"DataFrameJoinOps",4485,11931],[5,"FunctionOptions",11894],[10,"PartialOrd",11777],[6,"Context",11881],[5,"BoundsIter",4485,11870],[6,"ReaderBytes",11825],[10,"PolarsTemporalGroupby",4485,11796],[10,"Hash",11741],[10,"SeriesJoin",4485,11932],[10,"TimeMethods",10061,11933],[5,"NonZero",11934],[10,"IntoListNameSpace",4485,11914],[5,"StructValueIter",11935],[17,"DataType"],[10,"SchemaNamesAndDtypes",4485,11926],[10,"AsofJoinBy",4485,11936],[10,"ListNameSpaceImpl",4485,11937],[5,"ExprNameNameSpace",4485,11938],[5,"KeyValue",11939],[10,"IntoLazy",4485,11797],[10,"Literal",4485,11893],[5,"Null",4485,11893],[10,"CloneToUninit",11699],[5,"SuperTypeOptions",11940],[5,"RowIndex",11941],[10,"ChunkAggSeries",4485,11942],[10,"QuantileAggSeries",4485,11943],[10,"IndexToUsize",4485,11944],[10,"NamedFrom",4485,11930],[6,"RowGroupFetcher",11853],[6,"ScanSources",11945],[5,"SplitNChars",4485,11946],[5,"AnonymousScanArgs",4485,11829],[5,"Pin",11947],[5,"Request",11761],[10,"SeriesRank",4485,11879],[5,"BorrowedCursor",11948],[10,"VarInt",11949],[5,"IoSliceMut",11839],[10,"SeriesOpsTime",10061,11950],[10,"PolarsRound",4485,11951],[10,"ChunkedSet",4485,11717],[5,"SchemaDescriptor",11952],[6,"SeekFrom",11839],[10,"VarAggSeries",4485,11953],[5,"StringNameSpace",11954],[10,"TakeChunked",4485,11821],[5,"IRPlan",11817],[10,"ToDummies",4485,11955],[10,"PolarsTruncate",4485,11956],[5,"FileMetaData",11939],[5,"AllocError",11828],[5,"SchemaInferenceResult",10990,11957],[10,"PolarsUpsample",4485,11958],[10,"VecHash",4485,11959],[6,"JsonFormat",4485,11875],[5,"BTreeMap",11960],[10,"WriteDataFrameToFile",11916],[5,"IoSlice",11839],[6,"PrefilterMaskSetting",9877,11853],[5,"RowGroupMetadata",11961],[5,"MemSlice",11962],[6,"Filter",11963],[10,"ArrayNameSpace",9947,11964],[10,"AsArray",9947,11965],[6,"Buffer",9983,11966],[10,"AsString",10127,11841],[6,"Pattern",10127,11967],[5,"DatetimeInfer",10166,11968],[10,"StrpTimeParser",10166,11968],[17,"Error"],[10,"TryFromWithUnit",10166,11968],[6,"CloudType",10197,11898],[6,"SupportedCompression",10256,11969],[5,"AnonymousBuilder",10641,11970],[6,"RollingFunction",10883,11971],[6,"RollingFunctionBy",10914,11972],[5,"MutableNullArray",10959,11973],[5,"MutableBitmap",11974],[10,"AsSeries",11023,11862],[5,"Utf8Array",11975],[5,"_SerdeSeries",11680],[5,"SeriesIter",11138,11976],[5,"Rc",11977],[8,"FillNullLimit",1681],[10,"InitHashMaps",1998],[10,"InitHashMaps2",1998],[5,"TrueT",1998],[8,"PolarsResult",3499],[15,"IO",9857],[15,"Context",9857],[15,"Count",9851],[15,"Slice",9852],[8,"ChunkJoinOptIds",4485],[8,"DynArgs",4485],[10,"ListFromIter",4485],[15,"Quantile",9734],[15,"Min",9734],[15,"Max",9734],[15,"IsBetween",10836],[15,"Any",10836],[15,"All",10836],[15,"GroupBy",9744],[15,"Union",9744],[15,"Sort",9744],[15,"ExtContext",9744],[15,"DataFrameScan",9744],[15,"IR",9744],[15,"Select",9744],[15,"HStack",9744],[15,"Scan",9744],[15,"MapFunction",9744],[15,"Cache",9744],[15,"Filter",9744],[15,"Distinct",9744],[15,"Slice",9744],[15,"Sink",9744],[15,"Join",9744],[15,"HConcat",9744],[15,"SortBy",9794],[15,"Filter",9794],[15,"Cast",9794],[15,"Sort",9794],[15,"Gather",9794],[15,"RenameAlias",9794],[15,"Ternary",9794],[15,"Function",9794],[15,"Window",9794],[15,"AnonymousFunction",9794],[15,"Slice",9794],[15,"BinaryExpr",9794],[15,"Round",10839],[15,"RoundSF",10839],[15,"Clip",10839],[15,"BackwardFill",10839],[15,"ForwardFill",10839],[15,"Random",10839],[15,"GatherEvery",10839],[15,"ValueCounts",10839],[15,"Rank",10839],[15,"ReplaceStrict",10839],[15,"CumCount",10839],[15,"CumSum",10839],[15,"CumProd",10839],[15,"CumMin",10839],[15,"CumMax",10839],[15,"Range",9854],[15,"ConcatHorizontal",10861],[15,"ConcatVertical",10861],[15,"ExtractGroups",10861],[15,"SplitExact",10861],[15,"Contains",10861],[15,"Find",10861],[15,"Replace",10861],[15,"DatetimeFunction",10875],[5,"Utf8Field",9983],[5,"CategoricalField",9983],[5,"DatetimeField",9983],[15,"Datetime",10057],[10,"Utf8FromIter",11134],[10,"BinaryFromIter",11134]],"r":[[1,11978],[2,11978],[3,11978],[4,11978],[6,11784],[7,11978],[8,11978],[9,11978],[13,11978],[14,11978],[16,11784],[17,11657],[18,11657],[19,11657],[24,11979],[116,11657],[139,11657],[140,11657],[168,11657],[170,11657],[225,11657],[278,11657],[428,11657],[478,11657],[583,11657],[586,11657],[727,11657],[858,11727],[886,11728],[887,11728],[888,11735],[889,11735],[890,11737],[891,11732],[892,11733],[893,11729],[894,11731],[895,11734],[896,11730],[897,11733],[898,11732],[899,11738],[900,11739],[901,11735],[1038,11732],[1054,11731],[1082,11732],[1147,11728],[1148,11728],[1149,11733],[1150,11729],[1151,11731],[1152,11734],[1153,11730],[1154,11733],[1162,11731],[1164,11681],[1193,11742],[1194,11742],[1207,11743],[1209,11744],[1210,11744],[1213,11707],[1214,11707],[1215,11707],[1216,11707],[1252,11707],[1268,11980],[1269,11980],[1275,11710],[1280,11687],[1281,11748],[1282,11747],[1283,11687],[1284,11687],[1285,11687],[1286,11709],[1287,11712],[1553,11666],[1554,11666],[1555,11666],[1556,11666],[1568,11666],[1599,11666],[1600,11981],[1630,11755],[1653,11756],[1654,11756],[1655,11756],[1656,11756],[1668,11756],[1669,11756],[1670,11756],[1673,11756],[1675,11756],[1682,11757],[1683,11757],[1684,11757],[1685,11757],[1686,11757],[1687,11757],[1688,11757],[1689,11757],[1690,11757],[1691,11757],[1692,11757],[1693,11757],[1694,11757],[1695,11757],[1696,11757],[1697,11757],[1698,11757],[1699,11757],[1700,11757],[1701,11757],[1702,11757],[1703,11757],[1704,11757],[1705,11757],[1706,11757],[1707,11757],[1708,11757],[1711,11757],[1712,11757],[1721,11757],[1722,11758],[1724,11679],[1725,11679],[1739,11757],[1784,11757],[1787,11757],[1796,11757],[1799,11757],[1842,11757],[1848,11757],[1885,11757],[1887,11759],[1891,11759],[1892,11759],[1893,11759],[1894,11759],[1895,11759],[1896,11759],[1897,11759],[1898,11759],[1899,11759],[1900,11759],[1901,11759],[1902,11759],[1903,11759],[1904,11759],[1905,11759],[1906,11759],[1907,11759],[1908,11759],[1909,11759],[1910,11759],[1911,11759],[1912,11759],[1913,11759],[1914,11759],[1915,11759],[1916,11759],[1917,11759],[1918,11759],[1919,11759],[1920,11759],[1921,11759],[1922,11759],[1923,11982],[1924,11982],[1925,11983],[1926,11983],[1927,11983],[1931,11763],[1933,11763],[1952,11763],[1958,11758],[1959,11984],[1960,11984],[1961,11984],[1962,11984],[1965,11985],[1966,11986],[1967,11986],[1968,11986],[1969,11986],[1970,11986],[1971,11986],[1972,11986],[1973,11986],[1974,11758],[1975,11679],[1976,11679],[1987,11987],[1988,11988],[1989,11988],[1990,11988],[1991,11987],[1992,11987],[1993,11989],[1994,11987],[1995,11988],[1996,11988],[1997,11988],[1999,11701],[2003,11656],[2004,11771],[2005,11771],[2006,11771],[2007,11752],[2009,11677],[2013,11656],[2015,11656],[2016,11656],[2018,11656],[2023,11656],[2024,11656],[2025,11769],[2028,11769],[2029,11770],[2030,11776],[2031,11775],[2033,11656],[2034,11677],[2035,11677],[2036,11677],[2037,11677],[2042,11990],[2043,11656],[2046,11991],[2048,11656],[2053,11992],[2054,11656],[2059,11993],[2060,11656],[2067,11656],[2068,11714],[2069,11714],[2072,11656],[2078,11656],[2079,11656],[2083,11656],[2084,11656],[2085,11701],[2087,11776],[2091,11994],[2092,11944],[2093,11994],[2094,11994],[2095,11995],[2096,11994],[2098,11656],[2099,11656],[2103,11656],[2104,11656],[2108,11656],[2109,11656],[2113,11656],[2114,11656],[2118,11656],[2119,11656],[2121,11782],[2132,11656],[2133,11656],[2135,11704],[2136,11704],[2148,11656],[2151,11656],[2153,11656],[2154,11701],[2158,11995],[2159,11995],[2160,11994],[2161,11995],[2162,11995],[2163,11995],[2164,11672],[2165,11656],[2166,11656],[2167,11656],[2168,11656],[2170,11775],[2172,11760],[2176,11656],[2178,11656],[2183,11656],[2188,11996],[2189,11656],[2190,11705],[2191,11677],[2194,11656],[2198,11656],[2199,11656],[2203,11656],[2204,11656],[2208,11656],[2209,11656],[2213,11656],[2214,11656],[2218,11677],[2394,11776],[2407,11704],[2531,11677],[3081,11776],[3082,11776],[3086,11677],[3455,11769],[3456,11769],[3457,11770],[3458,11776],[3459,11775],[3461,11776],[3465,11775],[3466,11776],[3468,11776],[3469,11776],[3470,11769],[3471,11769],[3472,11775],[3477,11775],[3478,11784],[3484,11784],[3487,11784],[3495,11784],[3505,11658],[3512,11658],[3513,11658],[3514,11785],[3530,11658],[3543,11658],[3559,11785],[3566,11658],[3568,11658],[3569,11658],[3570,11658],[3571,11658],[3572,11785],[3573,11658],[3595,11997],[3596,11997],[3597,11997],[3599,11726],[3604,11726],[3605,11726],[3607,11726],[3608,11726],[3647,11726],[3684,11726],[3716,11726],[3786,11726],[3871,11680],[3872,11680],[3874,11680],[4086,11803],[4115,11665],[4118,11795],[4119,11795],[4121,11665],[4122,11665],[4123,11665],[4124,11665],[4125,11665],[4126,11665],[4129,11665],[4131,11807],[4143,11665],[4152,11795],[4223,11795],[4233,11795],[4357,11812],[4358,11813],[4359,11813],[4360,11813],[4361,11813],[4362,11813],[4363,11813],[4364,11813],[4365,11813],[4366,11813],[4370,11814],[4375,11815],[4376,11815],[4396,11794],[4430,11794],[4451,11794],[4465,11794],[4466,11794],[4467,11794],[4483,11998],[4484,11999],[4488,11783],[4495,11827],[4497,11896],[4500,11829],[4501,11829],[4502,11894],[4508,11701],[4509,11711],[4510,11834],[4513,11727],[4518,11656],[4519,11771],[4521,11771],[4522,11771],[4523,11835],[4524,11668],[4525,11752],[4527,12000],[4529,11840],[4530,11843],[4532,11874],[4533,11677],[4534,11846],[4536,11874],[4537,11936],[4538,11874],[4541,12001],[4547,11849],[4548,11853],[4553,11656],[4554,11735],[4557,11900],[4559,11656],[4560,11656],[4562,11656],[4563,11831],[4570,11656],[4571,11737],[4572,11883],[4573,11656],[4574,11665],[4577,11868],[4578,11870],[4580,11880],[4588,11769],[4592,11769],[4593,11770],[4594,11884],[4595,11776],[4596,11860],[4597,11775],[4599,11656],[4603,11882],[4604,11882],[4605,11757],[4606,11942],[4607,11757],[4608,11757],[4609,11757],[4610,11757],[4611,11757],[4612,11757],[4613,11757],[4614,11757],[4615,11757],[4616,11757],[4617,11757],[4618,11757],[4619,11718],[4620,11819],[4621,11757],[4622,11757],[4623,11757],[4624,11757],[4625,11757],[4626,11757],[4627,11757],[4628,11757],[4629,11757],[4630,11757],[4631,11757],[4632,11757],[4633,11657],[4634,11732],[4635,11742],[4636,11742],[4637,11717],[4639,11877],[4640,11869],[4643,11680],[4645,11831],[4649,11831],[4651,11871],[4652,11677],[4664,11902],[4665,11871],[4666,11871],[4667,11871],[4668,11823],[4669,11850],[4670,11872],[4677,11677],[4678,11677],[4679,11726],[4680,11931],[4681,11822],[4685,11677],[4693,11990],[4694,11904],[4696,11656],[4700,11890],[4701,11991],[4703,11905],[4705,11656],[4712,11992],[4713,11656],[4715,11821],[4722,11881],[4726,11802],[4732,11890],[4733,11993],[4734,11906],[4735,11656],[4736,11895],[4737,11796],[4748,11783],[4752,11783],[4753,11903],[4754,11938],[4763,12001],[4764,12001],[4765,11656],[4766,11714],[4770,11714],[4771,11837],[4772,11938],[4773,11892],[4774,12002],[4776,11757],[4777,11757],[4787,11656],[4795,11656],[4796,11656],[4801,11656],[4802,11656],[4810,11927],[4811,11927],[4812,11927],[4816,11833],[4817,11831],[4821,11701],[4823,11831],[4825,11776],[4826,11795],[4828,11795],[4830,11665],[4831,11665],[4832,11665],[4833,11665],[4834,11665],[4835,11665],[4840,11880],[4850,11994],[4851,12001],[4857,11944],[4858,11994],[4859,11665],[4860,11718],[4861,11994],[4864,11858],[4866,11799],[4867,11944],[4868,11995],[4869,11994],[4871,11819],[4874,11656],[4875,11656],[4880,11656],[4881,11656],[4886,11656],[4887,11656],[4892,11656],[4893,11656],[4898,11656],[4899,11656],[4903,11876],[4905,11680],[4906,11807],[4907,11797],[4908,11914],[4909,11782],[4910,11798],[4911,11764],[4913,11851],[4914,11873],[4915,11873],[4916,11838],[4917,11838],[4918,11838],[4919,11851],[4920,11851],[4923,11757],[4927,11757],[4941,11819],[4942,11797],[4943,11819],[4944,11818],[4945,11891],[4947,11819],[4948,11819],[4951,11875],[4952,11901],[4954,11875],[4955,11875],[4956,11875],[4960,11869],[4962,12003],[4964,12003],[4965,12003],[4971,11863],[4972,11897],[4973,11797],[4974,11797],[4975,11865],[4982,11819],[4987,11664],[4994,11733],[4995,11729],[4996,11731],[4997,11656],[4999,12004],[5000,11836],[5001,11914],[5002,11937],[5003,11730],[5004,11733],[5005,11656],[5006,11893],[5008,11893],[5010,11704],[5013,11704],[5062,11893],[5067,11930],[5068,11930],[5080,11891],[5082,11732],[5084,11764],[5085,11896],[5097,11893],[5105,11871],[5106,11718],[5107,11718],[5108,11664],[5109,11682],[5110,11656],[5113,11656],[5115,11656],[5120,11783],[5121,11827],[5130,11849],[5131,11701],[5133,12005],[5136,11878],[5137,11880],[5138,11878],[5139,11852],[5141,11880],[5142,11854],[5145,11995],[5146,11995],[5147,11994],[5148,11995],[5149,11995],[5150,11995],[5151,11672],[5153,11656],[5154,11658],[5155,11656],[5156,11656],[5157,11707],[5158,11656],[5159,11666],[5160,11658],[5161,11951],[5162,11796],[5163,11956],[5165,11958],[5167,11886],[5170,11739],[5173,11943],[5174,11715],[5176,11872],[5185,11879],[5186,11879],[5187,11757],[5189,11831],[5197,11775],[5207,11891],[5210,11796],[5211,11867],[5212,11716],[5213,11895],[5214,12006],[5215,11895],[5220,11861],[5221,12007],[5229,11708],[5233,11830],[5234,11864],[5235,11866],[5236,11926],[5237,11926],[5240,11926],[5241,11926],[5242,11763],[5246,11826],[5248,11916],[5249,11916],[5250,11872],[5251,11660],[5254,11932],[5255,11912],[5256,11950],[5257,11879],[5258,11845],[5259,11706],[5272,11758],[5273,11665],[5280,11679],[5281,11679],[5282,11831],[5286,11946],[5288,11869],[5290,11760],[5291,11889],[5299,11784],[5301,11656],[5302,11735],[5304,11887],[5305,11841],[5306,11848],[5308,11656],[5315,11891],[5319,11801],[5320,11979],[5323,11888],[5324,11820],[5326,11656],[5336,11821],[5338,11885],[5339,11862],[5341,11882],[5349,11996],[5350,11933],[5352,11656],[5353,11705],[5354,11677],[5358,11955],[5372,11656],[5379,11656],[5380,11656],[5385,11656],[5386,11656],[5391,11656],[5392,11656],[5397,11656],[5398,11656],[5399,12008],[5400,11917],[5404,11894],[5406,11726],[5409,11677],[5410,11891],[5411,11803],[5414,11857],[5423,11953],[5424,11959],[5428,11882],[5430,11870],[5433,11891],[5434,11891],[5444,11880],[5537,12009],[5541,12010],[5542,12009],[5554,12011],[5565,11795],[5567,12012],[5570,12013],[5581,12013],[5592,12014],[5598,12015],[5601,12016],[5614,12017],[5619,12017],[5622,11757],[5632,12018],[5657,12019],[5661,12020],[5665,12021],[5673,12015],[5675,11882],[5936,12022],[5944,11776],[5949,12020],[5960,12015],[5975,12023],[5978,12024],[5980,12024],[5982,12024],[6264,12025],[6272,12013],[6276,12026],[6277,12012],[6279,12027],[6292,12012],[6301,12008],[6305,12027],[6307,12028],[6310,12027],[6311,12027],[6312,12028],[6313,12028],[6322,12004],[6323,12029],[6329,12030],[6330,12030],[6331,11677],[6337,12031],[6339,12013],[6340,12031],[6342,12031],[6344,12031],[6346,12013],[6347,12031],[6351,11978],[6353,12016],[6354,12018],[6355,11890],[6357,12016],[6358,12016],[6359,11988],[6360,11988],[6361,11988],[6426,12004],[6427,11818],[6686,11922],[6688,11978],[6690,12032],[6834,12033],[6835,12015],[6844,12012],[6845,12012],[6847,11890],[6855,11802],[6856,11802],[6857,11926],[7118,12005],[7119,12005],[7120,12005],[7126,11795],[7147,11757],[7184,12015],[7188,12004],[7192,11757],[7197,12034],[7300,11795],[7304,12013],[7308,12028],[7536,11757],[7546,12015],[7548,11757],[7573,12005],[7583,12001],[7595,11869],[7596,11869],[7677,12035],[7688,12036],[7689,12037],[7690,12037],[7692,12038],[7704,12012],[7707,11944],[7708,11957],[7842,12016],[7843,12016],[7845,12039],[7846,11876],[7848,12039],[7849,12040],[8000,11877],[8002,12005],[8010,12041],[8015,12042],[8018,12043],[8027,12020],[8030,12020],[8037,12029],[8072,12015],[8087,12015],[8096,11893],[8144,11776],[8145,11776],[8150,12014],[8161,12015],[8164,12015],[8172,12044],[8173,12001],[8174,12020],[8185,12020],[8191,12020],[8201,11677],[8210,12020],[8231,12018],[8269,12018],[8280,12045],[8281,12046],[8328,12047],[8352,12020],[8357,12015],[8358,12004],[8391,12001],[8409,11658],[8410,11658],[8411,11658],[8412,11658],[8417,11931],[8426,12020],[8457,12013],[8464,11875],[8468,12048],[8469,12049],[8471,12050],[8478,12050],[8479,12050],[8481,12037],[8483,12005],[8574,12022],[8578,11757],[8591,12023],[8642,11757],[8662,11946],[8664,11946],[8682,12035],[8692,12018],[8693,12051],[8695,12051],[8697,12051],[8699,12051],[8701,12051],[8716,12020],[8741,11882],[8745,12016],[9327,12015],[9352,12004],[9514,11882],[9724,12052],[9732,11757],[9880,11853],[9883,11853],[9891,12053],[9893,12054],[9898,11812],[9899,11813],[9900,11813],[9901,11813],[9902,11813],[9903,11813],[9904,11813],[9905,11813],[9906,11813],[9907,11813],[9911,11759],[9915,11759],[9916,11759],[9917,11759],[9918,11759],[9919,11759],[9920,11759],[9921,11759],[9922,11759],[9923,11759],[9924,11759],[9925,11759],[9926,11759],[9927,11759],[9928,11759],[9929,11759],[9930,11759],[9931,11759],[9932,11759],[9933,11759],[9934,11759],[9935,11759],[9936,11759],[9937,11759],[9938,11759],[9939,11759],[9940,11759],[9941,11759],[9942,11759],[9943,11759],[9944,11759],[9945,11759],[9946,11759],[9947,11964],[9948,11965],[9966,11856],[9984,11966],[9986,11966],[9989,11966],[10003,11966],[10035,11966],[10060,11860],[10061,11904],[10062,11905],[10063,11906],[10064,11867],[10065,11950],[10066,11841],[10067,11933],[10120,12055],[10127,11841],[10133,11967],[10134,11841],[10157,11841],[10166,11968],[10168,11968],[10169,11968],[10180,11968],[10199,11898],[10200,11898],[10236,12056],[10249,11898],[10250,11898],[10257,11969],[10269,11969],[10275,11701],[10279,11656],[10280,11771],[10281,11771],[10282,11771],[10283,11752],[10285,11677],[10289,11656],[10291,11656],[10292,11656],[10294,11656],[10299,11656],[10300,11656],[10301,11769],[10304,11769],[10305,11770],[10306,11776],[10307,11775],[10309,11656],[10310,11677],[10311,11677],[10312,11677],[10313,11677],[10318,11990],[10319,11656],[10322,11991],[10324,11656],[10329,11992],[10330,11656],[10335,11993],[10336,11656],[10341,11656],[10342,11714],[10343,11714],[10346,11656],[10352,11656],[10353,11656],[10357,11656],[10358,11656],[10359,11701],[10361,11776],[10365,11994],[10366,11944],[10367,11994],[10368,11994],[10369,11995],[10370,11994],[10372,11656],[10373,11656],[10377,11656],[10378,11656],[10382,11656],[10383,11656],[10387,11656],[10388,11656],[10392,11656],[10393,11656],[10395,11782],[10406,11656],[10407,11656],[10409,11704],[10410,11704],[10422,11656],[10425,11656],[10427,11656],[10428,11701],[10432,11995],[10433,11995],[10434,11994],[10435,11995],[10436,11995],[10437,11995],[10438,11672],[10439,11656],[10440,11656],[10441,11656],[10442,11656],[10444,11775],[10446,11760],[10450,11656],[10452,11656],[10457,11656],[10462,11996],[10463,11656],[10464,11705],[10465,11677],[10468,11656],[10472,11656],[10473,11656],[10477,11656],[10478,11656],[10482,11656],[10483,11656],[10487,11656],[10488,11656],[10492,11677],[10505,11776],[10508,11704],[10513,11677],[10530,11776],[10531,11776],[10532,11677],[10550,11769],[10551,11769],[10552,11770],[10553,11776],[10554,11775],[10556,11776],[10560,11775],[10561,11776],[10563,11776],[10564,11776],[10565,11769],[10566,11769],[10567,11775],[10572,11775],[10573,11784],[10574,11784],[10575,11784],[10576,11784],[10577,12037],[10578,12037],[10579,12037],[10580,11927],[10581,11927],[10582,11927],[10586,11911],[10638,11814],[10641,11970],[10661,11982],[10662,11982],[10677,11883],[10680,11884],[10719,11833],[10762,11886],[10794,11887],[10802,11888],[10807,11885],[10832,11833],[10833,11833],[10834,11833],[10835,11833],[10877,11884],[10881,11886],[10887,11971],[10918,11972],[10945,11983],[10946,11983],[10947,11983],[10948,11876],[10951,11876],[10952,12040],[10953,12057],[10954,12058],[10955,12058],[10956,12058],[10957,12058],[10958,12058],[10959,11973],[10990,11957],[11001,11957],[11006,11957],[11007,11957],[11020,11763],[11021,11763],[11022,11763],[11023,11862],[11024,11862],[11045,11758],[11046,11984],[11047,11984],[11048,11984],[11049,11984],[11052,11985],[11053,11986],[11054,11986],[11055,11986],[11056,11986],[11057,11986],[11058,11986],[11059,11986],[11060,11986],[11061,11758],[11062,11679],[11063,11679],[11074,11846],[11075,11946],[11076,11848],[11095,12035],[11103,11946],[11105,11946],[11108,12035],[11114,12051],[11116,12051],[11118,12051],[11120,12051],[11122,12051],[11128,11857],[11134,12059],[11135,12059],[11139,11706],[11140,11757],[11142,11798],[11143,11706],[11147,11660],[11148,11976],[11149,11976],[11150,11706],[11161,11660],[11167,11660],[11357,11660],[11480,11660],[11577,11675],[11578,11675],[11601,11664],[11602,11664],[11603,11664],[11605,11664],[11609,11664],[11622,11682],[11623,11682],[11630,11910]],"b":[[29,"impl-Add-for-ChunkedArray%3CT%3E"],[30,"impl-Add%3CN%3E-for-%26ChunkedArray%3CT%3E"],[31,"impl-Add-for-%26ChunkedArray%3CStringType%3E"],[32,"impl-Add-for-ChunkedArray%3CStringType%3E"],[33,"impl-Add%3C%26str%3E-for-%26ChunkedArray%3CStringType%3E"],[34,"impl-Add-for-%26ChunkedArray%3CBinaryType%3E"],[35,"impl-Add-for-ChunkedArray%3CBinaryType%3E"],[36,"impl-Add%3C%26%5Bu8%5D%3E-for-%26ChunkedArray%3CBinaryType%3E"],[37,"impl-Add-for-%26ChunkedArray%3CBooleanType%3E"],[38,"impl-Add-for-ChunkedArray%3CBooleanType%3E"],[39,"impl-Add%3CN%3E-for-ChunkedArray%3CT%3E"],[40,"impl-Add-for-%26ChunkedArray%3CT%3E"],[42,"impl-AggList-for-ChunkedArray%3CBooleanType%3E"],[43,"impl-AggList-for-ChunkedArray%3CT%3E"],[44,"impl-AggList-for-ChunkedArray%3CStringType%3E"],[45,"impl-AggList-for-ChunkedArray%3CBinaryType%3E"],[46,"impl-AggList-for-ChunkedArray%3CListType%3E"],[47,"impl-AggList-for-ChunkedArray%3CFixedSizeListType%3E"],[48,"impl-AggList-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[49,"impl-AggList-for-ChunkedArray%3CStructType%3E"],[52,"impl-ChunkedArray%3CFixedSizeListType%3E"],[53,"impl-ChunkedArray%3CListType%3E"],[54,"impl-ChunkedArray%3CListType%3E"],[55,"impl-ChunkedArray%3CFixedSizeListType%3E"],[59,"impl-ChunkApply%3C\'a,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[60,"impl-ChunkApply%3C\'a,+Series%3E-for-ChunkedArray%3CListType%3E"],[61,"impl-ChunkApply%3C\'a,+%26str%3E-for-ChunkedArray%3CStringType%3E"],[62,"impl-ChunkApply%3C\'a,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[63,"impl-ChunkApply%3C\'a,+%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[64,"impl-ChunkApply%3C\'a,+%26T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[66,"impl-ChunkedArray%3CFixedSizeListType%3E"],[67,"impl-ChunkedArray%3CListType%3E"],[69,"impl-ChunkedArray%3CFloat64Type%3E"],[70,"impl-ChunkedArray%3CFloat32Type%3E"],[73,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3C%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[74,"impl-ChunkApplyKernel%3CBooleanArray%3E-for-ChunkedArray%3CBooleanType%3E"],[75,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3Cstr%3E%3E-for-ChunkedArray%3CStringType%3E"],[76,"impl-ChunkApplyKernel%3CPrimitiveArray%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[77,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3Cstr%3E%3E-for-ChunkedArray%3CStringType%3E"],[78,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3C%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[79,"impl-ChunkApplyKernel%3CPrimitiveArray%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[80,"impl-ChunkApplyKernel%3CBooleanArray%3E-for-ChunkedArray%3CBooleanType%3E"],[81,"impl-ChunkedArray%3CBinaryType%3E"],[82,"impl-ChunkedArray%3CT%3E"],[83,"impl-ChunkedArray%3CStringType%3E"],[85,"impl-ChunkedArray%3CListType%3E"],[86,"impl-ChunkedArray%3CFixedSizeListType%3E"],[87,"impl-ChunkApply%3C\'a,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[88,"impl-ChunkApply%3C\'a,+%26T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[89,"impl-ChunkApply%3C\'a,+%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[90,"impl-ChunkApply%3C\'a,+Series%3E-for-ChunkedArray%3CListType%3E"],[91,"impl-ChunkApply%3C\'a,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[92,"impl-ChunkApply%3C\'a,+%26str%3E-for-ChunkedArray%3CStringType%3E"],[93,"impl-ChunkApply%3C\'a,+%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[94,"impl-ChunkApply%3C\'a,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[95,"impl-ChunkApply%3C\'a,+%26T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[96,"impl-ChunkApply%3C\'a,+Series%3E-for-ChunkedArray%3CListType%3E"],[97,"impl-ChunkApply%3C\'a,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[98,"impl-ChunkApply%3C\'a,+%26str%3E-for-ChunkedArray%3CStringType%3E"],[100,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[101,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[102,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[103,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[104,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[105,"impl-ChunkSort%3CStructType%3E-for-ChunkedArray%3CStructType%3E"],[106,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[107,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[108,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[109,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[110,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[111,"impl-ChunkUnique-for-ChunkedArray%3CBinaryType%3E"],[112,"impl-ChunkUnique-for-ChunkedArray%3CBooleanType%3E"],[113,"impl-ChunkUnique-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[114,"impl-ChunkUnique-for-ChunkedArray%3CT%3E"],[115,"impl-ChunkUnique-for-ChunkedArray%3CStringType%3E"],[118,"impl-ChunkedArray%3CStringType%3E"],[119,"impl-AsBinary-for-ChunkedArray%3CBinaryType%3E"],[123,"impl-AsString-for-ChunkedArray%3CStringType%3E"],[124,"impl-AsString-for-ChunkedArray%3CStringType%3E"],[126,"impl-BitAnd-for-ChunkedArray%3CBooleanType%3E"],[127,"impl-BitAnd-for-%26ChunkedArray%3CBooleanType%3E"],[128,"impl-BitAnd-for-%26ChunkedArray%3CT%3E"],[129,"impl-BitOr-for-%26ChunkedArray%3CT%3E"],[130,"impl-BitOr-for-ChunkedArray%3CBooleanType%3E"],[131,"impl-BitOr-for-%26ChunkedArray%3CBooleanType%3E"],[132,"impl-BitXor-for-ChunkedArray%3CBooleanType%3E"],[133,"impl-BitXor-for-%26ChunkedArray%3CBooleanType%3E"],[134,"impl-BitXor-for-%26ChunkedArray%3CT%3E"],[143,"impl-ChunkCast-for-ChunkedArray%3CT%3E"],[144,"impl-ChunkCast-for-ChunkedArray%3CListType%3E"],[145,"impl-ChunkCast-for-ChunkedArray%3CStringType%3E"],[146,"impl-ChunkCast-for-ChunkedArray%3CBinaryType%3E"],[147,"impl-ChunkCast-for-ChunkedArray%3CBooleanType%3E"],[148,"impl-ChunkCast-for-ChunkedArray%3CFixedSizeListType%3E"],[149,"impl-ChunkCast-for-ChunkedArray%3CBinaryOffsetType%3E"],[150,"impl-ChunkCast-for-ChunkedArray%3CBooleanType%3E"],[151,"impl-ChunkedArray%3CStructType%3E"],[152,"impl-ChunkCast-for-ChunkedArray%3CListType%3E"],[153,"impl-ChunkCast-for-ChunkedArray%3CT%3E"],[154,"impl-ChunkCast-for-ChunkedArray%3CStringType%3E"],[155,"impl-ChunkCast-for-ChunkedArray%3CFixedSizeListType%3E"],[156,"impl-ChunkCast-for-ChunkedArray%3CBinaryOffsetType%3E"],[157,"impl-ChunkCast-for-ChunkedArray%3CBinaryType%3E"],[160,"impl-ChunkedArray%3CT%3E"],[161,"impl-Container-for-ChunkedArray%3CT%3E"],[181,"impl-Div%3CN%3E-for-ChunkedArray%3CT%3E"],[182,"impl-Div-for-ChunkedArray%3CT%3E"],[183,"impl-Div-for-%26ChunkedArray%3CT%3E"],[184,"impl-Div%3CN%3E-for-%26ChunkedArray%3CT%3E"],[191,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[192,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[193,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[194,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[195,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[196,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[197,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[198,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[199,"impl-ChunkCompare%3C%26ChunkedArray%3CStructType%3E%3E-for-ChunkedArray%3CStructType%3E"],[200,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[201,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[202,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[203,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[204,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[205,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[206,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[207,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[208,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[209,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[210,"impl-ChunkCompare%3C%26ChunkedArray%3CStructType%3E%3E-for-ChunkedArray%3CStructType%3E"],[211,"impl-ChunkExplode-for-ChunkedArray%3CFixedSizeListType%3E"],[212,"impl-ChunkExplode-for-ChunkedArray%3CListType%3E"],[216,"impl-ChunkFillNullValue%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[217,"impl-ChunkFillNullValue%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[218,"impl-ChunkFillNullValue%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[219,"impl-ChunkFilter%3CObjectType%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[220,"impl-ChunkFilter%3CT%3E-for-ChunkedArray%3CT%3E"],[221,"impl-ChunkFilter%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[222,"impl-ChunkFilter%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[226,"impl-Debug-for-ChunkedArray%3CT%3E"],[227,"impl-Debug-for-ChunkedArray%3CStringType%3E"],[228,"impl-Debug-for-ChunkedArray%3CBooleanType%3E"],[229,"impl-Debug-for-ChunkedArray%3CListType%3E"],[230,"impl-Debug-for-ChunkedArray%3CBinaryType%3E"],[231,"impl-Debug-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[232,"impl-Debug-for-ChunkedArray%3CFixedSizeListType%3E"],[234,"impl-ChunkedArray%3CFixedSizeListType%3E"],[235,"impl-ChunkedArray%3CListType%3E"],[244,"impl-FromIterator%3C(Vec%3C%3CT+as+PolarsNumericType%3E::Native%3E,+Option%3CBitmap%3E)%3E-for-ChunkedArray%3CT%3E"],[245,"impl-FromIterator%3COption%3CBox%3Cdyn+Array%3E%3E%3E-for-ChunkedArray%3CListType%3E"],[246,"impl-FromIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[247,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[248,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[249,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[250,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[251,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[252,"impl-FromIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[253,"impl-FromIterator%3COption%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[254,"impl-FromIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[255,"impl-FromIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[256,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[257,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[258,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[259,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[260,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[261,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[262,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[263,"impl-FromTrustedLenIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[264,"impl-FromTrustedLenIterator%3COption%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[265,"impl-FromTrustedLenIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[266,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[267,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[268,"impl-FromTrustedLenIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[269,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[270,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[271,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[272,"impl-FromTrustedLenIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[273,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[274,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[275,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[276,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[277,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[279,"impl-FromParallelIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[280,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[281,"impl-FromParallelIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[282,"impl-FromParallelIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[283,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[284,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[285,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[286,"impl-FromParallelIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[289,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[290,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[291,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[292,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[293,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[294,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[295,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[296,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[297,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[298,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[299,"impl-FromIteratorReversed%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[300,"impl-FromIteratorReversed%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[303,"impl-ChunkFull%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[304,"impl-ChunkFull%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[305,"impl-ChunkFull%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[306,"impl-ChunkFull%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[307,"impl-ChunkFull%3C%26Series%3E-for-ChunkedArray%3CListType%3E"],[308,"impl-ChunkFull%3C%26Series%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[309,"impl-ChunkFull%3CT%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[310,"impl-ChunkFull%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[311,"impl-ChunkFullNull-for-ChunkedArray%3CFixedSizeListType%3E"],[312,"impl-ChunkFullNull-for-ChunkedArray%3CStringType%3E"],[313,"impl-ChunkFullNull-for-ChunkedArray%3CStructType%3E"],[314,"impl-ChunkFullNull-for-ChunkedArray%3CListType%3E"],[315,"impl-ChunkFullNull-for-ChunkedArray%3CBinaryOffsetType%3E"],[316,"impl-ChunkFullNull-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[317,"impl-ChunkFullNull-for-ChunkedArray%3CBinaryType%3E"],[318,"impl-ChunkFullNull-for-ChunkedArray%3CT%3E"],[319,"impl-ChunkFullNull-for-ChunkedArray%3CBooleanType%3E"],[321,"impl-ChunkedArray%3CFixedSizeListType%3E"],[322,"impl-ChunkedArray%3CListType%3E"],[324,"impl-ChunkAnyValue-for-ChunkedArray%3CFixedSizeListType%3E"],[325,"impl-ChunkAnyValue-for-ChunkedArray%3CStructType%3E"],[326,"impl-ChunkAnyValue-for-ChunkedArray%3CT%3E"],[327,"impl-ChunkAnyValue-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[328,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryType%3E"],[329,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryOffsetType%3E"],[330,"impl-ChunkAnyValue-for-ChunkedArray%3CBooleanType%3E"],[331,"impl-ChunkAnyValue-for-ChunkedArray%3CListType%3E"],[332,"impl-ChunkAnyValue-for-ChunkedArray%3CStringType%3E"],[333,"impl-ChunkAnyValue-for-ChunkedArray%3CT%3E"],[334,"impl-ChunkAnyValue-for-ChunkedArray%3CStringType%3E"],[335,"impl-ChunkAnyValue-for-ChunkedArray%3CBooleanType%3E"],[336,"impl-ChunkAnyValue-for-ChunkedArray%3CListType%3E"],[337,"impl-ChunkAnyValue-for-ChunkedArray%3CFixedSizeListType%3E"],[338,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryOffsetType%3E"],[339,"impl-ChunkAnyValue-for-ChunkedArray%3CStructType%3E"],[340,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryType%3E"],[341,"impl-ChunkAnyValue-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[342,"impl-ChunkedArray%3CListType%3E"],[343,"impl-ChunkedArray%3CFixedSizeListType%3E"],[347,"impl-ChunkedArray%3CListType%3E"],[348,"impl-ChunkedArray%3CFixedSizeListType%3E"],[356,"impl-ValueSize-for-ChunkedArray%3CBinaryOffsetType%3E"],[357,"impl-ValueSize-for-ChunkedArray%3CListType%3E"],[358,"impl-ValueSize-for-ChunkedArray%3CStringType%3E"],[359,"impl-ValueSize-for-ChunkedArray%3CFixedSizeListType%3E"],[360,"impl-IntoGroupsProxy-for-ChunkedArray%3CFixedSizeListType%3E"],[361,"impl-IntoGroupsProxy-for-ChunkedArray%3CT%3E"],[362,"impl-IntoGroupsProxy-for-ChunkedArray%3CListType%3E"],[363,"impl-IntoGroupsProxy-for-ChunkedArray%3CBinaryOffsetType%3E"],[364,"impl-IntoGroupsProxy-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[365,"impl-IntoGroupsProxy-for-ChunkedArray%3CBinaryType%3E"],[366,"impl-IntoGroupsProxy-for-ChunkedArray%3CStringType%3E"],[367,"impl-IntoGroupsProxy-for-ChunkedArray%3CBooleanType%3E"],[369,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[370,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[371,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[372,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[373,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[374,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[375,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[376,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[377,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[378,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[379,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[380,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[381,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[382,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[383,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[384,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[385,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[386,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[392,"impl-ChunkedArray%3CListType%3E"],[393,"impl-ChunkedArray%3CFixedSizeListType%3E"],[403,"impl-IntoIterator-for-%26ChunkedArray%3CBinaryOffsetType%3E"],[404,"impl-IntoIterator-for-%26ChunkedArray%3CFixedSizeListType%3E"],[405,"impl-IntoIterator-for-%26ChunkedArray%3CStringType%3E"],[406,"impl-IntoIterator-for-%26ChunkedArray%3CBinaryType%3E"],[407,"impl-IntoIterator-for-%26ChunkedArray%3CObjectType%3CT%3E%3E"],[408,"impl-IntoIterator-for-%26ChunkedArray%3CBooleanType%3E"],[409,"impl-IntoIterator-for-%26ChunkedArray%3CT%3E"],[410,"impl-IntoIterator-for-%26ChunkedArray%3CListType%3E"],[412,"impl-IntoSeries-for-ChunkedArray%3CT%3E"],[413,"impl-IntoSeries-for-ChunkedArray%3CInt128Type%3E"],[433,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[434,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[435,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[436,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[437,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[438,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[439,"impl-ChunkedArray%3CT%3E"],[440,"impl-Container-for-ChunkedArray%3CT%3E"],[445,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[446,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[447,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[448,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[449,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[450,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[451,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[452,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[453,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[454,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[455,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[456,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[457,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[458,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[459,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[460,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[461,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[462,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[463,"impl-ChunkedArray%3CBooleanType%3E"],[464,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[465,"impl-ChunkAggSeries-for-ChunkedArray%3CBinaryType%3E"],[466,"impl-ChunkAggSeries-for-ChunkedArray%3CBooleanType%3E"],[467,"impl-ChunkAggSeries-for-ChunkedArray%3CT%3E"],[468,"impl-ChunkAggSeries-for-ChunkedArray%3CStringType%3E"],[469,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[470,"impl-ChunkedArray%3CBooleanType%3E"],[471,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CFloat64Type%3E"],[472,"impl-ChunkQuantile%3Cf32%3E-for-ChunkedArray%3CFloat32Type%3E"],[473,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CT%3E"],[474,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[475,"impl-QuantileAggSeries-for-ChunkedArray%3CT%3E"],[476,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[484,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[485,"impl-ChunkedArray%3CBooleanType%3E"],[487,"impl-ChunkAggSeries-for-ChunkedArray%3CStringType%3E"],[488,"impl-ChunkAggSeries-for-ChunkedArray%3CBooleanType%3E"],[489,"impl-ChunkAggSeries-for-ChunkedArray%3CBinaryType%3E"],[490,"impl-ChunkAggSeries-for-ChunkedArray%3CT%3E"],[491,"impl-ChunkedArray%3CT%3E"],[492,"impl-ChunkedArray%3CBooleanType%3E"],[493,"impl-Mul%3CN%3E-for-%26ChunkedArray%3CT%3E"],[494,"impl-Mul%3CN%3E-for-ChunkedArray%3CT%3E"],[495,"impl-Mul-for-%26ChunkedArray%3CT%3E"],[496,"impl-Mul-for-ChunkedArray%3CT%3E"],[499,"impl-ChunkUnique-for-ChunkedArray%3CBinaryType%3E"],[500,"impl-ChunkUnique-for-ChunkedArray%3CT%3E"],[501,"impl-ChunkUnique-for-ChunkedArray%3CStringType%3E"],[503,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[504,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[505,"impl-NamedFrom%3CT,+%5Bu16%5D%3E-for-ChunkedArray%3CUInt16Type%3E"],[506,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[507,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[508,"impl-NamedFrom%3CT,+%5Bi8%5D%3E-for-ChunkedArray%3CInt8Type%3E"],[509,"impl-NamedFrom%3CT,+%5Bi16%5D%3E-for-ChunkedArray%3CInt16Type%3E"],[510,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[511,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[512,"impl-NamedFrom%3CT,+%5Bi128%5D%3E-for-ChunkedArray%3CInt128Type%3E"],[513,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[514,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[515,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[516,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-ChunkedArray%3CStringType%3E"],[517,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[518,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[519,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[520,"impl-NamedFrom%3CT,+%5BOption%3Cu8%3E%5D%3E-for-ChunkedArray%3CUInt8Type%3E"],[521,"impl-NamedFrom%3CT,+%5BOption%3Cu16%3E%5D%3E-for-ChunkedArray%3CUInt16Type%3E"],[522,"impl-NamedFrom%3CS,+%5BOption%3CT%3E%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[523,"impl-NamedFrom%3C%26%5BT%5D,+%26%5BT%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[524,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[525,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[526,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[527,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[528,"impl-NamedFrom%3CT,+%5BOption%3Ci8%3E%5D%3E-for-ChunkedArray%3CInt8Type%3E"],[529,"impl-NamedFrom%3CT,+%5BOption%3Ci16%3E%5D%3E-for-ChunkedArray%3CInt16Type%3E"],[530,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[531,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[532,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[533,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[534,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[535,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[536,"impl-NamedFrom%3CT,+%5BOption%3Ci128%3E%5D%3E-for-ChunkedArray%3CInt128Type%3E"],[537,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-ChunkedArray%3CStringType%3E"],[538,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-ChunkedArray%3CUInt32Type%3E"],[539,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[540,"impl-NamedFrom%3CT,+%5Bu8%5D%3E-for-ChunkedArray%3CUInt8Type%3E"],[541,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-ChunkedArray%3CUInt64Type%3E"],[542,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-ChunkedArray%3CInt32Type%3E"],[543,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-ChunkedArray%3CInt64Type%3E"],[544,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[546,"impl-ChunkExpandAtIndex%3CStructType%3E-for-ChunkedArray%3CStructType%3E"],[547,"impl-ChunkExpandAtIndex%3CObjectType%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[548,"impl-ChunkExpandAtIndex%3CFixedSizeListType%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[549,"impl-ChunkExpandAtIndex%3CT%3E-for-ChunkedArray%3CT%3E"],[550,"impl-ChunkExpandAtIndex%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[551,"impl-ChunkExpandAtIndex%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[552,"impl-ChunkExpandAtIndex%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[553,"impl-ChunkExpandAtIndex%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[554,"impl-ChunkExpandAtIndex%3CListType%3E-for-ChunkedArray%3CListType%3E"],[560,"impl-Not-for-ChunkedArray%3CBooleanType%3E"],[561,"impl-Not-for-%26ChunkedArray%3CBooleanType%3E"],[562,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[563,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[564,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[565,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[566,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[567,"impl-ChunkCompare%3C%26ChunkedArray%3CStructType%3E%3E-for-ChunkedArray%3CStructType%3E"],[568,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[569,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[570,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[571,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[572,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[573,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[574,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[575,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[576,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[577,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[578,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[579,"impl-ChunkCompare%3C%26ChunkedArray%3CStructType%3E%3E-for-ChunkedArray%3CStructType%3E"],[580,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[581,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[584,"impl-ChunkExplode-for-ChunkedArray%3CListType%3E"],[585,"impl-ChunkExplode-for-ChunkedArray%3CFixedSizeListType%3E"],[587,"impl-ChunkedArray%3CStringType%3E"],[588,"impl-ChunkedArray%3CListType%3E"],[589,"impl-ChunkedArray%3CListType%3E"],[590,"impl-ChunkedArray%3CStringType%3E"],[593,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CT%3E"],[594,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CFloat64Type%3E"],[595,"impl-ChunkQuantile%3Cf32%3E-for-ChunkedArray%3CFloat32Type%3E"],[596,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[597,"impl-QuantileAggSeries-for-ChunkedArray%3CT%3E"],[598,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[605,"impl-Reinterpret-for-ChunkedArray%3CUInt32Type%3E"],[606,"impl-Reinterpret-for-ChunkedArray%3CInt32Type%3E"],[607,"impl-Reinterpret-for-ChunkedArray%3CInt8Type%3E"],[608,"impl-Reinterpret-for-ChunkedArray%3CFloat32Type%3E"],[609,"impl-Reinterpret-for-ChunkedArray%3CUInt8Type%3E"],[610,"impl-Reinterpret-for-ChunkedArray%3CInt64Type%3E"],[611,"impl-Reinterpret-for-ChunkedArray%3CInt16Type%3E"],[612,"impl-Reinterpret-for-ChunkedArray%3CFloat64Type%3E"],[613,"impl-Reinterpret-for-ChunkedArray%3CListType%3E"],[614,"impl-Reinterpret-for-ChunkedArray%3CUInt16Type%3E"],[615,"impl-Reinterpret-for-ChunkedArray%3CUInt64Type%3E"],[616,"impl-Reinterpret-for-ChunkedArray%3CFloat32Type%3E"],[617,"impl-Reinterpret-for-ChunkedArray%3CInt32Type%3E"],[618,"impl-Reinterpret-for-ChunkedArray%3CUInt64Type%3E"],[619,"impl-Reinterpret-for-ChunkedArray%3CInt8Type%3E"],[620,"impl-Reinterpret-for-ChunkedArray%3CListType%3E"],[621,"impl-Reinterpret-for-ChunkedArray%3CUInt8Type%3E"],[622,"impl-Reinterpret-for-ChunkedArray%3CFloat64Type%3E"],[623,"impl-Reinterpret-for-ChunkedArray%3CInt64Type%3E"],[624,"impl-Reinterpret-for-ChunkedArray%3CInt16Type%3E"],[625,"impl-Reinterpret-for-ChunkedArray%3CUInt16Type%3E"],[626,"impl-Reinterpret-for-ChunkedArray%3CUInt32Type%3E"],[627,"impl-Rem-for-ChunkedArray%3CT%3E"],[628,"impl-Rem%3CN%3E-for-%26ChunkedArray%3CT%3E"],[629,"impl-Rem%3CN%3E-for-ChunkedArray%3CT%3E"],[630,"impl-Rem-for-%26ChunkedArray%3CT%3E"],[633,"impl-ChunkReverse-for-ChunkedArray%3CBinaryType%3E"],[634,"impl-ChunkReverse-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[635,"impl-ChunkReverse-for-ChunkedArray%3CFixedSizeListType%3E"],[636,"impl-ChunkReverse-for-ChunkedArray%3CT%3E"],[637,"impl-ChunkReverse-for-ChunkedArray%3CStringType%3E"],[638,"impl-ChunkReverse-for-ChunkedArray%3CBooleanType%3E"],[639,"impl-ChunkReverse-for-ChunkedArray%3CBinaryOffsetType%3E"],[640,"impl-ChunkReverse-for-ChunkedArray%3CListType%3E"],[645,"impl-ChunkedSet%3C%26str%3E-for-%26ChunkedArray%3CStringType%3E"],[646,"impl-ChunkedSet%3Cbool%3E-for-%26ChunkedArray%3CBooleanType%3E"],[647,"impl-ChunkedSet%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-%26mut+ChunkedArray%3CT%3E"],[648,"impl-ChunkSet%3C\'a,+%26str,+String%3E-for-ChunkedArray%3CStringType%3E"],[649,"impl-ChunkSet%3C\'a,+%3CT+as+PolarsNumericType%3E::Native,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[650,"impl-ChunkSet%3C\'a,+bool,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[651,"impl-ChunkSet%3C\'a,+%26%5Bu8%5D,+Vec%3Cu8%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[652,"impl-ChunkSet%3C\'a,+%26str,+String%3E-for-ChunkedArray%3CStringType%3E"],[653,"impl-ChunkSet%3C\'a,+%3CT+as+PolarsNumericType%3E::Native,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[654,"impl-ChunkSet%3C\'a,+bool,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[655,"impl-ChunkSet%3C\'a,+%26%5Bu8%5D,+Vec%3Cu8%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[656,"impl-ChunkSet%3C\'a,+bool,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[657,"impl-ChunkSet%3C\'a,+%26%5Bu8%5D,+Vec%3Cu8%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[658,"impl-ChunkSet%3C\'a,+%26str,+String%3E-for-ChunkedArray%3CStringType%3E"],[659,"impl-ChunkSet%3C\'a,+%3CT+as+PolarsNumericType%3E::Native,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[665,"impl-ChunkShift%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[666,"impl-ChunkShift%3CListType%3E-for-ChunkedArray%3CListType%3E"],[667,"impl-ChunkShift%3CStructType%3E-for-ChunkedArray%3CStructType%3E"],[668,"impl-ChunkShift%3CT%3E-for-ChunkedArray%3CT%3E"],[669,"impl-ChunkShift%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[670,"impl-ChunkShift%3CObjectType%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[671,"impl-ChunkShift%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[672,"impl-ChunkShift%3CFixedSizeListType%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[673,"impl-ChunkShift%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[674,"impl-ChunkShiftFill%3CBinaryType,+Option%3C%26%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[675,"impl-ChunkShiftFill%3CBooleanType,+Option%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[676,"impl-ChunkShiftFill%3CObjectType%3CT%3E,+Option%3CObjectType%3CT%3E%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[677,"impl-ChunkShiftFill%3CStringType,+Option%3C%26str%3E%3E-for-ChunkedArray%3CStringType%3E"],[678,"impl-ChunkShiftFill%3CBinaryOffsetType,+Option%3C%26%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[679,"impl-ChunkShiftFill%3CFixedSizeListType,+Option%3C%26Series%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[680,"impl-ChunkShiftFill%3CT,+Option%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[681,"impl-ChunkShiftFill%3CListType,+Option%3C%26Series%3E%3E-for-ChunkedArray%3CListType%3E"],[683,"impl-Container-for-ChunkedArray%3CT%3E"],[684,"impl-ChunkedArray%3CT%3E"],[685,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[686,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[687,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[688,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[689,"impl-ChunkSort%3CStructType%3E-for-ChunkedArray%3CStructType%3E"],[690,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[691,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[692,"impl-ChunkSort%3CStructType%3E-for-ChunkedArray%3CStructType%3E"],[693,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[694,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[695,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[696,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[697,"impl-Container-for-ChunkedArray%3CT%3E"],[698,"impl-ChunkedArray%3CT%3E"],[700,"impl-VarAggSeries-for-ChunkedArray%3CT%3E"],[701,"impl-VarAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[702,"impl-VarAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[704,"impl-Sub-for-ChunkedArray%3CT%3E"],[705,"impl-Sub-for-%26ChunkedArray%3CT%3E"],[706,"impl-Sub%3CN%3E-for-ChunkedArray%3CT%3E"],[707,"impl-Sub%3CN%3E-for-%26ChunkedArray%3CT%3E"],[709,"impl-ChunkedArray%3CBooleanType%3E"],[710,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[711,"impl-ChunkAggSeries-for-ChunkedArray%3CBooleanType%3E"],[712,"impl-ChunkAggSeries-for-ChunkedArray%3CBinaryType%3E"],[713,"impl-ChunkAggSeries-for-ChunkedArray%3CT%3E"],[715,"impl-ChunkTake%3CI%3E-for-ChunkedArray%3CT%3E"],[716,"impl-ChunkTake%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[719,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CT%3E"],[720,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CStructType%3E"],[721,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CStructType%3E"],[722,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CStringType%3E"],[723,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CBinaryType%3E"],[724,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CStringType%3E"],[725,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[726,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[731,"impl-ChunkedArray%3CListType%3E"],[732,"impl-ChunkedArray%3CFixedSizeListType%3E"],[733,"impl-ChunkedArray%3CT%3E"],[734,"impl-ChunkedArray%3CListType%3E"],[739,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[740,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[741,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[742,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[743,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[744,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[746,"impl-ChunkedArray%3CListType%3E"],[747,"impl-ChunkedArray%3CFixedSizeListType%3E"],[761,"impl-ChunkUnique-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[762,"impl-ChunkUnique-for-ChunkedArray%3CBinaryType%3E"],[763,"impl-ChunkUnique-for-ChunkedArray%3CBooleanType%3E"],[764,"impl-ChunkUnique-for-ChunkedArray%3CT%3E"],[765,"impl-ChunkUnique-for-ChunkedArray%3CStringType%3E"],[771,"impl-VarAggSeries-for-ChunkedArray%3CT%3E"],[772,"impl-VarAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[773,"impl-VarAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[774,"impl-VecHash-for-ChunkedArray%3CBooleanType%3E"],[775,"impl-VecHash-for-ChunkedArray%3CInt128Type%3E"],[776,"impl-VecHash-for-ChunkedArray%3CUInt8Type%3E"],[777,"impl-VecHash-for-ChunkedArray%3CInt32Type%3E"],[778,"impl-VecHash-for-ChunkedArray%3CInt16Type%3E"],[779,"impl-VecHash-for-ChunkedArray%3CFloat64Type%3E"],[780,"impl-VecHash-for-ChunkedArray%3CInt8Type%3E"],[781,"impl-VecHash-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[782,"impl-VecHash-for-ChunkedArray%3CUInt16Type%3E"],[783,"impl-VecHash-for-ChunkedArray%3CInt64Type%3E"],[784,"impl-VecHash-for-ChunkedArray%3CFloat32Type%3E"],[785,"impl-VecHash-for-ChunkedArray%3CBinaryType%3E"],[786,"impl-VecHash-for-ChunkedArray%3CStringType%3E"],[787,"impl-VecHash-for-ChunkedArray%3CBinaryOffsetType%3E"],[788,"impl-VecHash-for-ChunkedArray%3CUInt64Type%3E"],[789,"impl-VecHash-for-ChunkedArray%3CUInt32Type%3E"],[790,"impl-VecHash-for-ChunkedArray%3CUInt64Type%3E"],[791,"impl-VecHash-for-ChunkedArray%3CInt8Type%3E"],[792,"impl-VecHash-for-ChunkedArray%3CInt128Type%3E"],[793,"impl-VecHash-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[794,"impl-VecHash-for-ChunkedArray%3CInt32Type%3E"],[795,"impl-VecHash-for-ChunkedArray%3CUInt16Type%3E"],[796,"impl-VecHash-for-ChunkedArray%3CInt16Type%3E"],[797,"impl-VecHash-for-ChunkedArray%3CFloat32Type%3E"],[798,"impl-VecHash-for-ChunkedArray%3CInt64Type%3E"],[799,"impl-VecHash-for-ChunkedArray%3CBinaryOffsetType%3E"],[800,"impl-VecHash-for-ChunkedArray%3CFloat64Type%3E"],[801,"impl-VecHash-for-ChunkedArray%3CUInt32Type%3E"],[802,"impl-VecHash-for-ChunkedArray%3CStringType%3E"],[803,"impl-VecHash-for-ChunkedArray%3CUInt8Type%3E"],[804,"impl-VecHash-for-ChunkedArray%3CBooleanType%3E"],[805,"impl-VecHash-for-ChunkedArray%3CBinaryType%3E"],[817,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[818,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[819,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[820,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[821,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[822,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[823,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[824,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[825,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[826,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[827,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[828,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[829,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[830,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[831,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[832,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[833,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[834,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[835,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[836,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[837,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[838,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[839,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[840,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[841,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[842,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[843,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[844,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[845,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[846,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[847,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[848,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[849,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[850,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[851,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[852,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[856,"impl-ChunkZip%3CT%3E-for-ChunkedArray%3CT%3E"],[857,"impl-ChunkZip%3CStructType%3E-for-ChunkedArray%3CStructType%3E"],[1033,"impl-BinViewChunkedBuilder%3Cstr%3E"],[1034,"impl-BinViewChunkedBuilder%3C%5Bu8%5D%3E"],[1308,"impl-Flags-for-MetadataProperties"],[1309,"impl-MetadataProperties"],[1310,"impl-MetadataFlags"],[1311,"impl-Flags-for-MetadataFlags"],[1373,"impl-Metadata%3CT%3E"],[1374,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1399,"impl-Binary-for-MetadataProperties"],[1400,"impl-UpperHex-for-MetadataProperties"],[1401,"impl-Debug-for-MetadataProperties"],[1402,"impl-LowerHex-for-MetadataProperties"],[1403,"impl-Octal-for-MetadataProperties"],[1404,"impl-Debug-for-MetadataFlags"],[1405,"impl-Binary-for-MetadataFlags"],[1406,"impl-Octal-for-MetadataFlags"],[1407,"impl-LowerHex-for-MetadataFlags"],[1408,"impl-UpperHex-for-MetadataFlags"],[1418,"impl-Flags-for-MetadataProperties"],[1419,"impl-MetadataProperties"],[1420,"impl-MetadataFlags"],[1421,"impl-Flags-for-MetadataFlags"],[1432,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1433,"impl-Metadata%3CT%3E"],[1476,"impl-Metadata%3CT%3E"],[1477,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1481,"impl-Metadata%3CT%3E"],[1482,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1559,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[1560,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[1595,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1596,"impl-ObjectArray%3CT%3E"],[1611,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[1612,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[1622,"impl-ObjectArray%3CT%3E"],[1623,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1624,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1625,"impl-ObjectArray%3CT%3E"],[1627,"impl-Array-for-ObjectArray%3CT%3E"],[1628,"impl-ObjectArray%3CT%3E"],[1631,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[1632,"impl-ObjectChunkedBuilder%3CT%3E"],[1634,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[1635,"impl-ObjectChunkedBuilder%3CT%3E"],[2293,"impl-AsRef%3COsStr%3E-for-PlSmallStr"],[2294,"impl-AsRef%3Cstr%3E-for-PlSmallStr"],[2295,"impl-AsRef%3C%5Bu8%5D%3E-for-PlSmallStr"],[2296,"impl-AsRef%3CPath%3E-for-PlSmallStr"],[2398,"impl-Logical%3CDurationType,+Int64Type%3E"],[2399,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[2401,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2402,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2403,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2404,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2405,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2691,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2692,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2693,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2694,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2695,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2706,"impl-PartialEq%3CArrowDataType%3E-for-DataType"],[2707,"impl-PartialEq-for-DataType"],[2714,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2715,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2716,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2717,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2718,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2719,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2752,"impl-Debug-for-PlSmallStr"],[2753,"impl-Display-for-PlSmallStr"],[2757,"impl-Debug-for-AnyValue%3C\'a%3E"],[2758,"impl-Display-for-AnyValue%3C\'_%3E"],[2760,"impl-Debug-for-DataType"],[2761,"impl-Display-for-DataType"],[2764,"impl-Debug-for-TimeUnit"],[2765,"impl-Display-for-TimeUnit"],[2768,"impl-From%3C%26str%3E-for-PlSmallStr"],[2770,"impl-From%3CCompactString%3E-for-PlSmallStr"],[2771,"impl-From%3C%26String%3E-for-PlSmallStr"],[2772,"impl-From%3CString%3E-for-PlSmallStr"],[2775,"impl-From%3CChunkedArray%3CInt32Type%3E%3E-for-Logical%3CDateType,+Int32Type%3E"],[2776,"impl-From%3CChunkedArray%3CInt64Type%3E%3E-for-Logical%3CTimeType,+Int64Type%3E"],[2790,"impl-From%3Cbool%3E-for-AnyValue%3C\'static%3E"],[2791,"impl-From%3COption%3CT%3E%3E-for-AnyValue%3C\'a%3E"],[2793,"impl-From%3C%26str%3E-for-AnyValue%3C\'a%3E"],[2794,"impl-From%3C%26%5Bu8%5D%3E-for-AnyValue%3C\'a%3E"],[2795,"impl-From%3CK%3E-for-AnyValue%3C\'static%3E"],[2797,"impl-From%3C%26ArrowDataType%3E-for-DataType"],[2799,"impl-From%3CAnyValue%3C\'_%3E%3E-for-DataType"],[2800,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-DataType"],[2802,"impl-From%3C%26ArrowField%3E-for-Field"],[2804,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-Field"],[2827,"impl-From%3CIntegerType%3E-for-ArrowDataType"],[2828,"impl-From%3CPrimitiveType%3E-for-ArrowDataType"],[2836,"impl-FromIterator%3Cchar%3E-for-PlSmallStr"],[2837,"impl-FromIterator%3CPlSmallStr%3E-for-PlSmallStr"],[2838,"impl-FromIterator%3C%26PlSmallStr%3E-for-PlSmallStr"],[2839,"impl-FromIterator%3CCow%3C\'a,+str%3E%3E-for-PlSmallStr"],[2840,"impl-FromIterator%3CBox%3Cstr%3E%3E-for-PlSmallStr"],[2841,"impl-FromIterator%3C%26str%3E-for-PlSmallStr"],[2842,"impl-FromIterator%3C%26char%3E-for-PlSmallStr"],[2843,"impl-FromIterator%3CString%3E-for-PlSmallStr"],[2861,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2862,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2863,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2864,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2865,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2868,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2869,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2870,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2871,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2872,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2908,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2909,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2910,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2911,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2912,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2913,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3021,"impl-IntoSeries-for-Logical%3CDurationType,+Int64Type%3E"],[3022,"impl-IntoSeries-for-Logical%3CTimeType,+Int64Type%3E"],[3023,"impl-IntoSeries-for-Logical%3CDateType,+Int32Type%3E"],[3024,"impl-IntoSeries-for-Logical%3CDecimalType,+Int128Type%3E"],[3025,"impl-IntoSeries-for-Logical%3CDatetimeType,+Int64Type%3E"],[3075,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3076,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3077,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3078,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3079,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3080,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3115,"impl-NamedFrom%3CT,+%5BNaiveDate%5D%3E-for-Logical%3CDateType,+Int32Type%3E"],[3116,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDate%3E%5D%3E-for-Logical%3CDateType,+Int32Type%3E"],[3117,"impl-NamedFrom%3CT,+%5BOption%3CNaiveTime%3E%5D%3E-for-Logical%3CTimeType,+Int64Type%3E"],[3118,"impl-NamedFrom%3CT,+%5BTimeDelta%5D%3E-for-Logical%3CDurationType,+Int64Type%3E"],[3119,"impl-NamedFrom%3CT,+%5BNaiveDateTime%5D%3E-for-Logical%3CDatetimeType,+Int64Type%3E"],[3120,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDateTime%3E%5D%3E-for-Logical%3CDatetimeType,+Int64Type%3E"],[3121,"impl-NamedFrom%3CT,+%5BNaiveTime%5D%3E-for-Logical%3CTimeType,+Int64Type%3E"],[3122,"impl-NamedFrom%3CT,+%5BOption%3CTimeDelta%3E%5D%3E-for-Logical%3CDurationType,+Int64Type%3E"],[3128,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3129,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3130,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3131,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3132,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3133,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3136,"impl-TimeMethods-for-Logical%3CTimeType,+Int64Type%3E"],[3137,"impl-DateMethods-for-Logical%3CDateType,+Int32Type%3E"],[3157,"impl-PolarsRound-for-Logical%3CDateType,+Int32Type%3E"],[3158,"impl-PolarsRound-for-Logical%3CDatetimeType,+Int64Type%3E"],[3164,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[3165,"impl-Logical%3CDurationType,+Int64Type%3E"],[3172,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[3173,"impl-Logical%3CTimeType,+Int64Type%3E"],[3174,"impl-Logical%3CDateType,+Int32Type%3E"],[3189,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[3190,"impl-Logical%3CDurationType,+Int64Type%3E"],[3240,"impl-Logical%3CTimeType,+Int64Type%3E"],[3241,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[3242,"impl-Logical%3CDateType,+Int32Type%3E"],[3247,"impl-PolarsTruncate-for-Logical%3CDateType,+Int32Type%3E"],[3248,"impl-PolarsTruncate-for-Logical%3CDatetimeType,+Int64Type%3E"],[3545,"impl-Debug-for-ErrString"],[3546,"impl-Display-for-ErrString"],[3547,"impl-Debug-for-PolarsError"],[3548,"impl-Display-for-PolarsError"],[3552,"impl-From%3CError%3E-for-PolarsError"],[3553,"impl-From%3CError%3E-for-PolarsError"],[3554,"impl-From%3CError%3E-for-PolarsError"],[3556,"impl-From%3CTryReserveError%3E-for-PolarsError"],[3557,"impl-From%3CParquetError%3E-for-PolarsError"],[3558,"impl-From%3CUtf8Error%3E-for-PolarsError"],[3693,"impl-Display-for-DataFrame"],[3694,"impl-Debug-for-DataFrame"],[3700,"impl-FromIterator%3CSeries%3E-for-DataFrame"],[3701,"impl-FromIterator%3CColumn%3E-for-DataFrame"],[3727,"impl-Index%3CRangeToInclusive%3Cusize%3E%3E-for-DataFrame"],[3728,"impl-Index%3CRangeInclusive%3Cusize%3E%3E-for-DataFrame"],[3729,"impl-Index%3C%26str%3E-for-DataFrame"],[3730,"impl-Index%3CRangeFull%3E-for-DataFrame"],[3731,"impl-Index%3Cusize%3E-for-DataFrame"],[3732,"impl-Index%3CRangeFrom%3Cusize%3E%3E-for-DataFrame"],[3733,"impl-Index%3CRange%3Cusize%3E%3E-for-DataFrame"],[3734,"impl-Index%3CRangeTo%3Cusize%3E%3E-for-DataFrame"],[3753,"impl-Container-for-DataFrame"],[3754,"impl-DataFrame"],[3762,"impl-DataFrame"],[3763,"impl-Container-for-DataFrame"],[3806,"impl-DataFrame"],[3807,"impl-Container-for-DataFrame"],[3811,"impl-Container-for-DataFrame"],[3812,"impl-DataFrame"],[3835,"impl-TryFrom%3C(RecordBatchT%3CBox%3Cdyn+Array%3E%3E,+%26Schema%3CArrowField%3E)%3E-for-DataFrame"],[3837,"impl-TryFrom%3CStructArray%3E-for-DataFrame"],[3878,"impl-Add-for-%26Column"],[3879,"impl-Add%3CT%3E-for-%26Column"],[3880,"impl-Add-for-Column"],[3881,"impl-Add%3CT%3E-for-Column"],[3904,"impl-Column"],[3905,"impl-BitAnd-for-%26Column"],[3906,"impl-BitAnd-for-Column"],[3907,"impl-BitOr-for-Column"],[3908,"impl-BitOr-for-%26Column"],[3909,"impl-BitXor-for-%26Column"],[3910,"impl-BitXor-for-Column"],[3938,"impl-Div%3CT%3E-for-%26Column"],[3939,"impl-Div-for-Column"],[3940,"impl-Div-for-%26Column"],[3941,"impl-Div%3CT%3E-for-Column"],[3964,"impl-From%3CScalarColumn%3E-for-Column"],[3965,"impl-From%3CSeries%3E-for-Column"],[4011,"impl-Mul%3CT%3E-for-%26Column"],[4012,"impl-Mul-for-%26Column"],[4013,"impl-Mul-for-Column"],[4014,"impl-Mul%3CT%3E-for-Column"],[4029,"impl-Rem%3CT%3E-for-%26Column"],[4030,"impl-Rem%3CT%3E-for-Column"],[4031,"impl-Rem-for-%26Column"],[4032,"impl-Rem-for-Column"],[4051,"impl-Sub-for-Column"],[4052,"impl-Sub%3CT%3E-for-%26Column"],[4053,"impl-Sub-for-%26Column"],[4054,"impl-Sub%3CT%3E-for-Column"],[4231,"impl-Debug-for-GroupByMethod"],[4232,"impl-Display-for-GroupByMethod"],[4239,"impl-From%3CVec%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E%3E-for-GroupsIdx"],[4240,"impl-From%3CVec%3C(Vec%3Cu32%3E,+Vec%3CUnitVec%3Cu32%3E%3E)%3E%3E-for-GroupsIdx"],[4241,"impl-From%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E-for-GroupsIdx"],[4274,"impl-IntoIterator-for-GroupsIdx"],[4275,"impl-IntoIterator-for-%26GroupsIdx"],[4277,"impl-IntoParallelIterator-for-%26GroupsIdx"],[4278,"impl-IntoParallelIterator-for-GroupsIdx"],[5625,"impl-ArrayFromIter%3COption%3C()%3E%3E-for-StructArray"],[5626,"impl-ArrayFromIter%3C()%3E-for-StructArray"],[5630,"impl-ArrayFromIterDtype%3COption%3C()%3E%3E-for-StructArray"],[5631,"impl-ArrayFromIterDtype%3C()%3E-for-StructArray"],[5659,"impl-Arc%3CMaybeUninit%3CT%3E,+A%3E"],[5660,"impl-Arc%3C%5BMaybeUninit%3CT%3E%5D,+A%3E"],[5683,"impl-Flags-for-OptFlags"],[5684,"impl-OptFlags"],[6404,"impl-Default-for-SpecialEq%3CArc%3Cdyn+ColumnBinaryUdf%3E%3E"],[6405,"impl-Default-for-SpecialEq%3CArc%3Cdyn+FunctionOutputField%3E%3E"],[6406,"impl-Default-for-SpecialEq%3CArc%3Cdyn+BinaryUdfOutputField%3E%3E"],[6416,"impl-Default-for-Arc%3Cstr%3E"],[6417,"impl-Default-for-Arc%3CCStr%3E"],[6418,"impl-Default-for-Arc%3CT%3E"],[6419,"impl-Default-for-Arc%3C%5BT%5D%3E"],[6898,"impl-Expr"],[6899,"impl-PartialEq-for-Expr"],[6902,"impl-PartialEq-for-SpecialEq%3CSeries%3E"],[6903,"impl-PartialEq-for-SpecialEq%3CArc%3CT%3E%3E"],[6922,"impl-PartialEq-for-Arc%3CT,+A%3E"],[6923,"impl-PartialEq%3Cdyn+Array%3E-for-Arc%3Cdyn+Array%3E"],[6924,"impl-PartialEq%3Cdyn+Scalar%3E-for-Arc%3Cdyn+Scalar%3E"],[6929,"impl-PartialEq-for-StructArray"],[6930,"impl-PartialEq%3C%26dyn+Array%3E-for-StructArray"],[7206,"impl-Debug-for-Duration"],[7207,"impl-Display-for-Duration"],[7224,"impl-Debug-for-JoinType"],[7225,"impl-Display-for-JoinType"],[7227,"impl-Display-for-JoinValidation"],[7228,"impl-Debug-for-JoinValidation"],[7246,"impl-Debug-for-Expr"],[7247,"impl-Display-for-Expr"],[7249,"impl-Display-for-Operator"],[7250,"impl-Debug-for-Operator"],[7252,"impl-Debug-for-BooleanFunction"],[7253,"impl-Display-for-BooleanFunction"],[7254,"impl-Debug-for-CategoricalFunction"],[7255,"impl-Display-for-CategoricalFunction"],[7256,"impl-Debug-for-TemporalFunction"],[7257,"impl-Display-for-TemporalFunction"],[7258,"impl-Display-for-PowFunction"],[7259,"impl-Debug-for-PowFunction"],[7260,"impl-Debug-for-StringFunction"],[7261,"impl-Display-for-StringFunction"],[7262,"impl-Debug-for-StructFunction"],[7263,"impl-Display-for-StructFunction"],[7264,"impl-Display-for-FunctionExpr"],[7265,"impl-Debug-for-FunctionExpr"],[7279,"impl-UpperHex-for-OptFlags"],[7280,"impl-LowerHex-for-OptFlags"],[7281,"impl-Octal-for-OptFlags"],[7282,"impl-Debug-for-OptFlags"],[7283,"impl-Binary-for-OptFlags"],[7286,"impl-Display-for-Arc%3CT,+A%3E"],[7287,"impl-Debug-for-Arc%3CT,+A%3E"],[7288,"impl-Pointer-for-Arc%3CT,+A%3E"],[7318,"impl-From%3CLazyGroupBy%3E-for-LazyFrame"],[7319,"impl-From%3CDslPlan%3E-for-LazyFrame"],[7397,"impl-From%3Cu32%3E-for-Expr"],[7398,"impl-From%3Cu16%3E-for-Expr"],[7399,"impl-From%3Ci32%3E-for-Expr"],[7400,"impl-From%3C%26str%3E-for-Expr"],[7402,"impl-From%3Ci8%3E-for-Expr"],[7403,"impl-From%3Cu64%3E-for-Expr"],[7404,"impl-From%3Cbool%3E-for-Expr"],[7405,"impl-From%3Cu8%3E-for-Expr"],[7406,"impl-From%3Ci16%3E-for-Expr"],[7407,"impl-From%3CAggExpr%3E-for-Expr"],[7408,"impl-From%3Ci64%3E-for-Expr"],[7409,"impl-From%3Cf64%3E-for-Expr"],[7410,"impl-From%3Cf32%3E-for-Expr"],[7413,"impl-From%3CListFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[7414,"impl-From%3CFunctionExpr%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[7415,"impl-From%3CTemporalFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[7416,"impl-From%3CBinaryFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[7417,"impl-From%3CArrayFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[7418,"impl-From%3CStructFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[7419,"impl-From%3CStringFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[7420,"impl-From%3CRangeFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[7421,"impl-From%3CBooleanFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[7422,"impl-From%3CCategoricalFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[7430,"impl-From%3CCategoricalFunction%3E-for-FunctionExpr"],[7431,"impl-From%3CStringFunction%3E-for-FunctionExpr"],[7432,"impl-From%3CBinaryFunction%3E-for-FunctionExpr"],[7433,"impl-From%3CBooleanFunction%3E-for-FunctionExpr"],[7449,"impl-From%3CString%3E-for-Selector"],[7450,"impl-From%3C%26str%3E-for-Selector"],[7451,"impl-From%3CExpr%3E-for-Selector"],[7452,"impl-From%3CPlSmallStr%3E-for-Selector"],[7457,"impl-From%3C%26%5BT%5D%3E-for-Arc%3C%5BT%5D%3E"],[7458,"impl-From%3CPathBuf%3E-for-Arc%3CPath%3E"],[7459,"impl-From%3C%26Path%3E-for-Arc%3CPath%3E"],[7460,"impl-From%3CVec%3CT,+A%3E%3E-for-Arc%3C%5BT%5D,+A%3E"],[7461,"impl-From%3CCompactString%3E-for-Arc%3Cstr%3E"],[7462,"impl-From%3CBox%3CT,+A%3E%3E-for-Arc%3CT,+A%3E"],[7463,"impl-From%3CString%3E-for-Arc%3Cstr%3E"],[7464,"impl-From%3COsString%3E-for-Arc%3COsStr%3E"],[7465,"impl-From%3C%26str%3E-for-Arc%3Cstr%3E"],[7466,"impl-From%3CArc%3Cstr%3E%3E-for-Arc%3C%5Bu8%5D%3E"],[7467,"impl-From%3C%5BT;+N%5D%3E-for-Arc%3C%5BT%5D%3E"],[7468,"impl-From%3C%26OsStr%3E-for-Arc%3COsStr%3E"],[7470,"impl-From%3CT%3E-for-Arc%3CT%3E"],[7471,"impl-From%3C%26CStr%3E-for-Arc%3CCStr%3E"],[7472,"impl-From%3CCString%3E-for-Arc%3CCStr%3E"],[7473,"impl-From%3CCow%3C\'a,+B%3E%3E-for-Arc%3CB%3E"],[7480,"impl-From%3CGrowableStruct%3C\'a%3E%3E-for-StructArray"],[7481,"impl-From%3CMutableStructArray%3E-for-StructArray"],[7484,"impl-From%3Cf64%3E-for-Scalar"],[7485,"impl-From%3Ci64%3E-for-Scalar"],[7486,"impl-From%3Ci32%3E-for-Scalar"],[7487,"impl-From%3Ci16%3E-for-Scalar"],[7488,"impl-From%3Ci8%3E-for-Scalar"],[7489,"impl-From%3Cu8%3E-for-Scalar"],[7490,"impl-From%3Cu64%3E-for-Scalar"],[7491,"impl-From%3Cu16%3E-for-Scalar"],[7492,"impl-From%3Cf32%3E-for-Scalar"],[7493,"impl-From%3Cu32%3E-for-Scalar"],[7501,"impl-Flags-for-OptFlags"],[7502,"impl-OptFlags"],[7507,"impl-FromIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[7508,"impl-FromIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[7516,"impl-FromTrustedLenIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[7517,"impl-FromTrustedLenIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[7530,"impl-FromIteratorReversed%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[7531,"impl-FromIteratorReversed%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[8631,"impl-Array-for-StructArray"],[8632,"impl-StructArray"],[8638,"impl-StructArray"],[8639,"impl-Array-for-StructArray"],[8903,"impl-ArrayFromIter%3COption%3C()%3E%3E-for-StructArray"],[8904,"impl-ArrayFromIter%3C()%3E-for-StructArray"],[8908,"impl-ArrayFromIterDtype%3COption%3C()%3E%3E-for-StructArray"],[8909,"impl-ArrayFromIterDtype%3C()%3E-for-StructArray"],[9355,"impl-StructArray"],[9356,"impl-Array-for-StructArray"],[9606,"impl-LazyCsvReader"],[9607,"impl-LazyFileListReader-for-LazyCsvReader"],[9608,"impl-LazyJsonLineReader"],[9609,"impl-LazyFileListReader-for-LazyJsonLineReader"],[9650,"impl-LazyCsvReader"],[9651,"impl-LazyFileListReader-for-LazyCsvReader"],[9652,"impl-LazyFileListReader-for-LazyJsonLineReader"],[9653,"impl-LazyJsonLineReader"],[9696,"impl-StructArray"],[9697,"impl-Array-for-StructArray"],[10186,"impl-StrpTimeParser%3Ci32%3E-for-DatetimeInfer%3CInt32Type%3E"],[10187,"impl-StrpTimeParser%3Ci64%3E-for-DatetimeInfer%3CInt64Type%3E"],[10192,"impl-TryFromWithUnit%3CPattern%3E-for-DatetimeInfer%3CInt32Type%3E"],[10193,"impl-TryFromWithUnit%3CPattern%3E-for-DatetimeInfer%3CInt64Type%3E"],[10901,"impl-Debug-for-RollingFunction"],[10902,"impl-Display-for-RollingFunction"],[10932,"impl-Display-for-RollingFunctionBy"],[10933,"impl-Debug-for-RollingFunctionBy"],[11157,"impl-Add-for-Series"],[11158,"impl-Add%3CT%3E-for-Series"],[11159,"impl-Add%3CT%3E-for-%26Series"],[11160,"impl-Add-for-%26Series"],[11176,"impl-AsSeries-for-Series"],[11177,"impl-SeriesSealed-for-Series"],[11229,"impl-Div-for-%26Series"],[11230,"impl-Div-for-Series"],[11231,"impl-Div%3CT%3E-for-%26Series"],[11232,"impl-Div%3CT%3E-for-Series"],[11243,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[11244,"impl-ChunkCompare%3CRhs%3E-for-Series"],[11245,"impl-ChunkCompare%3C%26str%3E-for-Series"],[11247,"impl-ChunkCompare%3C%26str%3E-for-Series"],[11248,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[11249,"impl-ChunkCompare%3CRhs%3E-for-Series"],[11265,"impl-Display-for-Series"],[11266,"impl-Debug-for-Series"],[11271,"impl-From%3CLogical%3CDateType,+Int32Type%3E%3E-for-Series"],[11272,"impl-From%3C_SerdeSeries%3E-for-Series"],[11274,"impl-From%3CLogical%3CTimeType,+Int64Type%3E%3E-for-Series"],[11275,"impl-From%3CLogical%3CDurationType,+Int64Type%3E%3E-for-Series"],[11276,"impl-From%3CLogical%3CDatetimeType,+Int64Type%3E%3E-for-Series"],[11277,"impl-From%3CChunkedArray%3CT%3E%3E-for-Series"],[11283,"impl-FromIterator%3C%26i32%3E-for-Series"],[11284,"impl-FromIterator%3C%26u32%3E-for-Series"],[11285,"impl-FromIterator%3C%26u8%3E-for-Series"],[11286,"impl-FromIterator%3Cu8%3E-for-Series"],[11287,"impl-FromIterator%3COption%3Cu8%3E%3E-for-Series"],[11288,"impl-FromIterator%3COption%3Cu16%3E%3E-for-Series"],[11289,"impl-FromIterator%3COption%3Cu64%3E%3E-for-Series"],[11290,"impl-FromIterator%3Cu32%3E-for-Series"],[11291,"impl-FromIterator%3Cu64%3E-for-Series"],[11292,"impl-FromIterator%3CString%3E-for-Series"],[11293,"impl-FromIterator%3COption%3CString%3E%3E-for-Series"],[11294,"impl-FromIterator%3C%26str%3E-for-Series"],[11295,"impl-FromIterator%3COption%3C%26str%3E%3E-for-Series"],[11296,"impl-FromIterator%3C%26bool%3E-for-Series"],[11297,"impl-FromIterator%3C%26u64%3E-for-Series"],[11298,"impl-FromIterator%3Cbool%3E-for-Series"],[11299,"impl-FromIterator%3COption%3Cbool%3E%3E-for-Series"],[11300,"impl-FromIterator%3C%26f64%3E-for-Series"],[11301,"impl-FromIterator%3Cf64%3E-for-Series"],[11302,"impl-FromIterator%3COption%3Cf64%3E%3E-for-Series"],[11303,"impl-FromIterator%3COption%3Ci8%3E%3E-for-Series"],[11304,"impl-FromIterator%3C%26f32%3E-for-Series"],[11305,"impl-FromIterator%3Cu16%3E-for-Series"],[11306,"impl-FromIterator%3Ci8%3E-for-Series"],[11307,"impl-FromIterator%3C%26i8%3E-for-Series"],[11308,"impl-FromIterator%3C%26u16%3E-for-Series"],[11309,"impl-FromIterator%3Cf32%3E-for-Series"],[11310,"impl-FromIterator%3COption%3Ci16%3E%3E-for-Series"],[11311,"impl-FromIterator%3Ci16%3E-for-Series"],[11312,"impl-FromIterator%3C%26i16%3E-for-Series"],[11313,"impl-FromIterator%3COption%3Cf32%3E%3E-for-Series"],[11314,"impl-FromIterator%3C%26i64%3E-for-Series"],[11315,"impl-FromIterator%3COption%3Ci32%3E%3E-for-Series"],[11316,"impl-FromIterator%3COption%3Cu32%3E%3E-for-Series"],[11317,"impl-FromIterator%3Ci32%3E-for-Series"],[11318,"impl-FromIterator%3Ci64%3E-for-Series"],[11319,"impl-FromIterator%3COption%3Ci64%3E%3E-for-Series"],[11320,"impl-NamedFromOwned%3CVec%3Ci16%3E%3E-for-Series"],[11321,"impl-NamedFromOwned%3CVec%3Ci32%3E%3E-for-Series"],[11322,"impl-NamedFromOwned%3CVec%3Cu8%3E%3E-for-Series"],[11323,"impl-NamedFromOwned%3CVec%3Ci128%3E%3E-for-Series"],[11324,"impl-NamedFromOwned%3CVec%3Ci64%3E%3E-for-Series"],[11325,"impl-NamedFromOwned%3CVec%3Cf64%3E%3E-for-Series"],[11326,"impl-NamedFromOwned%3CVec%3Cu32%3E%3E-for-Series"],[11327,"impl-NamedFromOwned%3CVec%3Cf32%3E%3E-for-Series"],[11328,"impl-NamedFromOwned%3CVec%3Cu64%3E%3E-for-Series"],[11329,"impl-NamedFromOwned%3CVec%3Cu16%3E%3E-for-Series"],[11330,"impl-NamedFromOwned%3CVec%3Ci8%3E%3E-for-Series"],[11342,"impl-ChunkCompare%3C%26str%3E-for-Series"],[11343,"impl-ChunkCompare%3CRhs%3E-for-Series"],[11344,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[11346,"impl-ChunkCompare%3CRhs%3E-for-Series"],[11347,"impl-ChunkCompare%3C%26str%3E-for-Series"],[11348,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[11390,"impl-ChunkCompare%3CRhs%3E-for-Series"],[11391,"impl-ChunkCompare%3C%26str%3E-for-Series"],[11392,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[11394,"impl-ChunkCompare%3C%26str%3E-for-Series"],[11395,"impl-ChunkCompare%3CRhs%3E-for-Series"],[11396,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[11405,"impl-Mul-for-%26Series"],[11406,"impl-Mul%3CT%3E-for-%26Series"],[11407,"impl-Mul%3CT%3E-for-Series"],[11408,"impl-Mul-for-Series"],[11413,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-Series"],[11414,"impl-NamedFrom%3CT,+%5Bi128%5D%3E-for-Series"],[11415,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-Series"],[11416,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-Series"],[11417,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-Series"],[11418,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-Series"],[11419,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-Series"],[11420,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-Series"],[11421,"impl-NamedFrom%3CT,+%5Bu8%5D%3E-for-Series"],[11422,"impl-NamedFrom%3CT,+%5BOption%3CNaiveTime%3E%5D%3E-for-Series"],[11423,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-Series"],[11424,"impl-NamedFrom%3CT,+%5Bu16%5D%3E-for-Series"],[11425,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-Series"],[11426,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-Series"],[11427,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-Series"],[11428,"impl-NamedFrom%3CT,+%5Bi8%5D%3E-for-Series"],[11429,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-Series"],[11430,"impl-NamedFrom%3CT,+ListType%3E-for-Series"],[11431,"impl-NamedFrom%3CT,+%5BOption%3CSeries%3E%5D%3E-for-Series"],[11432,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-Series"],[11433,"impl-NamedFrom%3CT,+%5BNaiveTime%5D%3E-for-Series"],[11434,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-Series"],[11435,"impl-NamedFrom%3CT,+T%3E-for-Series"],[11436,"impl-NamedFrom%3CT,+%5BAnyValue%3C\'a%3E%5D%3E-for-Series"],[11437,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-Series"],[11438,"impl-NamedFrom%3CT,+%5BOption%3CTimeDelta%3E%5D%3E-for-Series"],[11439,"impl-NamedFrom%3C%26Series,+str%3E-for-Series"],[11440,"impl-NamedFrom%3CT,+%5BTimeDelta%5D%3E-for-Series"],[11441,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-Series"],[11442,"impl-NamedFrom%3CT,+%5Bi16%5D%3E-for-Series"],[11443,"impl-NamedFrom%3CT,+%5BOption%3Ci128%3E%5D%3E-for-Series"],[11444,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-Series"],[11445,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-Series"],[11446,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-Series"],[11447,"impl-NamedFrom%3CT,+%5BOption%3Ci16%3E%5D%3E-for-Series"],[11448,"impl-NamedFrom%3CT,+%5BOption%3Ci8%3E%5D%3E-for-Series"],[11449,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-Series"],[11450,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-Series"],[11451,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-Series"],[11452,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDateTime%3E%5D%3E-for-Series"],[11453,"impl-NamedFrom%3CT,+%5BOption%3Cu16%3E%5D%3E-for-Series"],[11454,"impl-NamedFrom%3CT,+%5BOption%3Cu8%3E%5D%3E-for-Series"],[11455,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-Series"],[11456,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-Series"],[11457,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-Series"],[11458,"impl-NamedFrom%3CT,+%5BNaiveDateTime%5D%3E-for-Series"],[11459,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-Series"],[11460,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDate%3E%5D%3E-for-Series"],[11461,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-Series"],[11462,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-Series"],[11463,"impl-NamedFrom%3CT,+%5BNaiveDate%5D%3E-for-Series"],[11464,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-Series"],[11465,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-Series"],[11471,"impl-ChunkCompare%3C%26str%3E-for-Series"],[11472,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[11473,"impl-ChunkCompare%3CRhs%3E-for-Series"],[11475,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[11476,"impl-ChunkCompare%3CRhs%3E-for-Series"],[11477,"impl-ChunkCompare%3C%26str%3E-for-Series"],[11485,"impl-Rem%3CT%3E-for-Series"],[11486,"impl-Rem-for-%26Series"],[11487,"impl-Rem%3CT%3E-for-%26Series"],[11516,"impl-Sub-for-Series"],[11517,"impl-Sub-for-%26Series"],[11518,"impl-Sub%3CT%3E-for-%26Series"],[11519,"impl-Sub%3CT%3E-for-Series"],[11543,"impl-TryFrom%3C(%26ArrowField,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"],[11544,"impl-TryFrom%3C(PlSmallStr,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"],[11545,"impl-TryFrom%3C(PlSmallStr,+Box%3Cdyn+Array%3E)%3E-for-Series"],[11547,"impl-TryFrom%3C(%26ArrowField,+Box%3Cdyn+Array%3E)%3E-for-Series"]],"c":"OjAAAAEAAAAAAAwAEAAAADgQgxC/EMIQwxDEEMUQxhDLEM4Q0xDUEPoQ","e":"OzAAAAEAAKQhcgQCAAAABQABAAgAAAALAAIAEAAAABIAAAAUAB4APAAFAEYAAQBJAAsAWAAIAGIAAQBlAAYAbgAAAHAABAB2ABYAjgAAAJAAEACiAAAApQADAKoAAgCxAA0AwAAVANgACADiAAoA7gAAAPAAAQD0AB0AGAEVADABEwBFAQAARwEUAF4BAQBiAQEAZQEeAIYBAgCOAREAoQEDAKgBAgCtAQIAsQEGALkBAAC+ASEA5QEGAO4BCAD4ATUAMQIVAEgCAgBMAgQAUgIFAFwCAABeAhoAegIHAIYCEQCaAhAArAIAAK4CDAC8Ag4AzgIBANECAQDVAgAA2QIBAOACAADkAgcA7gICAPICDQABAwAAAwMoAC4DAgAyAyMAWQM1AJEDCACeAxEAswNcAB0EEgA7BAcARARJAJEEDgChBAEApAQZAL8EAADCBA4A1AQCANoEAgDfBBwA/QQJAAgFCgAdBQAAIAUAACUFHQBHBRIAXAUAAF4FCQBqBQMAcAUBAHQFDQCLBQAAjgUAAJUFBwCeBQcAswUBALcFAAC6BQMAwgUFAMkFBADVBQsA6AUEAO8FDQD/BQYACQYHABIGAQAWBhYALgYIADgGAAA7BgEAPgYBAEMGEABVBgAAWAYEAF4GAgBiBgEAZQYHAG4GAABwBgUAeAYBAHsGAAB9BgEAgAYDAIUGAwCKBgIAjgYDAJQGAACXBgAAnwYAAKQGAACnBgEArAYBAK8GAACyBgAAugYAAMAGAwDMBgYA1gYQAOkGBQDxBggA/AYEAAIHAAAFBwAABwcBAA0HBQAWBwEAHwcBACsHAAAtBwEAMAcAADMHAAA1BwAAOQcAADsHAABABwwATwcCAF4HAABgBwcAaQcBAGwHAABwBwAAcgcDAHcHAQB6BwUAhgcWAJ4HAQCiBwQAqAcDAK8HBwDEBwMAyQcIANMHBADaBwIA3gcFAOYHAADoBw4A+wcBAP8HAAABCAAABggBAAoIAAAMCAYAFAgAABYIAAAZCAEAHQgAAB8IAQAiCAAAJAgCACgIDAA2CAAAOAgBADsIAAA9CAEAQAgAAEIIAQBFCAAARwgBAEoIAwBRCAAAVQgBAFkIAABcCAAAXggAAGAIAwBlCAAAaAgIAHIIAgB3CAQAfQgBAIEIAACDCAIAhwgBAI0IAwCSCAEAlQgAAJcIAQCaCAAAnAgBAJ8IAAChCAEApAgAAKYIAQCpCAAAqwgAAK4IJQDVCBcA7ggDAPMIagBhCXkA3AkIAOYJnACECgUAjAowAL4KEwDTCgIA2AoBAOcKAQDqCgIA7goAAPAKAQDzCgAA9QoBAAwLAQAQCwAAFQsHACALAAAjCwIAJwsFAC4LBAA0CwUAOwsAAD0LGgBdCw4AbgstAJ0LAADKCwkA1QsAANcLAADZCwIA3QsDAOILAQDnCwAA6QsHAPILAAD1CwIA+gsDAP8LAAACDA4AEwwAABYMDgAmDAAAKQwLADYMDQBFDAEASAwAAEoMDQBZDAAAYQwAAGMMAQBpDBAAfAwAAH4MAgCDDCEApwwBAKwMZgAUDTIASA0BAEsNOQCGDQEAiQ0IAJMNAACVDQEAmA0EAJ4NAQCjDQAApQ0CAKkNAACsDQQAsg0EALgNEgDMDREA4A0DAOUNBgDvDQUA9g0YABIOAAAVDgsAIg4DACsOFQBDDhAAXQ4BAGEOAgBlDgAAZw4AAGwOAwB+DgAAhQ4AAIcOAACJDgEAkA4MAKMOAgCqDgAArg4BALQOAAC6DgEAvQ4AAMoOAQDODgAA1Q4AAN0OAQDgDgEA5A4AAOYOAQDuDgAA8A4EAPgOBgABDwoADQ8AABAPAQAVDwQAIg8AACQPBgA2DwIAOw8BAD4PEABRDx0AcQ8NAIIPBQCLDwkAlw8DAJwPCwCqDw0Aug8KAMYPEwDcDwAA3w8CAOMPEwD4Dw4ACBACAAwQCgAYEAEAGxADACAQAwAlEAkAMBAHADkQAQA8EBwAWhAoAIQQBgCQEAMAlxADAJ0QAAChEAcAsRANAMAQAQDHEAMAzBABANAQAgDVEAAA1xAgAPsQDAAKEQUAEREHABoRIwBAEQ4AUBEOAGARAABiEQAAZBEDAGsRBgB1EQ4AhhEGAI8RAACSEQgAnBEBAKARBACmEQUArREAALIRCQC9EQEAwREEAMcRAQDKEQoA1hEAANkRAADbEQkA5hEAAOsRCQD2EQUAABIAAAMSAAALEgIAEhIAABUSAQAbEggAJRIAACcSAAApEgAAKxIRAEASBwBJEgEATBIFAFYSBABeEgIAYhIBAGkSAwBuEgAAcBIJAHsSAAB+EgQAhBIGAI0SAgCSEgAAlRIAAJcSAgCcEgIAoBIFAKcSBACtEgMAtBICALoSAAC8EgEAwBIAAMISBADJEg8A2hIAAN0SAQDgEgMA5hICAOwSIAAPEwAAERMBABUTAAAXEwEAGxMAAB0TAQAhEwAAIxMFACwTAgAxEwAANBMAADcTAAA5EwIAPRMCAEETCgBOEwcAVxMAAFkTAABdEwEAYRMAAGMTAABlEwEAaBMBAGsTAQBwEwAAchMNAIMTBQCKEwcAlBMCAJgTBgCjEwEAphMAAKgTAQCrEwQAsRMDALYTAgC6EwAAvBMEAMITAADEEwYAzBMEANITAQDVEwEA2BMBANsTAQDeEwAA4BMAAOITAADmEwIA6xMDAPATBwD6EwIAARQAAAMUBgALFAMAERQAABMUAAAWFAAAGBQDAB0UAgAhFAAAIxQCACcUAAApFAcAMhQGADsUFQBSFBQAahQBAG0UDwB/FAAAgRQBAIUUDACTFAAAlRQCAJoUAQCfFAEApBQHAK0UAwC1FAYAvRQJAMkUAwDOFAgA2BQAANoUAgDfFAIA5hQFAO0UEgACFQAABBUBAAgVAAAKFQEADhUAABAVAQAUFQAAFhUEAB0VAwAiFQEAJRUBACsVCQA2FQAAORUGAEIVAgBGFV0ApRUFALAVAACyFQAAtRUGAL4VAADGFQAAyhUAAMwVAADQFQUA2hUAAN4VAADlFQAA6RUAAPUVAgD5FQgAAxYAAAUWAQAIFgIADxYBABIWBAAYFgEAIBYKAC0WAAAvFgAAMhYAADQWAAA2FgAAOBYAADoW9QAxFwEANBcBADcXAAA5FwIAPxcAAEMXAABHFwAASRcAAEsXAABRFwAAVBcBAFcXAABhF08AshcKAL4XtwB3GAEAfRgCAIMYAgCJGAoAmBgEAJ4YAACkGAAAphgAALAYAQC0GAAAthgAALwYAADBGAEA0xgAANgYAgDeGAAA4BgFAOgYKAAVGQABGBoAAB0aAQAgGgMAJxoAACkaAwAxGggAOxpkAKEaDACzGgEAuBoBALsaAAC/GgAAwRoAAMMaAgDHGisA9BoWAAwbCwAbG60AzRsAANQbAADWGwEA2RsAANsbAADfGwAA4xsAAOUbAADpGwAA7BsAAO8bAAD2GwAA+RsCAAAcBgAIHAEACxwAAA0cAwAVHAAAFxwAABkcAQAeHGgAiBwAAIscAACXHAEAvBwAAMQcAADGHAAA5hwDAOscCAD2HAkABx0DAA0dAAAUHQAAGh0DACYdAAAuHQAAOR0BAD0dCQBMHQAATh0AAFEdAABUHQEAXR0BAGIdAgBoHQUAbx0CAHMdAQB3HQIAex0AAH0dAAB/HQAAhB0AAIodAACNHQEAkB0DAJUdAACXHQEAnR0EAKUdAQCpHQAAtB0AALYdQAD6HQMAAh4AAAQeAAAGHgQADR4AAA8eAAARHgEAFB4AABceAQAcHgAAHx5+AKAeAAClHgIAqR4BACgfAQAsHwAALh8GADgfBQA/HwMARB8CAEkfAABLHwEATh8AAFAfAABTHwEAWh8AAGEfAABjHwEAZx8CAGsfAwBxHwIAdh8AAHgfAAB/HwEAgh8CAIwfAACOHwEAkR8AAJUfAgCbHwEAox8DAKkfAQCtHwIAsR8DALcfDgDLHwAA0R8BANgfAADbHwUA5B8AAOwfAgD5HwAAAyAAAAogAAAMIAEADyAAABIgAAAXIAAAGSAAABsgAAAgIAAAJCAAACYgAgAtIAYAOiAIAEggAABKIAAATiAAAFQgAABWIAQAXyABAGIgAQBlIAAAaCAIAHMgAQB2IAAAeSABAH0gAACBIAAAiSAAAIwgAQCTIAEAmSABAJwgBACnIAIAryABALYgAgC6IAIAxSAAAMcgBADNIAUA1CAAANogAwDfIAAA4SACAOcgAADpIAAA9SAAAPggAQD7IAEA/iADAAQhBQALIQQAESEAABYhAAAcIQAAIiEBACghAAAsIQAALiEAADAhAQBTIQAAWCEAAGAhAwBlIQUAbSEBAHchAAB7IQIAfyEEAIchAACJIQEAjCEBAI8hAQCTIQAAliEDAJ0hAACmIQAAqCEAAKohAACwIQMAuCEAALohAAC8IQAAviEAAMAhAADDIQAAxSEAAMshAgDPIQIA0yEHANwhAADeIQAA4iEAAOghAADrIQAA8SEAAPUhCgACIgIAByIAAAoiAgAVIgEAJiIAACgiAAArIgIALyIDADQiAgA4IgAAOyIAAD8iXQCfIg4AsSIBALYiCgDCIgAAxCIBAMcijQBWI3oA1CMAANYjAwDhIwAA5CMPAPUjeQBwJAAAeCQAAH0kAAB/JAAAgSQAAIckBACNJAIAkiQBAJYkAACaJAAAoCQBAKMkAAClJHoAJiUDAC8lAAAyJQEANyUBADslAQA+JQAARSUAAEklAQBPJQAAVSUAAF8lAABmJQEAcSUDAHglAQCIJQAAiiUAAI0lAACPJQAAlyUBAJolAQCgJQAArSUAALQlAQC5JQAAwSUAAMYlAADSJQAA1SUBANglAADaJQEA4iUCAOglFAD+JQEABCYBAAcmRABOJgAAUCYAAFImAQBVJgEAWCYGAGAmPwChJgEApCYIAK8mBQC2JgkAwSYBAMQmAADIJgAAyiYDAM8mAQDSJgUA3CYSAPAmAQDzJgIA+CYAAPwmFgAUJxcAMCcEADknEwBOJwYAZScAAHMnAgCJJwAAkCcIAJ0nAACfJwwArScCALEnEgDFJwEAyCcPANknGQD1JwAA9ycCAPwnCgAIKAEACygGABMoAwAYKAIAHCgAAB8oBgAnKAQALigCADIoBQA6KAAAPCgOAE8oAQBTKAAAVSgAAFooAQBeKAAAYCgEAGYoAABoKAAAaygBAG8oAABxKAEAdCgAAHYoAgB6KAwAiCgAAIooAQCNKAAAjygBAJIoAACUKAEAlygAAJkoAQCcKAMAoygAAKcoAQCrKAAArigAALAoAACyKAMAtygAALooCADEKAIAySgEAM8oAQDTKAAA1SgCANkoAQDfKAMA5CgBAOcoAADpKAEA7CgAAO4oAQDxKAAA8ygBAPYoAAD4KAEA+ygAAP0oAAAAKRIAFCkGAB0pAAAgKREAMykIAD0pAQBAKQgASikAAEwpAQBSKQAAVCkEAF0pAQBmKQIAbCkAAG4pAAB4KQAAhykDAI8pCgCbKQAAnSkIAKgp7wCZKgEAnCoaALgqAQC7KhAAzioSAOIqAADkKhcA/SoBAAErAAADKwsAECsCABcrAAAnKwMALisHAEMrBQBLKwAAVCsAAFYrAQBdKwYAZSsAAGsrCgB/KwUAhisAAIgrAwCNKwUAlisEAJwrAQCgKwAApisEAK8rAgCzKwkAwCsCAMQrAADIKwIAzCsDANQrEQDpKwEA7SsBAPArAADyKwAA9SsCAAEsAwAILAEACywDABEsAQAULDAASCwAAEosAABPLAEAUywBAFcsAABdLAEAYCwDAGgsBAB0LAIAeCwAAHosAAB9LAAAfywBAIMsAQCJLAAAjiwDAJMsAACWLBYAriwcAM0sAQDQLAAA0iwAANUsAQDZLAEA3iwCAOMsAQDmLAAA6SwCAO8sAQDyLAAA9CwAAPYsAAD6LAAA/SwDAAYtAAAOLQAAEC0BABMtDwAkLQUAMC0AADMtAwA4LQAAOy0LAEgtAABKLQAATC0EAFItFgBrLQEAby0PAIAtAQCDLQQA"}],["polars_core",{"t":"EJJJFQQQQCCCQHQQHCCCCCCQQQCCCCCCHCQQQQQQIFGPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNCCNNNNNNNNNNNNNCNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKRRRMMMMMMMMMMMMMMMMMMMMMMMMFIFKKFFINNNNMNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNMMMMNNNNNNNNCNNNNMNNNNNNNNNNNNNNNNNNNNNNNFFFFKFFFNNNNNNMNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNGPPPNNNNNNNNNNNNNNNNNNNNNNNNNKKNNNNNNNNNNNNKMKKNMFKFNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNCCPTTTTFPPTTFKFFGFGKPTTTPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFIKKNNNNNNMNNNNCNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNCHNNNNNNNMNNNNNNNNNMMNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNKIIFMNMNNONNNNNHHHNNHOHMNNNNPKKKKKKKKKKKKKKKKKKKKKKKKKIGPRKKRPPPPPPPPPNMMMMMMMNMCNNNMMNNNNNNNMMNMCMMCNNCMMCMMNNNNNNNNNNNNNNNMMMMNMNMMCMMMCMMNNMMMNNNNMNNCMKRRRKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHPPPGNHNNNNNNNNNNNNNNNNNNHNNNNNKHCCCMMHHHHHHHHHKFFNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNOOOONNOOMMNNNNNNNNNNNNNNNNNNNNNNCHHHHHHHPGRKKKGGKPPPIPIFPFPPPPIFFPPFFKGPFFJJGPPPFPFPPPPIFPPPFPPPPFFIPPPPPPPIFPPPIFKPFRRRSIIIKKPIFPPPIFPPPIFPPPIFPPPIFPKRRRPPPPPPPIFPFKPPPPPPPRPPPKPPIPFFRPRIIIIIIFKKKKRGPKPPPIPFPPPPFGIPRFPPPIFPPPIFPPPIFPPPIFPPPGPPRRRRNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNMNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNMNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNHNNNNNNNNNNNNNNNNOMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMNNMNNFFFKGPFPPPGNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNNCNNNCNNNNNNNNNNNNNNNNNNNNNNNNGPPPPGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNHNNHNNNNNNNHNGPPPPGFHHHPPPPPPFPPPPPPGIGPPPPPPPPNNNNNCNNNNNNNQNNNNNNHNNNNHNQQQQHHNNNNNNNNNNOOOOJJJEEEEEEEGPPNNNNNNNNNHNHHHHHNNHHHHHNNNNNPFPPPPGFPFGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNGKPFPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNONNONNNNOONIPPFGPFGGFFIPPIPKPPPPPPPPPPPFPPPNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNCNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOKKHHHHHHHHMMMKMMPPGGPPPPPPPPPPPPFPPPPPPNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNHHHNNNNNNNNNNNNNNNHHIFFKSHHHNNNNNNNNNNNNNNNNOONNNNHNNNNNNNNNNNNNNNNNGFEKIFIEEPFFFKGKFEEEEEPPPEPITTPPPKKKPFPPIIGKEEEPIIIPPEPEEEKEEPPPKKPEPGPPPIFEKPPPFGEEIEKGPPGFFFPPEPPEEPKPFPEPEEKENNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNOMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHEONNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNQNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMMNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNHNNNNNNNNNNNNNONONNNNNNNNNNNNNNNNNNNNNONNNNNCNHHNNNMOONNONMMNNNNNNNNNNNNCNNNNNNQQQQONNNNMNNNNNCNCMMNMNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCMNNNNNNNNNNNNNNOONNNNNNNOOOOKKKMMMFNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNGPPPPGKMMFHHHKKNNHFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNHRTIKKIHNMNMNMNMNMNMNMNPPGEPPKGGPPPFFIKPNNNNNNNNNNCNNNNNCNMNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNMNMMNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNMNNNNNNNCNNNNNNNNNNNNMNNNNNNNMMNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNMCNNNNMNNNMNNMNNNNNNNMNNNNNMNNNNMNNNNNNNNNNNNNNNNNMMMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFINNNNNNNNNNNNNNNNNNNNNNKKKRMMNNCMMNNMMNNMMNNMMNNKKMNNMNNPPGNNNNNNNNNNNNNNNNNNNNNNNNTTKKKKKFFFFFNNNHHHHHHHNNNHHEHNNNNNNNNNNNNNNNNNNMNNNNNNNNNHHNNNHHNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNOCNNNNNNNNNNNNNNNNNNNMNNNNNNHHHHNNNNNNNNNNNNNNNNNNNMNNNNMNMHMNNNNNNHENNNMHHHMHNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNHHHHHH","n":["IdBuildHasher","POOL","PROCESS_ID","SINGLE_LOCK","StringCacheHolder","apply_method_all_arrow_series","apply_method_physical_integer","apply_method_physical_numeric","assert_df_eq","chunked_array","config","datatypes","df","disable_string_cache","downcast_as_macro_arg_physical","downcast_as_macro_arg_physical_mut","enable_string_cache","error","export","fmt","frame","functions","hashing","match_arrow_dtype_apply_macro_ca","match_dtype_to_logical_apply_macro","match_dtype_to_physical_apply_macro","prelude","random","scalar","schema","series","testing","using_string_cache","utils","with_match_physical_float_polars_type","with_match_physical_float_type","with_match_physical_integer_polars_type","with_match_physical_integer_type","with_match_physical_numeric_polars_type","with_match_physical_numeric_type","ChunkLenIter","ChunkedArray","ChunkedArrayLayout","Multi","MultiNoNull","Single","SingleNoNull","__clone_box","_can_fast_explode","_sum_as_f64","add","","","","add_to","agg_list","all","all_kleene","amortized_iter","amortized_iter_with_name","any","any_kleene","append","apply","apply_amortized","apply_amortized_generic","apply_as_ints","","apply_in_place","apply_into_string_amortized","apply_kernel","apply_kernel_cast","apply_mut","","","apply_nonnull_values_generic","apply_to_inner","apply_to_slice","apply_values","apply_views","arg_sort","arg_sort_multiple","arg_unique","arithmetic","as_binary","as_ref","as_ref_dtype","binary_zip_and_apply_amortized","bitand","bitor","bitxor","borrow","","borrow_mut","","builder","cast","cast_and_apply_in_place","cast_unchecked","cast_with_options","checked_div","checked_div_num","chunk_lengths","","chunks","chunks_mut","clear","clone","clone_into","clone_to_uninit","collect","collect_cheap_metadata","comparison","concat_compact","cont_slice","copy_metadata","copy_metadata_cast","data_views","default","deref","","deref_mut","","div","","","","divide","drop","","","drop_nulls","dtype","equal","","equal_missing","","extend","fill_null_with_values","filter","first","first_non_null","float","fmt","","for_each","for_each_amortized","from","","","from_chunk_iter","from_chunk_iter_like","from_chunks","from_chunks_and_dtype","from_iter","","","from_iter_options","from_iter_trusted_length","","from_iter_values","from_iterator_par","from_par_iter","from_slice","from_slice_options","from_trusted_len_iter_rev","from_vec","from_vec_validity","full","full_null","full_null_like","full_null_with_dtype","get","get_any_value","get_any_value_unchecked","get_as_series","get_distinct_count","get_fast_explode_list","get_flags","get_inner","get_max_value","get_min_value","get_object","get_object_unchecked","get_unchecked","group_tuples","group_tuples_perfect","gt","","gt_eq","","has_nulls","head","init","","init_rand","inner_dtype","interior_mut_metadata","into","","into_column","into_decimal","into_decimal_unchecked","into_iter","into_no_null_iter","into_series","is_empty","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_optimal_aligned","is_sorted_flag","iter","iter_chunks","iter_offsets","iter_validities","iterator","join_compact","last","last_non_null","layout","legacy_div","","legacy_div_scalar","","legacy_div_scalar_lhs","","len","","lhs_div","lhs_rem","lhs_sub","limit","lt","","lt_eq","","max","","max_reduce","mean","","median","median_reduce","merge_metadata","metadata","","metadata_arc","metadata_dyn","metadata_mut","metadata_owned_arc","min","","min_max","min_reduce","mmap_slice","","mul","","","","multiply","n_chunks","n_unique","name","new","","","","","","","","","","","","","","","","","","","","","","","","new_empty","new_from_index","new_from_vec","new_from_vec_and_validity","new_vec","new_with_dims","none_to_nan","not_equal","","not_equal_missing","","null_count","object","ops","par_iter","","par_iter_indexed","","prod_reduce","prune_empty_chunks","quantile","quantile_reduce","rand_bernoulli","rand_normal","rand_standard_normal","rand_uniform","rechunk","ref_field","rem","","","","remainder","rename","reverse","rolling_map","rolling_map_float","sample_frac","sample_n","scatter_single","scatter_with","set","set_fast_explode","set_fast_explode_list","set_inner_dtype","set_null_count","set_sorted_flag","shift","shift_and_fill","shrink_to_fit","slice","","sort","sort_with","split_at","","std","std_reduce","sub","","","","subtract","sum","","sum_reduce","tail","take","","take_unchecked","","temporal","to_bytes_hashes","to_canonical","to_decimal","to_logical","to_ndarray","","to_owned","to_string_unchecked","to_vec","to_vec_null_aware","true_div","","true_div_scalar","","true_div_scalar_lhs","","try_apply_amortized","try_apply_amortized_generic","try_apply_into_string_amortized","try_apply_nonnull_values_generic","try_from","","try_from_chunk_iter","try_into","","try_zip_and_apply_amortized","type_id","","unique","unpack_series_matching_type","unset_fast_explode_list","value_unchecked","var","var_reduce","vzip","","with_chunk","with_chunk_like","with_chunks","with_name","with_nullable_idx","with_sorted_flag","wrapping_abs","","wrapping_add","","wrapping_add_scalar","","wrapping_floor_div","","wrapping_floor_div_scalar","","wrapping_floor_div_scalar_lhs","","wrapping_mod","","wrapping_mod_scalar","","wrapping_mod_scalar_lhs","","wrapping_mul","","wrapping_mul_scalar","","wrapping_neg","","wrapping_sub","","wrapping_sub_scalar","","wrapping_sub_scalar_lhs","","wrapping_trunc_div","","wrapping_trunc_div_scalar","","wrapping_trunc_div_scalar_lhs","","zip_and_apply_amortized","zip_with","ArithmeticChunked","Out","Scalar","TrueDivOut","legacy_div","legacy_div_scalar","legacy_div_scalar_lhs","true_div","true_div_scalar","true_div_scalar_lhs","wrapping_abs","wrapping_add","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul_scalar","wrapping_neg","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","BinViewChunkedBuilder","BinaryChunkedBuilder","BooleanChunkedBuilder","ChunkedBuilder","NewChunkedArray","NullChunkedBuilder","PrimitiveChunkedBuilder","StringChunkedBuilder","__clone_box","","","","append_null","","","","","append_option","","append_value","","","","borrow","","","","borrow_mut","","","","clone","","","","clone_into","","","","clone_to_uninit","","","","deref","","","","deref_mut","","","","drop","","","","finish","","","","","","","","from","","","","from_iter_options","from_iter_values","from_slice","from_slice_options","init","","","","into","","","","list","new","","","","shrink_to_fit","","","","to_owned","","","","try_from","","","","try_into","","","","type_id","","","","vzip","","","","AnonymousListBuilder","AnonymousOwnedListBuilder","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListNullChunkedBuilder","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","append_array","append_empty","","append_iter","","append_iter_values","append_null","","","","","","","","append_opt_array","append_opt_series","","append_opt_slice","append_series","","","","","","","","append_slice","append_trusted_len_iter","","append_values_iter","","borrow","","","","","","","borrow_mut","","","","","","","builder","default","","deref","","","","","","","deref_mut","","","","","","","drop","","","","","","","fast_explode","","","","","field","","","","","finish","","","","from","","","","","","","get_list_builder","init","","","","","","","inner_array","","","","","into","","","","","","","new","","","","","","","new_with_values_type","try_from","","","","","","","try_into","","","","","","","type_id","","","","","","","vzip","","","","","","","CastOptions","NonStrict","Overflowing","Strict","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","","","fmt","from","hash","init","into","strict","to_owned","try_from","try_into","type_id","vzip","ChunkedCollectInferIterExt","ChunkedCollectIterExt","collect_ca","collect_ca_like","collect_ca_trusted","collect_ca_trusted_like","collect_ca_trusted_with_dtype","collect_ca_with_dtype","try_collect_ca","try_collect_ca_like","try_collect_ca_trusted","try_collect_ca_trusted_like","try_collect_ca_trusted_with_dtype","try_collect_ca_with_dtype","Canonical","canonical","ChunkedCollectParIterExt","FromParIterWithDtype","collect_ca_with_dtype","from_par_iter_with_dtype","BoolIterNoNull","PolarsIterator","SomeIterator","borrow","","borrow_mut","","deref","","deref_mut","","drop","","from","","init","","into","","into_iter","","new","next","","next_back","","par","size_hint","","try_from","","try_into","","type_id","","vzip","","list","string","Conflict","DEFAULT","DISTINCT_COUNT","FAST_EXPLODE_LIST","","IMMetadata","Keep","Locked","MAX_VALUE","MIN_VALUE","Metadata","MetadataCollectable","MetadataEnv","MetadataFlags","MetadataMerge","MetadataProperties","MetadataReadGuard","MetadataTrait","New","SORTED","SORTED_ASC","SORTED_DSC","Unlocked","__clone_box","","","","","all","","bitand","","bitand_assign","","bitor","","bitor_assign","","bits","","","","bitxor","","bitxor_assign","","borrow","","","","","","","borrow_mut","","","","","","","clone","","","","","clone_into","","","","","clone_to_uninit","","","","","collect_cheap_metadata","","complement","","contains","","default","","","","deref","","","","","","","","deref_mut","","","","","","","difference","","disabled","distinct_count","","","distinct_count_opt","drop","","","","","","","empty","","enabled","eq","","experimental_enabled","extend","","fast_explode_list","fast_explode_list_opt","filter_props","filter_props_cast","flags","flags_opt","fmt","","","","","","","","","","","","from","","","","","","","from_bits","","from_bits_retain","","","","from_bits_truncate","","from_iter","","from_name","","get_distinct_count","get_fast_explode_list","","get_flags","","","get_max_value","get_min_value","get_mut","get_sorted_flag","init","","","","","","","insert","","intersection","","intersects","","into","","","","","","","into_iter","","is_all","","is_empty","","","is_sorted","is_sorted_any","is_sorted_ascending","is_sorted_descending","iter","","iter_names","","log","logfile","max_value","","","max_value_opt","merge","min_value","","","min_value_opt","new","not","","read","remove","","set","","set_distinct_count","set_fast_explode_list","","set_flags","set_max_value","set_min_value","set_sorted_ascending","set_sorted_descending","set_sorted_flag","","sorted","sorted_opt","sub","","sub_assign","","symmetric_difference","","take","to_owned","","","","","toggle","","try_from","","","","","","","try_into","","","","","","","try_read","try_write","type_id","","","","","","","union","","upcast","vzip","","","","","","","with_cheap_metadata","","write","ObjectArray","ObjectValueIter","PolarsObject","PolarsObjectSafe","__clone_box","_split_at_unchecked","arr_from_iter","","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_any","","as_any_mut","borrow","borrow_mut","builder","check_bound","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","dtype","eq","equal","fmt","from","","full_null","get","get_dtype","if_then_else","if_then_else_broadcast_both","if_then_else_broadcast_false","if_then_else_broadcast_true","init","into","into_iter","is_null_unchecked","is_valid_unchecked","","iter","","len","null_count","registry","set_polars_allow_extension","set_validity","slice","slice_typed","slice_typed_unchecked","slice_unchecked","split_at_boxed","split_at_boxed_unchecked","to_boxed","","to_owned","try_arr_from_iter","","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_from","try_into","type_id","type_name","","validity","value","value_unchecked","","values_iter","","vzip","with_validity","","with_validity_typed","ObjectChunkedBuilder","append_null","","append_option","append_value","","append_value_from_any","borrow","borrow_mut","default","deref","deref_mut","drop","finish","from","init","into","new","to_series","try_from","try_into","type_id","vzip","AnonymousObjectBuilder","BuilderConstructor","ObjectConverter","ObjectRegistry","append_null","append_option","append_value","borrow","borrow_mut","builder_constructor","deref","deref_mut","drop","fmt","from","get_object_builder","get_object_converter","get_object_physical_type","init","into","is_object_builder_registered","physical_dtype","register_object_builder","to_series","try_from","try_into","type_id","vzip","Backward","ChunkAgg","ChunkAnyValue","ChunkApply","ChunkApplyKernel","ChunkBytes","ChunkCast","ChunkCompare","ChunkExpandAtIndex","ChunkExplode","ChunkFillNullValue","ChunkFilter","ChunkFull","ChunkFullNull","ChunkQuantile","ChunkReverse","ChunkRollApply","ChunkSet","ChunkShift","ChunkShiftFill","ChunkSort","ChunkTake","ChunkTakeUnchecked","ChunkUnique","ChunkVar","ChunkZip","FillNullLimit","FillNullStrategy","Forward","FuncRet","IsFirstDistinct","IsLastDistinct","Item","Max","MaxBound","Mean","Min","MinBound","None","One","Some","Zero","__clone_box","_sum_as_f64","apply","apply_kernel","apply_kernel_cast","apply_to_slice","apply_values","arg_sort","arg_sort_multiple","arg_unique","arity","borrow","borrow_mut","cast","cast_unchecked","cast_with_options","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","eq","equal","equal_missing","explode","explode_and_offsets","fill_null","fill_null_with_values","filter","float_sorted_arg_max","fmt","from","full","","full_null","gather","get_any_value","get_any_value_unchecked","gt","gt_eq","hash","init","into","is_first_distinct","is_last_distinct","lt","lt_eq","max","mean","median","min","min_max","n_unique","new_from_index","not_equal","not_equal_missing","offsets","quantile","reverse","rolling_map","scatter_single","scatter_with","search_sorted","set","shift","shift_and_fill","sort","","sort_with","std","sum","take","take_unchecked","to_byte_slices","to_owned","try_from","try_into","type_id","unique","var","vzip","zip","zip_with","BinaryFnMut","Ret","","","TernaryFnMut","UnaryFnMut","apply_binary_kernel_broadcast","apply_binary_kernel_broadcast_owned","binary","binary_elementwise","binary_elementwise_for_each","binary_elementwise_into_string_amortized","binary_elementwise_values","binary_mut_values","binary_mut_with_options","binary_owned","binary_to_series","binary_unchecked_same_type","broadcast_binary_elementwise","broadcast_binary_elementwise_values","broadcast_try_binary_elementwise","ternary_elementwise","try_binary","try_binary_elementwise","try_binary_mut_with_options","try_binary_unchecked_same_type","try_ternary_elementwise","try_unary_elementwise","try_unary_elementwise_values","try_unary_mut_with_options","unary_elementwise","unary_elementwise_values","unary_kernel","unary_kernel_owned","unary_mut_values","unary_mut_with_options","float_arg_max_sorted_ascending","float_arg_max_sorted_descending","_update_gather_sorted_flag","check_bounds_ca","check_bounds_nulls","Any","Left","Right","SearchSortedSide","__clone_box","binary_search_ca","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","","","fmt","from","hash","init","into","lower_bound_chunks","to_owned","try_from","try_into","type_id","vzip","SlicedArray","_broadcast_bools","arg_bottom_k","arg_sort_multiple","options","slice_typed","slice_typed_unchecked","_arg_bottom_k","_get_rows_encoded","_get_rows_encoded_arr","_get_rows_encoded_ca","_get_rows_encoded_ca_unordered","_get_rows_encoded_compat_array","_get_rows_encoded_unordered","encode_rows_vertical_par_unordered","encode_rows_vertical_par_unordered_broadcast_nulls","SlicedArray","SortMultipleOptions","SortOptions","__clone_box","","borrow","","borrow_mut","","clone","","clone_into","","clone_to_uninit","","default","","deref","","deref_mut","","descending","","drop","","eq","","equivalent","","","","","","fmt","","from","","","","hash","","init","","into","","maintain_order","","multithreaded","","new","","nulls_last","","slice_typed","slice_typed_unchecked","to_owned","","try_from","","try_into","","type_id","","vzip","","with_maintain_order","","with_multithreaded","","with_nulls_last","","with_nulls_last_multi","with_order_descending","","with_order_descending_multi","with_order_reversed","","conversion","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","force_async","get_file_prefetch_size","get_rg_prefetch_size","verbose","Any","AnyValue","Array","ArrayCollectIterExt","ArrayFromIter","ArrayFromIterDtype","ArrowDataType","ArrowTimeUnit","AsRefDataType","Binary","","","BinaryChunked","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryView","Boolean","","","BooleanChunked","BooleanType","CatIter","Categorical","","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","CategoricalOwned","CategoricalType","CompatLevel","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataType","Date","Date32","Date64","DateType","Datetime","DatetimeType","Decimal","","","Decimal256","DecimalChunked","DecimalType","Dictionary","Duration","","DurationType","Enum","","EnumOwned","Extension","FalseT","Field","FieldRef","FixedSizeBinary","FixedSizeList","Float","Float16","Float32","","","Float32Chunked","Float32Type","Float64","","","Float64Chunked","Float64Type","GetAnyValue","Global","GlobalRevMapMerger","HasViews","HashMap","","IDX_DTYPE","IdxArr","IdxCa","IdxType","InitHashMaps","InitHashMaps2","Int","Int128Chunked","Int128Type","Int16","","","Int16Chunked","Int16Type","Int32","","","Int32Chunked","Int32Type","Int64","","","Int64Chunked","Int64Type","Int8","","","Int8Chunked","Int8Type","Interval","IntoScalar","IsNested","IsObject","IsStruct","LargeBinary","LargeList","LargeUtf8","Lexical","List","","","ListChunked","ListType","Local","Logical","LogicalType","Map","Microsecond","Microseconds","Millisecond","Milliseconds","Nanosecond","Nanoseconds","Native","Null","","","NumericNative","Object","","ObjectChunked","ObjectOwned","ObjectType","OwnedObject","OwnedPhysical","Physical","","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","PlRandomState","PlSmallStr","PolarsDataType","PolarsFloatType","PolarsIntegerType","PolarsNumericType","PolarsType","RevMapping","Second","StaticArray","Str","String","","StringChunked","StringOwned","StringType","Struct","Time","Time32","Time64","TimeType","TimeUnit","TimeZone","Timestamp","TrueDivPolarsType","TrueT","UInt16","","","UInt16Chunked","UInt16Type","UInt32","","","UInt32Chunked","UInt32Type","UInt64","","","UInt64Chunked","UInt64Type","UInt8","","","UInt8Chunked","UInt8Type","Union","Unknown","","UnknownKind","Utf8","Utf8View","ValueIterT","ValueT","ZeroablePhysical","ZeroableValueT","__clone_box","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","_can_fast_explode","add","","","","","","","","","","add_to","","","","","","","","","","agg_list","","","","","all","all_kleene","amortized_iter","amortized_iter_with_name","any","any_kleene","apply","","","","","apply_amortized","apply_amortized_generic","apply_as_ints","","apply_kernel","","","apply_kernel_cast","","","apply_mut","","apply_to_inner","apply_to_slice","","","","","apply_values","","","","","apply_views","arg_sort","","","","arg_sort_multiple","","","","arg_unique","","","","arr_from_iter","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_binary","as_borrowed","as_ref","","as_ref_dtype","as_slice","binary_zip_and_apply_amortized","bitand","","bitor","","bitxor","","borrow","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","borrow_mut","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","boxed","call_categorical_merge_operation","cast","","","cast_leaf","cast_unchecked","","","","","cast_with_options","","","","","","","categorical","checked_div","","","","","","","clone","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","clone_into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","clone_to_uninit","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","coerce","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","contains_categoricals","contains_objects","contains_views","create_enum_dtype","default","","","","deref","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","deref_mut","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","div","divide","","","","","","","drop","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dtype","","","","","eq","","","","","","","","","eq_missing","equal","","","","","","equal_missing","","","","","","equivalent","","","","","","","","","","","","","","","","","","","","","","","","explode_and_offsets","field","fill_null_with_values","","filter","","","finish","fmt","","","","","","","","","","","","","","","","for_each_amortized","from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","from_arrow","from_iter","","","","","","","","","from_iter_options","","","","from_iter_trusted_length","","","","","","","","","","from_iter_values","","","","from_par_iter","","","","","","","from_par_iter_with_dtype","from_slice","","","","from_slice_options","","","","from_trusted_len_iter_rev","from_vec","from_zeroable_vec","full","","","","","","","full_null","","","","","","","full_null_with_dtype","get","get_any_value","","","","","","","","","get_any_value_unchecked","","","","","","","","","get_as_series","get_dtype","","","","","","","","","","","","","","","","","","","","","","","","get_inner","get_object","get_object_unchecked","get_str","get_unchecked","","get_values_size","","","group_tuples","","","","","","gt","","","","","","gt_eq","","","","","","hash","","","","","","","hash_impl","idx","implode","init","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","inner_dtype","","","into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","into_column","into_decimal","into_decimal_unchecked","into_iter","","","","","","into_scalar","into_series","","into_static","is_array","is_binary","is_bool","is_boolean","is_categorical","is_date","is_decimal","is_enum","is_float","","is_integer","","is_known","is_list","is_logical","is_nan","is_nested","","is_nested_null","","is_null","","is_numeric","","is_object","is_ord","is_primitive","is_signed_integer","","is_string","is_struct","is_temporal","is_unsigned_integer","","is_view","iter","iter_offsets","last","leaf_dtype","lt","","","","","","lt_eq","","","","","","make_categoricals_compatible","make_list_categoricals_compatible","matches_schema_type","materialize","max","max_reduce","","","mean","median","","median_reduce","","merge_dtypes","min","min_reduce","","","mmap_slice","mul","multiply","","","","","","","n_unique","","name","","new","","","","","","","","","","","","","","new_empty","new_from_index","","","","","","new_from_vec","new_from_vec_and_validity","new_logical","newest","not","","not_equal","","","","","","not_equal_missing","","","","","","offsets","oldest","par_iter","","par_iter_indexed","","partial_cmp","","physical","precision","","quantile","","quantile_reduce","","rand_bernoulli","remainder","","","","","","","reverse","","","","","","revmap","scale","","scatter_single","","","scatter_with","","","set","","","set_fast_explode","set_inner_dtype","set_name","shift","","","","","","shift_and_fill","","","","","","sort","","","","sort_with","","","","std_reduce","","str_value","strict_cast","string_cache","sub","subtract","","","","","","","sum","sum_reduce","","take_unchecked","","","","to_arrow","","","to_arrow_field","to_ascii","to_decimal","to_logical","to_logical_type","to_ndarray","to_owned","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","to_physical","to_physical_type","to_scale","","to_string","","","to_string_unchecked","tot_eq","try_apply_amortized","try_apply_amortized_generic","try_arr_from_iter","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_extract","try_from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","try_into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","try_strict_cast","try_to_arrow","try_to_compact_string","","","try_zip_and_apply_amortized","type_id","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","underlying_physical_type","unique","","","","value","value_unchecked","value_within_range","values_iter","var_reduce","","vec_hash","","","","","","","","","","","","","","","","vec_hash_combine","","","","","","","","","","","","","","","","vzip","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","with_capacity","","","with_nullable_idx","with_validity_typed","zero_sum","zip_and_apply_amortized","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","Global","GlobalRevMapMerger","Lexical","Local","Physical","RevMapping","__clone_box","_can_fast_unique","_with_fast_unique","append","","append_null","append_value","arg_sort","borrow","","","","borrow_mut","","","","call_categorical_merge_operation","cast_with_options","clone","clone_into","clone_to_uninit","default","deref","","","","deref_mut","","","","drain_iter_and_finish","drop","","","","dtype","equal","","","equal_missing","","","finish","","","from","","","","from_cats_and_rev_map_unchecked","from_global_indices_unchecked","from_string_to_enum","full_null","get_any_value","get_any_value_unchecked","get_rev_map","gt","","","gt_eq","","","init","","","","into","","","","into_column","into_iter","into_series","is_empty","is_enum","iter_str","len","lt","","","lt_eq","","","make_categoricals_compatible","make_list_categoricals_compatible","max_reduce","merge_map","min_reduce","n_unique","name","new","","next","not_equal","","","not_equal_missing","","","null_count","physical","register_value","revmap","size_hint","sort","sort_with","string_cache","to_arrow","to_enum","to_global","to_local","to_owned","try_from","","","","try_into","","","","type_id","","","","unique","uses_lexical_ordering","value_counts","vzip","","","","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","__clone_box","","borrow","","borrow_mut","","build_local","clone","","clone_into","","clone_to_uninit","","default","","deref","","deref_mut","","drop","","eq","find","fmt","","from","","get","get_categories","get_optional","init","","into","","is_global","is_local","len","same_src","to_owned","","try_from","","try_into","","type_id","","vzip","","StringCacheHolder","borrow","borrow_mut","default","deref","deref_mut","disable_string_cache","drop","","enable_string_cache","from","hold","init","into","try_from","try_into","type_id","using_string_cache","vzip","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","StringCacheHolder","disable_string_cache","enable_string_cache","using_string_cache","CategoricalRemappingWarning","ColumnNotFound","ComputeError","Context","Duplicate","Err","ErrString","IO","InvalidOperation","MapWithoutReturnDtypeWarning","NoData","Ok","OutOfBounds","PolarsError","PolarsResult","PolarsWarning","SQLInterface","SQLSyntax","SchemaFieldNotFound","SchemaMismatch","ShapeMismatch","StringCacheMismatch","StructFieldNotFound","UserWarning","as_ref","borrow","","borrow_mut","","constants","deref","","","deref_mut","","drop","","feature_gated","fmt","","","from","","","get_warning_function","init","","into","","map_err","new_static","polars_bail","polars_ensure","polars_err","polars_warn","set_warning_function","to_compute_err","to_string","try_from","","try_into","","try_to_compact_string","type_id","","vzip","","error","","msg","","FALSE","LENGTH_LIMIT_MSG","TRUE","_boost_hash_combine","arrow","chrono","num","once_cell","rayon","regex","FloatFmt","Full","Mixed","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","fmt_decimal","from","get_decimal_separator","get_float_fmt","get_float_precision","get_thousands_separator","get_trim_decimal_zeros","init","into","set_decimal_separator","set_float_fmt","set_float_precision","set_thousands_separator","set_trim_decimal_zeros","to_owned","try_from","try_into","type_id","vzip","Any","DataFrame","First","Ignore","Last","None","NullStrategy","PhysRecordBatchIter","Propagate","RecordBatchIter","UniqueKeepStrategy","__clone_box","","","_add_columns","_add_series","_apply_columns","_apply_columns_par","_filter_seq","_select_impl","_select_impl_unchecked","_select_with_schema_impl","_slice_and_realloc","add","","","align_chunks","apply","apply_at_idx","as_single_chunk","as_single_chunk_par","borrow","","","","","borrow_mut","","","","","chunk_lengths","clear","clone","","","clone_into","","","clone_to_uninit","","","column","","columns","default","","deref","","","","","deref_mut","","","","","div","","","drop","","","","","","drop_in_place","drop_many","drop_many_amortized","drop_nulls","dtypes","empty","empty_with_arrow_schema","empty_with_schema","eq","","equals","equals_missing","equivalent","","","estimated_size","explode","","explode_impl","extend","fields","fill_null","filter","fmt","","","","from","","","","","from_iter","","from_rows","from_rows_and_schema","from_rows_iter_and_schema","get","get_column_index","get_column_names","get_column_names_owned","get_column_names_str","get_columns","get_columns_mut","get_row","get_row_amortized","get_row_amortized_unchecked","get_supertype","group_by","","group_by_stable","group_by_with_series","hash","hash_rows","head","height","hstack","hstack_mut","hstack_mut_unchecked","index","","","","","","","","init","","","","","insert_column","into","","","","","into_iter","","is_duplicated","is_empty","is_unique","iter","iter_chunks","","iter_chunks_physical","len","materialized_column_iter","max_horizontal","mean_horizontal","min_horizontal","mul","","","n_chunks","","new","new_no_checks","new_no_length_checks","new_with_broadcast","new_with_broadcast_no_checks","next","","null_count","par_materialized_column_iter","partition_by","partition_by_stable","pipe","pipe_mut","pipe_with_args","pop","ptr_equal","rem","","","rename","replace","replace_column","replace_or_add","reverse","row","sample_frac","sample_n","sample_n_literal","schema","schema_equal","select","select_at_idx","select_by_range","select_columns","select_physical","select_with_schema","select_with_schema_unchecked","set_column_names","shape","shift","should_rechunk","shrink_to_fit","size_hint","","slice","","slice_par","sort","sort_in_place","split_at","","split_chunks","split_chunks_by_n","sub","","","sum_horizontal","tail","take","take_columns","take_unchecked","take_unchecked_impl","to_ndarray","to_owned","","","to_string","transpose","transpose_impl","try_apply","try_apply_at_idx","try_from","","","","","","","try_from_rows_iter_and_schema","try_get_column_index","try_into","","","","","try_to_compact_string","type_id","","","","","unique","unique_impl","unique_stable","vstack","vstack_mut","vstack_mut_unchecked","vzip","","","","","width","with_column","with_column_and_schema","with_column_unchecked","with_row_index","with_row_index_mut","Column","IntoColumn","Scalar","ScalarColumn","Series","__clone_box","","add","","","","agg_first","agg_last","agg_list","agg_max","agg_mean","agg_median","agg_min","agg_n_unique","agg_quantile","agg_sum","agg_var","append","arg_sort","as_materialized_series","","as_scalar_column","as_series","as_single_value_series","binary","binary_offset","bit_repr","bitand","","","bitor","","bitxor","","bool","borrow","","borrow_mut","","cast","","cast_unchecked","","cast_with_options","","categorical","clear","clone","","clone_into","","clone_to_uninit","","decimal","default","deref","","deref_mut","","div","","","","divide","drop","","drop_nulls","dtype","","eq","equal","equal_missing","equals","equals_missing","explode","extend","extend_constant","f32","f64","field","fill_null","filter","fmt","","from","","","","from_single_value_series","full_null","gather_every","get","get_data_ptr","get_flags","get_object","get_unchecked","gt","gt_eq","has_nulls","","head","i16","i32","i64","i8","idx","init","","into","","into_column","","","into_frame","into_materialized_series","is_empty","","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_sorted_flag","len","","list","lt","lt_eq","max_reduce","min_reduce","mul","","","","name","","new","","new_empty","","new_from_index","new_scalar","not_equal","not_equal_missing","null_count","phys_iter","product","rechunk","rem","","","","rename","reshape_list","resize","reverse","sample_frac","sample_n","set_sorted_flag","shift","shrink_to_fit","shuffle","slice","sort","split_at","str","strict_cast","","sub","","","","tail","take","take_materialized_series","","take_slice","take_slice_unchecked","take_unchecked","to_owned","","to_physical_repr","to_series","try_from","","try_into","","type_id","","u16","u32","u64","u8","unique","unique_stable","vec_hash","vec_hash_combine","vzip","","with_name","wrapping_trunc_div_scalar","zip_with","zip_with_same_type","UnpivotArgsIR","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","","","fmt","from","hash","index","init","into","on","to_owned","try_from","try_into","type_id","value_name","variable_name","vzip","BorrowIdxItem","Count","First","GroupBy","GroupByMethod","Groups","GroupsIdx","GroupsIndicator","GroupsProxy","GroupsProxyIter","GroupsProxyParIter","GroupsSlice","Idx","","IdxItem","Implode","IntoGroupsProxy","Last","Max","Mean","Median","Min","NUnique","NanMax","NanMin","Quantile","Slice","","SlicedGroups","Std","Sum","Var","__clone_box","","","","agg_list","aggregations","all","apply","as_list_chunked","borrow","","","","","","","","borrow_mut","","","","","","","","clone","","","","clone_into","","","","clone_to_uninit","","","","count","default","","deref","","","","","","","","","deref_mut","","","","","","","","df","drive_unindexed","drop","","","","","","","","","eq","","equivalent","","","","","","expr","first","","","first_mut","fmt","","","","","fmt_group_by_column","from","","","","","","","","","","","","from_iter","from_par_iter","get","get_groups","get_groups_mut","group_count","group_tuples","","groups","idx_mut","init","","","","","","","","into","","","","","","","","into_idx","into_iter","","","into_par_iter","","","is_empty","","is_sorted_flag","iter","","keys","keys_sliced","last","len","","max","mean","median","min","n_unique","new","","next","nth","par_apply","par_iter","","quantile","select","slice","sort","","std","sum","take_group_firsts","take_group_lasts","take_groups","take_groups_mut","to_owned","","","","to_string","try_from","","","","","","","","try_into","","","","","","","","try_to_compact_string","type_id","","","","","","","","unroll","unwrap_idx","unwrap_slice","var","vzip","","","","","","","","include_nulls","groups","rolling","AggList","TakeExtremum","_agg_helper_idx","_agg_helper_idx_no_null","_agg_helper_slice","_agg_helper_slice_no_null","_rolling_apply_agg_window_no_nulls","_rolling_apply_agg_window_nulls","_slice_from_offsets","_use_rolling_kernels","agg_list","take_max","take_min","PhysicalAggExpr","evaluate","root_name","All","","AnyValueBuffer","AnyValueBufferTrusted","Boolean","","Float32","","Float64","","Int32","","Int64","","Null","","Row","String","","UInt32","","UInt64","","__clone_box","","","add","add_unchecked_borrowed_physical","add_unchecked_owned_physical","borrow","","","borrow_mut","","","clone","","","clone_into","","","clone_to_uninit","","","coerce_dtype","default","deref","","","deref_mut","","","drop","","","eq","equivalent","","","fmt","from","","","","","infer_schema","init","","","into","","","into_series","","new","","","reset","","rows_to_schema_first_non_null","rows_to_schema_supertypes","rows_to_supertypes","to_owned","","","try_from","","","try_into","","","type_id","","","vzip","","","concat_df_diagonal","concat_df_horizontal","IdBuildHasher","IdHasher","IdxHash","VecHash","_HASHMAP_INIT_SIZE","_boost_hash_combine","_df_rows_to_hashes_threaded_vertical","_hash_binary_array","borrow","","borrow_mut","","default","deref","","deref_mut","","drop","","finish","fmt","from","","hash","","idx","init","","into","","populate_multiple_key_hashmap","try_from","","try_into","","type_id","","vec_hash","","vec_hash_combine","","vzip","","write","write_i32","write_i64","write_u32","write_u64","Ambiguous","Arc","ArithmeticChunked","ArrayCollectIterExt","ArrayRef","ArrowField","ArrowSchema","BinaryChunkedBuilder","BooleanChunkedBuilder","C","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","ChunkAggSeries","ChunkId","ChunkedArray","ChunkedBuilder","ChunkedCollectInferIterExt","ChunkedCollectIterExt","Column","ColumnNotFound","ComputeError","Context","DataFrame","Duplicate","DynArgs","EMPTY","EMPTY_REF","Earliest","Err","Fortran","FromData","FromDataBinary","FromDataUtf8","Global","GlobalRevMapMerger","Higher","IO","IdxArr","IdxSize","IndexOrder","IndexToUsize","IntoColumn","IntoSeries","IntoVec","InvalidOperation","LargeBinaryArray","LargeListArray","LargeStringArray","Latest","Lexical","LhsNumOps","Linear","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListFromIter","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","Local","Lower","Midpoint","NamedFrom","NamedFromOwned","Nearest","NewChunkedArray","NoData","NonExistent","None","Null","","NullableChunkId","NullableIdxSize","NumOpsDispatch","NumOpsDispatchChecked","Ok","OutOfBounds","Physical","PlSmallStr","PolarsError","PolarsIterator","PolarsObject","PolarsResult","PrimitiveChunkedBuilder","QuantileAggSeries","QuantileInterpolOptions","Raise","","RevMapping","RollingOptionsFixedWindow","RollingQuantileParams","RollingVarParams","SQLInterface","SQLSyntax","Scalar","SchemaFieldNotFound","SchemaMismatch","Series","SeriesTrait","ShapeMismatch","SlicedArray","Some","StringCacheHolder","StringCacheMismatch","StringChunkedBuilder","StructFieldNotFound","UniqueKeepStrategy","UnpivotArgsIR","VarAggSeries","VecHash","__clone_box","","","","","","","","","","","allocator","as_fd","as_ptr","as_raw_fd","as_ref","","","","","as_str","assume_init","","borrow","","","","","","","","","","","","","","","borrow_mut","","","","","","","","","","","","","call_categorical_merge_operation","cause","center","checked_div","checked_div_num","clone","","","","","","","","","","","clone_into","","","","","","","","","","","clone_to_uninit","","","","","","","","","","","cmp","","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","compare","","context","context_trace","convert_inner_type","datatypes","ddof","decrement_strong_count","decrement_strong_count_in","default","","","","","","","","","default_arrays","deref","","","","","","","","","","","","","","","deref_mut","","","","","","","","","","","","","description","df","downcast","downcast_unchecked","downgrade","drop","","","","","","","","","","","","","","dtype","","eq","","","","","","","","","","equivalent","","","","","","","","","","","","","","","","","","","","","extract","finish","flush","fmt","","","","","","","","","","","","","","","","fn_params","from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","from_data_default","from_data_unchecked_default","","from_iter","","","","","","","","","from_iter_binary_trusted_len","from_iter_binview_trusted_len","from_iter_bool_trusted_len","from_iter_primitive_trusted_len","from_iter_utf8_trusted_len","from_par_iter","from_raw","from_raw_in","from_static","from_str","","from_string","from_vec","ge","get_mut","get_mut_unchecked","get_unchecked","gt","hash","","","","","","idx","increment_strong_count","increment_strong_count_in","indexes_to_usizes","init","","","","","","","","","","","","","inner","inner_mut","interpol","into","","","","","","","","","","","","","into_column","into_inner","into_raw","into_raw_with_allocator","into_series","into_string","is_null","is_null_idx","is_nullable","is_read_vectored","is_valid_bit_pattern","is_write_vectored","iter_names_and_dtypes","le","list","lt","make_categoricals_compatible","make_list_categoricals_compatible","make_mut","max_reduce","","median_reduce","metadata","min_periods","min_reduce","","name","ne","negative_to_usize","new","","","new_cyclic","new_in","new_uninit","new_uninit_in","new_uninit_slice","new_uninit_slice_in","new_zeroed","new_zeroed_in","new_zeroed_slice","new_zeroed_slice_in","null","","","partial_cmp","","pin","pin_in","polars_bail","polars_ensure","polars_err","polars_warn","prob","prod_reduce","","provide","ptr_eq","quantile_reduce","read","read_buf","read_to_end","read_to_string","read_vectored","revmap","seek","slice","slice_typed","slice_typed_unchecked","source","std_reduce","store","string_cache","strong_count","sum_reduce","","to_opt","to_owned","","","","","","","","","","","to_string","","","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_from","","","","","","","","","","","","","","try_into","","","","","","","","","","","","","try_negative_to_usize","try_new","try_new_in","try_new_uninit","try_new_uninit_in","try_new_zeroed","try_new_zeroed_in","try_pin","try_pin_in","try_to_compact_string","","","try_unwrap","type_id","","","","","","","","","","","","","unwrap_or_clone","utf8","var_reduce","vzip","","","","","","","","","","","","","weak_count","weights","window_size","with_metadata","wrap_msg","write","write_char","write_fmt","write_str","write_vectored","error","","msg","","FromData","FromDataBinary","FromDataUtf8","from_data_default","from_data_unchecked_default","","AnonymousBuilder","borrow","borrow_mut","deref","deref_mut","drop","finish","from","init","into","is_empty","new","offsets","push","push_empty","push_multiple","push_null","push_opt","take_offsets","try_from","try_into","type_id","vzip","MutableNullArray","__clone_box","as_any","as_box","as_mut_any","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","dtype","extend_nulls","fmt","from","init","into","len","new","push_null","reserve","shrink_to_fit","to_owned","try_from","try_into","type_id","validity","vzip","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","SlicedArray","slice_typed","slice_typed_unchecked","StringCacheHolder","disable_string_cache","enable_string_cache","using_string_cache","BinaryFromIter","Utf8FromIter","from_values_iter","","set_global_random_seed","Scalar","__clone_box","as_any_value","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","dtype","eq","fmt","from","","","","","","","","","","","init","into","into_column","into_series","is_nan","is_null","new","reduce","to_owned","try_from","try_into","type_id","update","value","vzip","mean_reduce","DataType","IS_ARROW","Schema","SchemaExt","SchemaNamesAndDtypes","SchemaRef","ensure_matching_schema","from","from_arrow_schema","","get_field","","iter_fields","","iter_names_and_dtypes","","to_arrow","","to_supertype","","try_get_field","","Ascending","","BitRepr","ChunkCompare","Descending","","IntoSeries","IsSorted","","Large","Not","","Series","SeriesIter","SeriesPhysIter","SeriesTrait","Small","__clone_box","","_sum_as_f64","","_try_from_arrow_unchecked","_try_from_arrow_unchecked_with_md","add","","","","amortized_iter","append","arg_sort","","arg_unique","","arithmetic","array_ref","as_any","as_any_mut","","as_list","as_mut","as_ref","","as_single_ptr","","","binary","binary_offset","bitand","","bitor","","bitxor","","bool","borrow","","","","borrow_mut","","","","cast","","cast_unchecked","cast_with_options","categorical","checked_div","","","checked_div_num","chunk_lengths","","chunks","chunks_mut","","clear","clone","","clone_inner","clone_into","","clone_to_uninit","","compute_len","decimal","default","deref","","","","","deref_mut","","","","div","","","","dot","drop","","","","drop_nulls","","dtype","","eq","","equal","","","equal_missing","","","equals","equals_missing","equivalent","","","estimated_size","explode","extend","extend_constant","f32","f64","field","","fill_null","filter","fmt","","","fmt_list","from","","","","","from_any_values","from_any_values_and_dtype","from_arrow","from_arrow_chunks","from_chunks_and_dtype_unchecked","from_iter","","","","","","","","","","","","","","","","","","","","","","","","","from_vec","","","","","","","full_null","gather_every","get","get_data_ptr","get_flags","get_leaf_array","get_metadata","","get_object","","get_object_chunked_unchecked","","get_unchecked","","gt","","","gt_eq","","","has_nulls","hash","head","i16","i32","i64","i8","idx","implementations","implode","init","","","","into","","","","into_column","into_frame","into_iter","into_series","","is_empty","","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_series","","","is_sorted_flag","iter","iter_chunks","len","","limit","","list","lt","","","lt_eq","","","max","max_reduce","","mean","","mean_reduce","median","","median_reduce","","min","min_reduce","","mul","","","","n_chunks","","","n_unique","","name","new","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","new_empty","new_from_index","new_null","next","not_equal","","","not_equal_missing","","","null","null_count","ops","phys_iter","product","quantile_reduce","","rechunk","rem","","","rename","","reshape_list","reverse","","rolling_map","","sample_frac","sample_n","select_chunk","set_sorted_flag","shift","shrink_to_fit","","","shuffle","size_hint","slice","","sort","sort_with","","split_at","","std","","std_reduce","","str","str_value","strict_cast","sub","","","","sum","sum_reduce","","","tail","take","take_slice","take_slice_unchecked","take_unchecked","take_unchecked_from_slice","to_arrow","to_float","to_owned","","to_physical_repr","to_string","try_add_owned","try_from","","","","","","","","try_into","","","","try_mul_owned","try_new","try_set_metadata","try_sub_owned","try_to_compact_string","type_id","","","","u16","u32","u64","u8","unique","","unique_stable","unpack","var","","var_reduce","","vzip","","","","with_name","wrapping_trunc_div_scalar","zip_with","AmortSeries","ArrayBox","__clone_box","as_ref","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deep_clone","deref","deref_mut","drop","from","init","into","new","swap","to_owned","try_from","try_into","type_id","vzip","with_array","LhsNumOps","NumOpsDispatch","NumOpsDispatchInner","Output","add","add_to","","","checked","div","divide","","","mul","multiply","","","rem","remainder","","","sub","subtract","","","NumOpsDispatchChecked","NumOpsDispatchCheckedInner","checked_div","","","checked_div_num","","","Drop","Ignore","NullBehavior","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","","","fmt","from","hash","init","into","to_owned","try_from","try_into","type_id","vzip","ALLOW_IMPLODE_LIST","ALLOW_PRIMITIVE_TO_STRING","Container","CustomIterTools","CustomIterToolsSized","FromTrustedLenIterator","IntoVec","NoNull","SuperTypeFlags","SuperTypeOptions","TrustMyLength","Wrap","__clone_box","","","_set_partition_size","accumulate_dataframes_horizontal","accumulate_dataframes_vertical","accumulate_dataframes_vertical_unchecked","accumulate_dataframes_vertical_unchecked_optional","align_chunks_binary","align_chunks_ternary","all","allow_implode_list","allow_primitive_to_string","any_values_to_supertype","any_values_to_supertype_and_n_dtypes","arrow","binary_concatenate_validities","bitand","bitand_assign","bitor","bitor_assign","bits","","bitxor","bitxor_assign","borrow","","","","","borrow_mut","","","","","chunk_lengths","clone","","","clone_into","","","clone_to_uninit","","","coalesce_nulls","coalesce_nulls_columns","collect_reversed","collect_trusted","complement","concat_df","concat_df_unchecked","contains","default","","deref","","","","","","","deref_mut","","","","","","difference","drop","","","","","dtypes_to_schema","dtypes_to_supertype","empty","eq","","","equivalent","","","","","","","","","extend","flags","flatten","fmt","","","","","","from","","","","","","from_bits","from_bits_retain","","from_bits_truncate","from_iter","","","from_iter_trusted_length","","","from_name","from_par_iter","from_trusted_len_iter_rev","","get_supertype","get_supertype_with_options","get_time_units","handle_casting_failures","hash","","","init","","","","","insert","intersection","intersects","into","","","","","into_inner","into_iter","","into_vec","","is_all","is_empty","iter","iter_chunks","iter_names","len","materialize_dyn_int","n_chunks","new","","new_repeat_n","next","next_back","not","operation_exceeded_idxsize_msg","rayon","remove","set","size_hint","slice","slice_slice","split","split_and_flatten","split_at","split_df_as_ref","sub","sub_assign","symmetric_difference","to_owned","","","toggle","trust_my_length","try_from","","","","","try_get_supertype","try_into","","","","","type_id","","","","","union","vzip","","","","","with_unstable_series","cap_and_offsets","flatten_df_iter","flatten_nullable","flatten_par","flatten_series"],"q":[[0,"polars_core"],[40,"polars_core::chunked_array"],[444,"polars_core::chunked_array::arithmetic"],[472,"polars_core::chunked_array::builder"],[580,"polars_core::chunked_array::builder::list"],[734,"polars_core::chunked_array::cast"],[763,"polars_core::chunked_array::collect"],[777,"polars_core::chunked_array::float"],[779,"polars_core::chunked_array::from_iterator_par"],[783,"polars_core::chunked_array::iterator"],[820,"polars_core::chunked_array::iterator::par"],[822,"polars_core::chunked_array::metadata"],[1107,"polars_core::chunked_array::object"],[1184,"polars_core::chunked_array::object::builder"],[1207,"polars_core::chunked_array::object::registry"],[1235,"polars_core::chunked_array::ops"],[1361,"polars_core::chunked_array::ops::arity"],[1397,"polars_core::chunked_array::ops::float_sorted_arg_max"],[1399,"polars_core::chunked_array::ops::gather"],[1402,"polars_core::chunked_array::ops::search_sorted"],[1432,"polars_core::chunked_array::ops::sort"],[1439,"polars_core::chunked_array::ops::sort::arg_bottom_k"],[1440,"polars_core::chunked_array::ops::sort::arg_sort_multiple"],[1448,"polars_core::chunked_array::ops::sort::options"],[1525,"polars_core::chunked_array::temporal"],[1526,"polars_core::chunked_array::temporal::conversion"],[1529,"polars_core::config"],[1533,"polars_core::datatypes"],[2988,"polars_core::datatypes::categorical"],[3130,"polars_core::datatypes::categorical::revmap"],[3184,"polars_core::datatypes::categorical::string_cache"],[3203,"polars_core::datatypes::revmap"],[3209,"polars_core::datatypes::string_cache"],[3213,"polars_core::error"],[3280,"polars_core::error::PolarsError"],[3284,"polars_core::error::constants"],[3287,"polars_core::export"],[3294,"polars_core::fmt"],[3325,"polars_core::frame"],[3606,"polars_core::frame::column"],[3815,"polars_core::frame::explode"],[3844,"polars_core::frame::group_by"],[4083,"polars_core::frame::group_by::GroupByMethod"],[4084,"polars_core::frame::group_by::GroupsProxy"],[4086,"polars_core::frame::group_by::aggregations"],[4099,"polars_core::frame::group_by::expr"],[4102,"polars_core::frame::row"],[4199,"polars_core::functions"],[4201,"polars_core::hashing"],[4249,"polars_core::prelude"],[4857,"polars_core::prelude::PolarsError"],[4861,"polars_core::prelude::default_arrays"],[4867,"polars_core::prelude::list"],[4890,"polars_core::prelude::null"],[4921,"polars_core::prelude::revmap"],[4927,"polars_core::prelude::slice"],[4930,"polars_core::prelude::string_cache"],[4934,"polars_core::prelude::utf8"],[4938,"polars_core::random"],[4939,"polars_core::scalar"],[4979,"polars_core::scalar::reduce"],[4980,"polars_core::schema"],[5002,"polars_core::series"],[5421,"polars_core::series::amortized_iter"],[5445,"polars_core::series::arithmetic"],[5470,"polars_core::series::arithmetic::checked"],[5478,"polars_core::series::ops"],[5505,"polars_core::utils"],[5716,"polars_core::utils::flatten"],[5721,"dyn_clone::sealed"],[5722,"num_traits"],[5723,"num_traits::cast"],[5724,"polars_error"],[5725,"polars_core::series::arithmetic::borrowed"],[5726,"polars_core::frame::group_by::proxy"],[5727,"core::option"],[5728,"core::iter::traits::iterator"],[5729,"polars_utils::pl_str"],[5730,"core::ops::function"],[5731,"core::marker"],[5732,"alloc::string"],[5733,"polars_core::datatypes::dtype"],[5734,"polars_arrow::array::binview::view"],[5735,"polars_core::datatypes::aliases"],[5736,"polars_core::series::arithmetic::borrowed::checked"],[5737,"polars_arrow::array"],[5738,"alloc::vec"],[5739,"compact_str"],[5740,"core::iter::traits::double_ended"],[5741,"core::fmt"],[5742,"core::iter::traits::collect"],[5743,"polars_arrow::bitmap::immutable"],[5744,"rayon::iter"],[5745,"polars_arrow::trusted_len"],[5746,"polars_core::datatypes::any_value"],[5747,"polars_utils::index"],[5748,"std::sync::rwlock"],[5749,"polars_core::chunked_array::logical::decimal"],[5750,"core::iter::traits::exact_size"],[5751,"polars_core::series::series_trait"],[5752,"core::slice::iter"],[5753,"core::iter::adapters::map"],[5754,"core::convert"],[5755,"polars_core::chunked_array::metadata::guard"],[5756,"polars_core::chunked_array::metadata::interior_mutable"],[5757,"alloc::sync"],[5758,"polars_core::chunked_array::metadata::md_trait"],[5759,"core::ops::range"],[5760,"polars_core::datatypes::field"],[5761,"polars_arrow::legacy::kernels::rolling::no_nulls"],[5762,"polars_core::chunked_array::ops::rolling_window"],[5763,"polars_utils::aliases"],[5764,"polars_utils::hashing"],[5765,"ndarray::aliases"],[5766,"either"],[5767,"core::result"],[5768,"core::any"],[5769,"polars_core::chunked_array::arithmetic::numeric"],[5770,"polars_core::chunked_array::builder::string"],[5771,"polars_arrow::array::binview"],[5772,"polars_core::chunked_array::builder::boolean"],[5773,"polars_core::chunked_array::builder::null"],[5774,"polars_core::chunked_array::builder::primitive"],[5775,"core::clone"],[5776,"polars_core::chunked_array::builder::list::anonymous"],[5777,"polars_core::chunked_array::builder::list::boolean"],[5778,"polars_core::chunked_array::builder::list::primitive"],[5779,"polars_core::chunked_array::builder::list::binary"],[5780,"polars_core::chunked_array::builder::list::null"],[5781,"alloc::boxed"],[5782,"core::hash"],[5783,"polars_arrow::array::boolean"],[5784,"polars_core::chunked_array::metadata::env"],[5785,"polars_core::chunked_array::metadata::collect"],[5786,"bitflags::iter"],[5787,"std::fs"],[5788,"std::sync::mutex"],[5789,"polars_arrow::datatypes"],[5790,"polars_arrow::bitmap::utils::iterator"],[5791,"polars_arrow::bitmap::utils::zip_validity"],[5792,"polars_arrow::offset"],[5793,"polars_arrow::array::static_array"],[5794,"core::error"],[5795,"polars_arrow::array::primitive"],[5796,"polars_arrow::legacy::array::slice"],[5797,"polars_row::row"],[5798,"polars_arrow::array::binary"],[5799,"chrono::naive::datetime"],[5800,"alloc::borrow"],[5801,"polars_arrow::array::static_array_collect"],[5802,"bytemuck::zeroable"],[5803,"polars_core::chunked_array::logical::categorical"],[5804,"polars_core::chunked_array::logical::categorical::merge"],[5805,"polars_core::chunked_array::logical"],[5806,"polars_core::datatypes::time_unit"],[5807,"polars_arrow::types"],[5808,"polars_arrow::datatypes::physical_type"],[5809,"core::borrow"],[5810,"polars_arrow::pushable"],[5811,"polars_core::datatypes::into_scalar"],[5812,"core::cmp"],[5813,"polars_core::chunked_array::logical::categorical::builder"],[5814,"polars_core::chunked_array::logical::categorical::revmap"],[5815,"polars_core::chunked_array::logical::categorical::string_cache"],[5816,"polars_error::warning"],[5817,"polars_arrow::datatypes::schema"],[5818,"polars_core::series::from"],[5819,"polars_core::chunked_array::ndarray"],[5820,"polars_arrow::array::struct_"],[5821,"polars_arrow::record_batch"],[5822,"polars_core::series::iterator"],[5823,"polars_utils::idx_vec"],[5824,"rayon::iter::plumbing"],[5825,"polars_core::frame::group_by::into_groups"],[5826,"core::iter::adapters::copied"],[5827,"core::iter::adapters::zip"],[5828,"polars_arrow::legacy::kernels::rolling"],[5829,"polars_utils::float"],[5830,"polars_arrow::types::native"],[5831,"polars_core::frame::group_by::aggregations::agg_list"],[5832,"polars_core::frame::row::av_buffer"],[5833,"polars_core::hashing::identity"],[5834,"hashbrown::map"],[5835,"polars_core::hashing::vector_hasher"],[5836,"core::alloc"],[5837,"std::os::fd::owned"],[5838,"std::os::fd::raw"],[5839,"std::path"],[5840,"std::ffi::os_str"],[5841,"core::mem::maybe_uninit"],[5842,"polars_arrow::legacy::kernels::time"],[5843,"core::default"],[5844,"core::ffi::c_str"],[5845,"polars_arrow::scalar"],[5846,"std::io::error"],[5847,"alloc::collections"],[5848,"simdutf8::basic"],[5849,"regex::error"],[5850,"alloc::ffi::c_str"],[5851,"polars_arrow::legacy::array::default_arrays"],[5852,"polars_arrow::buffer::immutable"],[5853,"polars_arrow::array::list"],[5854,"polars_core::named_from"],[5855,"polars_core::chunked_array::ops::aggregate"],[5856,"polars_core::chunked_array::ops::aggregate::quantile"],[5857,"polars_arrow::legacy::index"],[5858,"core::pin"],[5859,"core::io::borrowed_buf"],[5860,"std::io"],[5861,"polars_core::chunked_array::ops::aggregate::var"],[5862,"alloc::collections::btree::map"],[5863,"polars_arrow::legacy::array::list"],[5864,"polars_arrow::legacy::array::null"],[5865,"polars_arrow::bitmap::mutable"],[5866,"polars_arrow::array::utf8"],[5867,"polars_schema::schema"],[5868,"alloc::rc"],[5869,"polars_core::utils::supertype"],[5870,"polars_arrow::legacy::utils"],[5871,"polars_arrow::legacy::trusted_len::rev"],[5872,"core::iter::sources::repeat"],[5873,"core::iter::adapters::take"],[5874,"polars_core::chunked_array::object::extension"],[5875,"polars_error::constants"],[5876,"polars_core::frame::horizontal"],[5877,"polars_arrow::legacy::prelude"],[5878,"polars_arrow::legacy::array"],[5879,"polars_arrow::legacy::array::utf8"],[5880,"polars_core::utils::any_value"],[5881,"polars_core::utils::schema"],[5882,"polars_core::utils::series"]],"i":"```````````````````````````````````````````Kh000l00000000000000000000000000000000000`00000000101``0000000000000`0`00000001010000000100000000000`000000100000000000`000000000000000000000000000000001000010000000000000000000`0000000000000000000000000000`0000000000000000000000000000000000000000000000000000000``000000000000000000000000000000000000000000000000000000000`00000000000000000000010010010000000100000000000000000000000000000000000000000000`On00000000000000000000000000````````A@bA@fA@hA@jA@`432140043143214321432143214321432143214321044A@nAA`5436543AAb00076547654`7654365476547654765476547654````````AAd0AAfAAhAAj0AAl43AAnAB`4ABb47734376215044212176215047621504476762150476215047621504215432154376037621504`7621504215437621504762150447621504762150476215047621504`F`000000000000000000000000000``ABhABj1000101000`ABl``ABnAC````ACdACf101010101010101011010`1010101010``ADdIjFn0Hn`3Kn22````````42110L`4ACh4343434343434433434321560432156043150431504315043ACj054542654332671543267154541Ld7774378265652652657777777266666555554378265656655656565775077773543782656565654378265656576577776565220777707773653656577577777757765656533726565437826543782653343782656534378265113````ADh00000Ib1111`111111110011111111111111111111``111111101111111110Id2222222222`AEf000000000000000000000````AEj00AEl0000000```00`0`10000AG````````````````````````````0AFf``AGb22222CDn3033AFb3AFh044AFj0AFl`77AFn00888888866AGd0`AGhAGj`;;`AGlAGn`AH`0<<>>>AHbAHd>><<AHf==:AHhAGb0:2AHjAHlAHn0`0AI`AIb`AFj0AIdAFbAIfAIhAIjAG`000AFl61`AIl`AJfAJbAIn`````````````````````````````````````AJj00`0`000000000000000000`00000`````AJl0````````````EdEj101010101010101010101011100010110010101010101010221010101010101010010010````````AMj`C```````HjDnADj`1``2`0210```21````2`````100`1`2100``010`2120```0040210``210```BBn`4CE`CEb``````7``543``543``543``543``3`666333BC`654``3``4AOfAMn1010A`987`98`9``:3:```````````B@``3`<:9`:`8988```80`:98``:98``:98``:98``898`88AJ`0<0AMfAMh=?<AMlMh7AN`ANbLjLnANdANfM`LhCnClANhANjDdDhANlAnANnAO`AObAOdADjAOfE`J`Gb0D`00El00HjInLjLnM`LhCnClDdDhAn?=<;AEh>>E`0??0?>=100AKlAKnGbD`El21010552106521061210AKd32103217AL`0ALb04HjDnMhALdAJ`=::::::AMfCEdBnjInI`AMh;AMj;AMl;AMnAN`ANbLjLnANdANfM`LhCnClANhANjDdDhANlAnANnAO`AObAOdADjAOfAMfCEdBnjInI`AMhHjAMjDnAMlMhAMnAN`ANbLjLnANdANfM`LhCnClANhANjDdDhANlAnANnAO`AObAOdADjAOfDn`AMd0Hj2E`GbD`ElAKd6J`54321`InLjLnM`LhCnClAMfAMh?AMjDnAMlMhAMnAN`ANb>=ANdANf>=<;ANhANjDdDhANlAnANnAO`AObAOdADjAOfAMfAMhHjAMjDnAMlMhAMnAN`ANbLjLnANdANfM`LhCnClANhANjDdDhANlAnANnAO`AObAOdADjAOfAMfAMhHjAMjDnAMlMhAMnAN`ANbLjLnANdANfM`LhCnClANhANjDdDhANlAnANnAO`AObAOdADjAOfMhAOh000Dn00`HjAMj26AMf0CEdBnjInI`AMh879AMl<AMnAN`ANbLjLnANdANfM`LhCnClANhANjDdDhANlAnANnAO`AObAOdADjAOfAMf0CEdBnjInI`AMhHjAMjDnAMlMhAMnAN`ANbLjLnANdANfM`LhCnClANhANjDdDhANlAnANnAO`AObAOdADjAOfJ`InLjLnM`LhCnClAMfCEdBnj:I`AMhHjAMjDnAMlMhAMnAN`ANbLjLnANdANfM`LhCnClANhANjDdDhANlAnANnAO`AObAOdADjAOfAMdJ`HjMh01AMjDn0AMl3AMn985E`GbD`0El0321100999777666555888444===<<<3AMf3121AEhAMb6431AMh==;::9<88ADjAOf95CEdBnjInI`7Hj00000AMjDn000AMlMh00AMn0AN`ANbLjLnANdANfM`LhCnClANhANjDdDhANlAnANnAO`AObAOdADj00AOfDnE`00GbD`0El0AEh32104432211AKd01432154433225432143214AJ`00654312065431260J`AMd08765341008765348C`jInI`AN`ANbLjLnANdANfM`LhCnClANhANjDdDhANlAnANnAO`AObAOdE`AEh0HjB@nAJ`4D`AKd6Gb2El278133008133006AMjDnMhAMnADjAOf<<4AMfCEdBnjInI`AMhHj=<AMl<;AN`ANbLjLnANdANfM`LhCnClANhANjDdDhANlAnANnAO`AObAOdADjAOfE`Dn3AMfCEdBnjInI`AMhHjAMj9AMlMhAMnAN`ANbLjLnANdANfM`LhCnClANhANjDdDhANlAnANnAO`AObAOdADjAOfAMfBA`0E`GbD`ElAKdAEhBAbJ`8HjDn0010000101000010=1010100001000010=AJ`:01:98877:98877``1AMj::98:AKlAKn10`<<;:<6InLjLnM`LhCnClD`ElMh0CE`CEbBBh55554444AEh040E`Gb87AKd333AMfAMl3343;;::43;;::404;4;HjAMn3J`4AKlAKn108InLjLnM`LhCnClE`GbD`ElAKdAEh`?AMf54354354366Mh76543276543265436543AKlAKnHj0`J`InLjLnM`LhCnClGb0ElD`011Dn?AMn102E`ADj1AMfAMhHjAMj7AMlMh8AN`ANbLjLnANdANfM`LhCnClANhANjDdDhANlAnANnAO`AObAOdADjAOfDn2J`AMfHj3AMnEl2E`0AL`0ALb0AOh00067CEdBnjInI`AMh<AMjDnAMlMh?AN`ANbLjLnANdANfM`LhCnClANhANjDdDhANlAnANnAO`AObAOdADjAOfAMfCEdBnjInI`AMhHjAMjDnAMlMhAMnAN`ANbLjLnANdANfM`LhCnClANhANjDdDhANlAnANnAO`AObAOdADjAOfHjDn10AMnE`AMfCEdBnjInI`AMh:AMj:AMlMh;AN`ANbLjLnANdANfM`LhCnClANhANjDdDhANlAnANnAO`AObAOdADjAOf1GbD`ElAEhAJ`0Dn1AKlAKn7BAjBAlAOlBAnBB`BBbBBdBBfBA`:9?>AKd>Gb:98765432<;D`El3AEhAMfCEdBnjInI`AMhHjAMjDnAMlMhAMnAN`ANbLjLnANdANfM`LhCnClANhANjDdDhANlAnANnAO`AObAOdADjAOfCE`CEbBBhEfAJ`HjE``````BBn`BC`10`AM`00BBj10010BCbBBl32103`3333021032103221033333333AMb3132144444444444444321432144244444444444``41444312444444443`244`444443214321432144443214`6565`565656656565656565656565656666565666665656565656`BCh0000`00`0000000`0`7676`````BClAKh000Ah`112101```11111112BCj3030`3003030`300300`3030`0``````0303003030CEfCEh10```````````BD`0000000000`0`````00`````00000BDj`0BDh11``0``01BCf00000000000000000BEnBF`3421034222342342342`224210342103422221034222222222242224442`2222223422103422222222222222222`222422222222222222103422103421022222222222222222222221022222222222222222`22222222222222222102222222222222222222342222221034222221034221034222222210342222222``Eh`00BG`111111111111111111011011111111111101010101011101010111010111111011011111111111111011100111111111101111111010BDf212221222222221222222222212121222222222222221222222222222122222221222212121212122222222212222`BGf000000000000000000000000000`BGl0``0``````BHdAl`2`22222222210`222BGh1BEb40`1023BHnBH`BGn453762104537453745374537345621004537621045373162104453745444555`643445377`621044445537445335BHh04673215648732156486355255765564447644444543345644656446644564887321564873215648873215648666473215648CEjCEl0``````````BIjBIl0`BIn0BJ`BJb``101010101010`10101010BE`211210210210210210`02102102100000022110`2102102121021```210210210210210``````````BJdBJf10110101010100001010`101010BJl0002122222`````````BFj````````````AKh00`0`Bh0BNnAh4```BBn`Mn5```````5```3BC``1``````211``1`6`BId5BLd````582````````60````88`88``8`1`8`8````7OdBKnLbN`=B@d8BL`BLb74444>>>>4>44?>>65443=BFj3;218AKhBh9876BNn36>54;`87BKl02;:9847?65<2;:9847?65<2;:9847?65<29AOh0003:44``7::3::::958Mn`544=<;;:369087>54=<;:369087>;`;;;54=<;;:369087>994=;;;:690>444===;;;666999000>>><AMb<6655>=<<<;7:198?;6666655555>>=<<<<<<<<<<<<<<<<<<;47:198?BNdBNhBNj88888888?CEn0000Lb00::9:BO`111Fh2<2>B@d9BLdOd55`AKhBh2BKn8N`BNnBFj8MnBL`BLb:9608796>543;210:>>>>>769;>9>BDn?`?``?BOj0BOl>811>LbBOnC@`2B@d3333333333`Od>?444````86644544444`4`AJl05C@lBKn`7993Bh418N`BFj7MnBL`BLbBLdAKh7?AOh00018<9Lb08BNn8?76543:>;1908?7654BOn222222224;224;?<2:19B@d98763`>5<Od>4<3;1:9874<<164===4CEfCEh10```BNdBNhBNj`CAf000000000000000000000`CAj00000000000000000000000000000`BBnBC`10``AJl0``````CF`CFb``Kl000000000000000000000000000000`0000000`CBl0`````BDdCBh1010121010101Jj0``00```BGb11````01AfBOf0111111`10000`10001001001110000001CC`3420342122221122121122421424222203422034222222034211114222222222444222222112142220342222222222222222222222222222222222222222212221111111122222214222222`203420342220BFb32233332200333323223333333322223222232233332232223333333333333333333333333333333333333323133333332`3322233323325223333222331233222322223333333322332222333533331453333314533333314533333223222221453333``Ch000000000000000000000```CCd0CCfAj0`2100210021002100``BKlFb0100CCh0`000000000000000000000000CCj0``````````0CClCD````````211````22222222CDhAJn43210432CCn543543543``CDb06``6653322654322654632654``636533366655565`6666653265546666226CDf337333````4764376577743765375BFf6888383`3466668``8863```3`8888768254876`5487654876854876``````","f":"`````````````{{}b}``0```````````````{{}d}``````````````{{fh}b}{{{f{{l{j}}}}}d}{{{f{{l{c}}}}}nA`}{{{l{c}}e}gA`{AbAd}{}}{{{f{{l{c}}}}e}gA`{AbAd}{}}{{{f{{l{c}}}}{f{{l{c}}}}}eA`{}}{{{l{c}}{l{c}}}eA`{}}{{{f{{l{c}}}}{f{Af}}}{{Ah{Af}}}Aj}{{{f{{l{c}}}}{f{Al}}}AfA`}{{{f{{l{An}}}}}d}{{{f{{l{An}}}}}{{B`{d}}}}{{{f{{l{j}}}}}{{`{{`{{Bf{}{{Bb{{B`{Bd}}}}}}}}}}}}{{{f{{l{j}}}}Bh}{{`{{`{{Bf{}{{Bb{{B`{Bd}}}}}}}}}}}}32{{{f{Bj{l{c}}}}{f{{l{c}}}}}{{Ah{b}}}{{C`{}{{Bl{Bn}}}}}}{{{f{{l{c}}}}e}{{l{c}}}A`{{Cd{B`}{{Cb{B`}}}}Cf}}{{{f{{l{j}}}}c}{{l{j}}}{{Cj{Ch}{{Cb{Af}}}}}}{{{f{{l{j}}}}e}{{l{g}}}{}{{Cj{{B`{Ch}}}{{Cb{{B`{c}}}}}}Cf}C`}{{{f{{l{Cl}}}}c}Af{{Cd{{f{Af}}}{{Cb{Af}}}}}}{{{f{{l{Cn}}}}c}Af{{Cd{{f{Af}}}{{Cb{Af}}}}}}{{{l{c}}e}{{l{c}}}A`{{Cd{}{{Cb{}}}}Cf}}{{{f{{l{c}}}}e}D`C`{{Cj{{f{BjDb}}}}}}{{{f{{l{c}}}}{f{Cd}}}{{l{c}}}A`}{{{f{{l{c}}}}{f{Cd}}}{{l{e}}}A`C`}{{{f{{l{Dd}}}}c}{{l{Dd}}}{{Cj{{f{Df}}}{{Cb{{f{Df}}}}}}}}{{{f{{l{Dh}}}}c}{{l{Dh}}}{{Cj{{f{{Dl{Dj}}}}}{{Cb{{f{{Dl{Dj}}}}}}}}}}{{{f{Bj{l{c}}}}e}bA`{{Cd{}{{Cb{}}}}Cf}}{{{f{{l{c}}}}Dng}{{l{i}}}C`{}{{Cj{}{{Cb{e}}}}}C`}{{{f{{l{j}}}}{f{Cd}}}{{Ah{E`}}}}{{{f{{l{c}}}}g{f{Bj{Dl{e}}}}}bA`{}{{Cd{B`{f{e}}}{{Cb{e}}}}}}{{{f{{l{c}}}}e}{{l{c}}}A`{{Cd{}{{Cb{}}}}Cf}}{{{f{{l{Dd}}}}c}{{l{Dd}}}{{Cj{Eb{f{Df}}}{{Cb{Eb}}}}Cf}}{{{f{{l{c}}}}Ed}EfA`}{{{f{{l{c}}}}{f{{Dl{Eh}}}}{f{Ej}}}{{Ah{Ef}}}A`}{{{f{{l{c}}}}}{{Ah{Ef}}}A`}`{{{f{{l{Dd}}}}}El}{{{f{{l{c}}}}}{{f{{l{c}}}}}C`}{{{f{{l{c}}}}}{{f{Dn}}}C`}{{{f{{l{j}}}}{f{{l{c}}}}{f{{l{e}}}}g}{{l{j}}}C`C`{{Cj{{B`{Ch}}B`B`}{{Cb{{B`{Af}}}}}}}}{{{f{{l{c}}}}{f{{l{c}}}}}eEn{}}00{f{{f{c}}}{}}0{{{f{Bj}}}{{f{Bjc}}}{}}0``{{{f{{l{c}}}}e}{{l{g}}}A`{{Cd{}{{Cb{}}}}Cf}A`}{{{f{{l{c}}}}{f{Dn}}}{{Ah{Af}}}A`}{{{f{{l{c}}}}{f{Dn}}F`}{{Ah{Af}}}A`}{{{f{{l{c}}}}{f{Af}}}{{Ah{Af}}}Fb}{{{f{{l{c}}}}e}{{Ah{Af}}}FbAd}{{{f{{l{c}}}}}FdC`}{{{f{{l{c}}}}}{{`{{Bf{}{{Bb{Ff}}}}}}}C`}{{{f{{l{c}}}}}{{f{{Fj{Fh}}}}}C`}{{{f{Bj{l{c}}}}}{{f{Bj{Fj{Fh}}}}}C`}{{{f{{l{c}}}}}{{l{c}}}C`}0{{f{f{Bjc}}}b{}}{fb}`{{{f{Bj{l{c}}}}}b{C`A`}}`{fFl}{{{f{{l{c}}}}}{{Ah{{f{Dl}}}}}A`}{{{f{Bj{l{c}}}}{f{{l{c}}}}Fn}bC`}{{{f{Bj{l{c}}}}{f{{l{e}}}}Fn}bC`C`}{{{f{{l{c}}}}}{{`{{G`{}{{Bb{{f{Dl}}}}}}}}}A`}{{}{{l{c}}}C`}{Ff{{f{c}}}{}}0{Ff{{f{Bjc}}}{}}0{{{f{{l{c}}}}e}gA`{AbAd}{}}{{{l{c}}e}gA`{AbAd}{}}{{{f{{l{c}}}}{f{{l{c}}}}}eA`{}}{{{l{c}}{l{c}}}eA`{}}{{{f{{l{c}}}}{f{Af}}}{{Ah{Af}}}Aj}{Ffb}{{{f{Bj{l{c}}}}}bC`}1{{{f{{l{c}}}}}{{l{c}}}C`}{{{f{{l{c}}}}}{{f{Dn}}}C`}{{{f{{l{c}}}}e}GbA`Ad}{{{f{{l{c}}}}{f{{l{c}}}}}GbA`}10{{{f{Bj{l{c}}}}{f{{l{c}}}}}{{Ah{b}}}A`}{{{f{{l{c}}}}}{{Ah{{l{c}}}}}A`}{{{f{{l{c}}}}{f{Gb}}}{{Ah{{l{c}}}}}{{C`{}{{Gd{Bn}}{Gf{Bn}}}}}}{{{f{{l{c}}}}}B`C`}{{{f{{l{c}}}}}{{B`{Ff}}}C`}`{{{f{{l{An}}}}{f{BjGh}}}Gj}{{{f{{l{c}}}}{f{BjGh}}}GjA`}{{{f{{l{c}}}}e}bC`{{Cj{B`}}}}{{{f{{l{j}}}}c}b{{Cj{{B`{Ch}}}}}}{c{{l{e}}}Gl{{C`{}{{Gn{c}}}}}}{cc{}}0{{Bhc}{{l{e}}}H`{{C`{}{{Gn{}}}}C`}}{{{f{{l{c}}}}e}{{l{c}}}{{C`{}{{Gn{}}}}C`}H`}{{Bh{Fj{Fh}}}{{l{c}}}C`}{{Bh{Fj{Fh}}Dn}{{l{c}}}C`}{c{{l{An}}}{{H`{}{{Bb{{B`{d}}}}}}}}{c{{l{e}}}{{H`{}{{Bb{{Hd{Fj{B`{Hb}}}}}}}}}A`}{c{{l{e}}}{{H`{}{{Bb{B`}}}}}A`}{{Bhc}{{l{e}}}{{Bf{}{{Bb{B`}}}}}A`}13{{Bhc}{{l{e}}}{{Bf{}{{Bb{}}}}}A`}`{c{{l{e}}}{{Hf{}{{Bb{B`}}}}}A`}{{Bh{f{Dl}}}{{l{c}}}A`}{{Bh{f{{Dl{B`}}}}}{{l{c}}}A`}{c{{l{e}}}{{Hh{}{{Bb{B`}}}}}A`}{{BhFj}{{l{c}}}A`}{{BhFj{B`{Hb}}}{{l{c}}}A`}{{BhFf}{{l{c}}}A`}0{{{f{{l{c}}}}Ff}{{l{c}}}C`}{{BhFf{f{Dn}}}E`}{{{f{{l{c}}}}Ff}B`C`}{{{f{{l{c}}}}Ff}{{Ah{Hj}}}A`}{{{f{{l{c}}}}Ff}HjA`}{{{f{{l{j}}}}Ff}{{B`{Af}}}}{{{f{{l{c}}}}}{{B`{Hl}}}C`}{{{f{{l{c}}}}}dC`}{{{f{{l{c}}}}}HnC`}{{{f{{l{j}}}}}Af}{{{f{{l{c}}}}}B`C`}0{{{f{{l{{I`{c}}}}}}Ff}{{B`{{f{Ib}}}}}Id}09{{{f{{l{c}}}}dd}{{Ah{Al}}}A`}{{{f{{l{c}}}}FfdFf}AlEn}{{{f{{l{c}}}}{f{{l{c}}}}}GbA`}{{{f{{l{c}}}}e}GbA`Ad}018{{{f{{l{c}}}}{B`{Ff}}}{{l{c}}}C`}{{}Ff}0{{FfIf{B`{Ih}}}{{l{c}}}A`}{{{f{{l{j}}}}}{{f{Dn}}}}{{{f{{l{c}}}}}{{Il{{Ij{c}}}}}C`}{{}c{}}0{{}Eh}{{{l{In}}{B`{Ff}}Ff}{{Ah{J`}}}}{{{l{In}}{B`{Ff}}Ff}J`}{{{f{{l{c}}}}}eA`{}}{{{f{{l{c}}}}}{{`{JbJd{Jf{}{{Bb{}}}}G`Hh}}}A`}{{{l{c}}}AfC`}{{{f{{l{c}}}}}dC`}{{{f{{l{c}}}}}GbJh}000{{{f{{l{c}}}}}GbC`}02{{{f{{l{c}}}}}JjC`}{{{f{{l{c}}}}}{{`{{Jl{}{{Bb{B`}}}}}}}C`}{{{f{{l{c}}}}}{{`{{Bf{}{{Bb{{l{c}}}}}}}}}C`}{{{f{{l{j}}}}}{{`{{Bf{}{{Bb{Jn}}}}}}}}{{{f{{l{c}}}}}{{Kd{{K`{Fh}}{Kb{{f{Fh}}}{{Cb{{B`{{f{Hb}}}}}}}}}}}C`}`{{fc}Fl{{Kf{Df}}}}{{{f{{l{c}}}}}B`C`}{{{f{{l{c}}}}}{{B`{Ff}}}C`}{{{f{{l{c}}}}}{{Kh{c}}}C`}{{{f{{l{c}}}}{f{{l{c}}}}}eA`{}}{{{l{c}}{l{c}}}eA`{}}{{{l{c}}e}gA`{}{}}{{{f{{l{c}}}}e}gA`{}{}}{{c{f{{l{e}}}}}g{}A`{}}{{c{l{e}}}g{}A`{}}{{{f{{l{c}}}}}FfC`}0{{{f{{l{c}}}}e}{{l{c}}}A`{AbKj}}00{{{f{{l{c}}}}Ff}{{l{c}}}C`}{{{f{{l{c}}}}e}GbA`Ad}{{{f{{l{c}}}}{f{{l{c}}}}}GbA`}10{{{f{{l{An}}}}}{{B`{d}}}}{{{f{{l{c}}}}}B`A`}{{{f{{l{c}}}}}KlA`}{{{f{{l{c}}}}}{{B`{n}}}A`}{{{f{{l{An}}}}}{{B`{n}}}}{{{f{{l{c}}}}}{{B`{n}}}En}{{{f{{l{c}}}}}KlEn}{{{f{Bj{l{c}}}}{Ij{c}}}bC`}`{{{f{{l{c}}}}}{{Kn{c}}}C`}{{{f{{l{c}}}}}{{f{{Lb{{L`{c}}}}}}}C`}{{{f{{l{c}}}}}{{B`{{Lf{Ld}}}}}C`}{{{f{Bj{l{c}}}}}{{f{Bj{Lb{{L`{c}}}}}}}C`}{{{f{{l{c}}}}}{{Lb{{L`{c}}}}}C`};<{{{f{{l{c}}}}}{{B`{Hd}}}A`};{{Bh{f{{Dl{Dj}}}}FfFf}{{l{An}}}}{{Bh{f{Dl}}}{{l{c}}}A`}{{{l{c}}{l{c}}}eA`{}}{{{f{{l{c}}}}e}gA`{AbAd}{}}{{{f{{l{c}}}}{f{{l{c}}}}}eA`{}}{{{l{c}}e}gA`{AbAd}{}}{{{f{{l{c}}}}{f{Af}}}{{Ah{Af}}}Aj}{{{f{{l{c}}}}}FfC`}{{{f{{l{c}}}}}{{Ah{Ff}}}A`}{{{f{{l{c}}}}}{{f{Bh}}}C`}{{Bhc}{{l{Lh}}}{{Kf{{Dl{{B`{Jn}}}}}}}}{{Bhc}{{l{Dh}}}{{Kf{{Dl{{Fj{Dj}}}}}}}}{{Bhc}{{l{Cn}}}{{Kf{{Dl{If}}}}}}{{Bhc}{{l{Dd}}}{{Kf{{Dl{Db}}}}}}{{Bhc}{{l{Lh}}}{{Kf{{Dl{Jn}}}}}}{{Bhc}{{l{Dd}}}{{Kf{{Dl{{B`{Db}}}}}}}}{{Bhc}{{l{Dh}}}{{Kf{{Dl{{B`{{Fj{Dj}}}}}}}}}}{{Bhc}{{l{An}}}{{Kf{{Dl{{B`{d}}}}}}}}{{Bhc}{{l{Lj}}}{{Kf{{Dl{{B`{Ll}}}}}}}}{{Bhc}{{l{Ln}}}{{Kf{{Dl{{B`{Ih}}}}}}}}{{Bhc}{{l{M`}}}{{Kf{{Dl{{B`{Mb}}}}}}}}{{Bhc}{{l{In}}}{{Kf{{Dl{Md}}}}}}{{Bhc}{{l{In}}}{{Kf{{Dl{{B`{Md}}}}}}}}{{Bhc}{{l{Cl}}}{{Kf{{Dl{n}}}}}}{{Bhc}{{l{M`}}}{{Kf{{Dl{Mb}}}}}}{{Bhc}{{l{Cl}}}{{Kf{{Dl{{B`{n}}}}}}}}{{Bhc}{{l{Ln}}}{{Kf{{Dl{Ih}}}}}}{{Bhc}{{l{Lj}}}{{Kf{{Dl{Ll}}}}}}{{Bh{Mf{Jn}}}{{l{Lh}}}}{{Bh{Mf{Mb}}}{{l{M`}}}}{{Bh{Mf{Ih}}}{{l{Ln}}}}{{Bh{Mf{Ll}}}{{l{Lj}}}}{{Bhc}{{l{An}}}{{Kf{{Dl{d}}}}}}{{Bhc}{{l{Cn}}}{{Kf{{Dl{{B`{If}}}}}}}}{Bh{{l{{I`{c}}}}}Id}{{{f{{l{c}}}}FfFf}{{l{c}}}A`}{{Bh{Fj{c}}}{{l{{I`{c}}}}}Id}{{Bh{Fj{c}}Hb}{{l{{I`{c}}}}}Id}{{BhFj}{{l{c}}}A`}{{{Lb{Mh}}{Fj{Fh}}HlHl}{{l{c}}}C`}{{{f{{l{c}}}}}{{l{c}}}Jh}{{{f{{l{c}}}}{f{{l{c}}}}}GbA`}{{{f{{l{c}}}}e}GbA`Ad}10{{{f{{l{c}}}}}FfC`}``{{{f{{l{j}}}}}{{`{{Mj{}{{Bb{{B`{Af}}}}}}}}}}{{{f{{l{Dd}}}}}{{`{{Mj{}{{Bb{{B`{{f{Df}}}}}}}}}}}}{{{f{{l{Dd}}}}}{{`{{Ml{}{{Bb{{B`{{f{Df}}}}}}}}}}}}{{{f{Bj{l{j}}}}}{{`{{Ml{}{{Bb{{B`{Af}}}}}}}}}}{{{f{{l{c}}}}}KlA`}{{{f{Bj{l{c}}}}}bC`}{{{f{{l{c}}}}nMn}{{Ah{{B`{n}}}}}En}{{{f{{l{c}}}}nMn}{{Ah{Kl}}}En}{{BhFfn}{{Ah{{l{An}}}}}}{{BhFfnn}{{Ah{{l{c}}}}}A`}{{BhFf}{{l{c}}}A`}{{BhFfnn}{{l{c}}}A`}{{{f{{l{c}}}}}{{l{c}}}C`}{{{f{{l{c}}}}}{{f{Mh}}}C`}{{{l{c}}e}gA`{AbAd}{}}{{{f{{l{c}}}}{f{{l{c}}}}}eA`{}}{{{l{c}}{l{c}}}eA`{}}{{{f{{l{c}}}}e}gA`{AbAd}{}}{{{f{{l{c}}}}{f{Af}}}{{Ah{Af}}}Aj}{{{f{Bj{l{c}}}}Bh}bC`}{{{f{{l{c}}}}}{{l{c}}}A`}{{{f{{l{c}}}}{f{Cd}}N`}{{Ah{Af}}}A`}{{{f{{l{c}}}}Ffe}{{Ah{{l{c}}}}}Jh{{Cj{{f{Bj{l{c}}}}}{{Cb{B`}}}}}}{{{f{{l{c}}}}ndd{B`{Ih}}}{{Ah{{l{c}}}}}C`}{{{f{{l{c}}}}Ffdd{B`{Ih}}}{{Ah{{l{c}}}}}C`}{{{f{{l{c}}}}eB`}{{Ah{{l{c}}}}}A`{{H`{}{{Bb{Hl}}}}}}{{{f{{l{c}}}}eg}{{Ah{{l{c}}}}}A`{{H`{}{{Bb{Hl}}}}}{{Cd{B`}{{Cb{B`}}}}}}{{{f{{l{c}}}}{f{Gb}}B`}{{Ah{{l{c}}}}}A`}{{{f{Bj{l{j}}}}}b}{{{f{Bj{l{c}}}}d}bC`}{{{f{Bj{l{j}}}}Dn}b}{{{f{Bj{l{c}}}}Hl}bC`}{{{f{Bj{l{c}}}}Jj}bC`}{{{f{{l{c}}}}Jn}{{l{c}}}A`}{{{f{{l{c}}}}JnB`}{{l{c}}}A`}{{{f{Bj{l{c}}}}}bC`}{{{f{{l{c}}}}JnFf}{{l{c}}}C`}0{{{f{{l{c}}}}d}{{l{c}}}A`}{{{f{{l{c}}}}Ed}{{l{c}}}A`}{{{f{{l{c}}}}Jn}{{Hd{{l{c}}{l{c}}}}}C`}0{{{f{{l{c}}}}Dj}{{B`{n}}}A`}{{{f{{l{c}}}}Dj}KlEn}{{{l{c}}e}gA`{AbAd}{}}{{{l{c}}{l{c}}}eA`{}}{{{f{{l{c}}}}{f{{l{c}}}}}eA`{}}{{{f{{l{c}}}}e}gA`{AbAd}{}}{{{f{{l{c}}}}{f{Af}}}{{Ah{Af}}}Aj}{{{f{{l{An}}}}}{{B`{Hl}}}}{{{f{{l{c}}}}}B`A`}{{{f{{l{c}}}}}KlA`}{{{f{{l{c}}}}{B`{Ff}}}{{l{c}}}C`}{{{f{{l{c}}}}{f{e}}}{{Ah{{l{c}}}}}C`{{Kf{{Dl{Hl}}}}Nb}}{{{f{{l{c}}}}{f{Ef}}}{{Ah{{l{c}}}}}C`}{{{f{{l{c}}}}{f{Ef}}}{{l{c}}}{{C`{}{{Gd{Bn}}{Nd{Bn}}}}C`}}{{{f{{l{c}}}}{f{e}}}{{l{c}}}{{C`{}{{Gd{Bn}}{Nd{Bn}}}}C`}{{Kf{{Dl{Hl}}}}Nb}}`{{{f{{l{c}}}}dNf}{{Fj{{Fj{Nh}}}}}C`}{{{f{{l{c}}}}}{{l{c}}}Jh}{{{f{{l{Dd}}}}Ff}{{Ah{Af}}}}{{{f{Bj{l{j}}}}Dn}b}{{{f{{l{j}}}}}{{Ah{Nj}}}}{{{f{{l{c}}}}}{{Ah{Nl}}}A`}{fc{}}{{{f{{l{Dh}}}}}D`}{{{f{{l{c}}}}}{{Fj{B`}}}A`}{{{f{{l{c}}}}}{{Nn{Fj{Fj{B`}}}}}A`}{{{l{c}}{l{c}}}eA`{}}{{{f{{l{c}}}}{f{{l{c}}}}}eA`{}}{{{f{{l{c}}}}e}gA`{}{}}{{{l{c}}e}gA`{}{}}{{c{l{e}}}g{}A`{}}{{c{f{{l{e}}}}}g{}A`{}}{{{f{{l{j}}}}c}{{Ah{{l{j}}}}}{{Cj{Ch}{{Cb{{Ah{Af}}}}}}}}{{{f{{l{j}}}}e}{{Ah{{l{g}}}}}{}{{Cj{{B`{Ch}}}{{Cb{{Ah{{B`{c}}}}}}}}Cf}C`}{{{f{{l{c}}}}g}{{O`{D`e}}}C`{}{{Cj{{f{BjDb}}}{{Cb{{O`{be}}}}}}}}{{{f{{l{c}}}}i}{{O`{{l{k}}g}}}C`{}{}{{Cj{}{{Cb{{O`{eg}}}}}}}C`}{c{{O`{e}}}{}{}}0{{Bhg}{{O`{{l{i}}e}}}Gl{}{{H`{}{{Bb{{O`{ce}}}}}}}{{C`{}{{Gn{c}}}}C`}}{{}{{O`{c}}}{}}0{{{f{{l{j}}}}{f{{l{c}}}}e}{{Ah{{l{j}}}}}C`{{Cj{{B`{Ch}}B`}{{Cb{{Ah{{B`{Af}}}}}}}}}}{fOb}0{{{f{{l{c}}}}}{{Ah{{l{c}}}}}A`}{{{f{{l{c}}}}{f{Af}}}{{Ah{{f{{l{c}}}}}}}C`}{{{f{Bj{l{c}}}}}bC`}{{{f{{l{c}}}}Ff}{}C`}{{{f{{l{c}}}}Dj}{{B`{n}}}A`}{{{f{{l{c}}}}Dj}KlEn}{{}c{}}0{{Bhc}{{l{e}}}Gl{{C`{}{{Gn{c}}}}C`}}{{{f{{l{e}}}}c}{{l{e}}}Gl{{C`{}{{Gn{c}}}}C`}}{{{f{{l{c}}}}{Fj{Fh}}}{{l{c}}}C`}{{{l{c}}Bh}{{l{c}}}C`}{{{f{{Dl{Od}}}}e}c{}{{Of{{f{Ef}}}{{Cb{c}}}}}}{{{f{{l{c}}}}Jj}{{l{c}}}C`}{{{l{c}}}eA`{}}{{{f{{l{c}}}}}eA`{}}{{{l{c}}{l{c}}}eA`{}}{{{f{{l{c}}}}{f{{l{c}}}}}eA`{}}{{{f{{l{c}}}}e}gA`{}{}}{{{l{c}}e}gA`{}{}}2301{{c{l{e}}}g{}A`{}}{{c{f{{l{e}}}}}g{}A`{}}543210542376452310543201{{{f{{l{j}}}}{f{{l{c}}}}e}{{l{j}}}C`{{Cj{{B`{Ch}}B`}{{Cb{{B`{Af}}}}}}}}{{{f{{l{c}}}}{f{Gb}}{f{{l{c}}}}}{{Ah{{l{c}}}}}{{C`{}{{Nd{Bn}}}}}}````{{{On{}{{Oh{c}}{Oj{e}}{Ol{g}}}}{On{}{{Oh{c}}{Oj{e}}{Ol{g}}}}}e{}{}{}}{{{On{}{{Oh{c}}{Oj{e}}{Ol{g}}}}c}e{}{}{}}{{c{On{}{{Oh{c}}{Oj{e}}{Ol{g}}}}}e{}{}{}}{{{On{}{{Oh{c}}{Oj{e}}{Ol{g}}}}{On{}{{Oh{c}}{Oj{e}}{Ol{g}}}}}g{}{}{}}{{{On{}{{Oh{c}}{Oj{e}}{Ol{g}}}}c}g{}{}{}}{{c{On{}{{Oh{c}}{Oj{e}}{Ol{g}}}}}g{}{}{}}{{{On{}{{Oh{c}}{Oj{e}}{Ol{g}}}}}e{}{}{}}65654654650654654````````{{fh}b}000{{{f{BjA@`}}}b}{{{f{Bj{A@b{c}}}}}b{A@dNb}}{{{f{BjA@f}}}b}{{{f{BjA@h}}}b}{{{f{Bj{A@j{c}}}}}bA`}{{{f{Bj{A@b{c}}}}{B`{e}}}b{A@dNb}{{Kf{c}}}}{{{f{BjA@`}}{B`{c}}}b{}}{{{f{BjA@`}}c}b{}}{{{f{Bj{A@b{c}}}}e}b{A@dNb}{{Kf{c}}}}{{{f{BjA@f}}d}b}5{f{{f{c}}}{}}000{{{f{Bj}}}{{f{Bjc}}}{}}000{{{f{{A@b{c}}}}}{{A@b{c}}}{A@dNb}}{{{f{A@f}}}A@f}{{{f{A@h}}}A@h}{{{f{{A@j{c}}}}}{{A@j{c}}}{A`A@l}}{{f{f{Bjc}}}b{}}000{fb}000{Ff{{f{c}}}{}}000{Ff{{f{Bjc}}}{}}000{Ffb}000{A@`{{l{c}}}C`}{{{A@b{Df}}}D`}{{{A@b{{Dl{Dj}}}}}El}{A@nD`}{AA`El}{A@fGb}`{{{A@j{c}}}{{l{c}}}A`}{cc{}}000{{Bhe}AAb{}{{Bf{}{{Bb{{B`{c}}}}}}}}{{Bhe}AAb{}{{Bf{}{{Bb{c}}}}}}{{Bh{f{{Dl{c}}}}}AAb{}}{{Bh{f{{Dl{{B`{c}}}}}}}AAb{}}{{}Ff}000{{}c{}}000`{{BhFf}{{A@b{c}}}{A@dNb}}{{BhFf}A@f}{{BhFf}A@h}{{BhFf}{{A@j{c}}}A`}{{{f{BjA@`}}}b}{{{f{BjA@f}}}b}{{{f{BjA@h}}}b}{{{f{Bj{A@j{c}}}}}bA`}{fc{}}000{c{{O`{e}}}{}{}}000{{}{{O`{c}}}{}}000{fOb}000<<<<````````{{{f{BjAAd}}{f{Gl}}}b}{{{f{BjAAd}}}b}{{{f{BjAAf}}}b}{{{f{BjAAh}}c}b{{Bf{}{{Bb{{B`{d}}}}}}Hh}}{{{f{Bj{AAj{c}}}}e}bA`{{Bf{}{{Bb{B`}}}}Hh}}{{{f{Bj{AAj{c}}}}e}bA`{{Bf{}{{Bb{}}}}Hh}}{{{f{BjAAl}}}b}54{{{f{BjAAn}}}b}{{{f{BjAB`}}}b}{{{f{BjAAh}}}b}{{{f{BjABb}}}b}{{{f{Bj{AAj{c}}}}}bA`}{{{f{BjAAd}}{B`{{f{Gl}}}}}b}{{{f{BjAAd}}{B`{{f{Af}}}}}{{Ah{b}}}}{{{f{BjAAl}}{B`{{f{Af}}}}}{{Ah{b}}}}{{{f{Bj{AAj{c}}}}{B`{{f{Dl}}}}}bA`}{{{f{BjAAl}}{f{Af}}}{{Ah{b}}}}{{{f{BjAAd}}{f{Af}}}{{Ah{b}}}}{{{f{BjAAf}}{f{Af}}}{{Ah{b}}}}{{{f{BjAAn}}{f{Af}}}{{Ah{b}}}}{{{f{BjAB`}}{f{Af}}}{{Ah{b}}}}{{{f{BjAAh}}{f{Af}}}{{Ah{b}}}}{{{f{BjABb}}{f{Af}}}{{Ah{b}}}}{{{f{Bj{AAj{c}}}}{f{Af}}}{{Ah{b}}}A`}{{{f{Bj{AAj{c}}}}{f{Dl}}}bA`}{{{f{BjAAn}}c}b{{Bf{}{{Bb{{B`{{f{Df}}}}}}}}Hh}}{{{f{BjAB`}}c}b{{Bf{}{{Bb{{B`{{f{{Dl{Dj}}}}}}}}}}Hh}}{{{f{BjAAn}}c}b{{Bf{}{{Bb{{f{Df}}}}}}}}{{{f{BjAB`}}c}b{{Bf{}{{Bb{{f{{Dl{Dj}}}}}}}}}}{f{{f{c}}}{}}000000{{{f{Bj}}}{{f{Bjc}}}{}}000000`{{}AAd}{{}AAf}{Ff{{f{c}}}{}}000000{Ff{{f{Bjc}}}{}}000000{Ffb}000000{{{f{AAn}}}d}{{{f{AB`}}}d}{{{f{AAh}}}d}{{{f{{AAj{c}}}}}dA`}{{{f{AAl}}}d}{{{f{AAn}}}{{f{Mh}}}}{{{f{AB`}}}{{f{Mh}}}}{{{f{AAh}}}{{f{Mh}}}}{{{f{{AAj{c}}}}}{{f{Mh}}}A`}{{{f{AAl}}}{{f{Mh}}}}{{{f{BjAAd}}}E`}{{{f{BjAAf}}}E`}{{{f{BjABb}}}E`}{{{f{BjAAl}}}E`}{cc{}}000000{{{f{Dn}}FfFfBh}{{Ah{{ABd{AAl}}}}}}{{}Ff}000000{{{f{BjAAn}}}Fh}{{{f{BjAB`}}}Fh}{{{f{BjAAh}}}Fh}{{{f{Bj{AAj{c}}}}}FhA`}{{{f{BjAAl}}}Fh}{{}c{}}000000{{BhFf{B`{Dn}}}AAd}{{BhFf{B`{Dn}}}AAf}{{BhFfFf}AAn}{{BhFfFf}AB`}{{BhFfFf}AAh}{{BhFf}ABb}{{BhFfFfDn}{{AAj{c}}}A`}{{BhFfFfDnDn}{{AAj{c}}}A`}{c{{O`{e}}}{}{}}000000{{}{{O`{c}}}{}}000000{fOb}000000;;;;;;;````{{fh}b}{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}{{{f{F`}}}F`}{{f{f{Bjc}}}b{}}{fb}{{}F`}{Ff{{f{c}}}{}}{Ff{{f{Bjc}}}{}}{Ffb}{{{f{F`}}{f{F`}}}d}{{f{f{c}}}d{}}00{{{f{F`}}{f{BjGh}}}Gj}{cc{}}{{{f{F`}}{f{Bjc}}}bABf}{{}Ff}{{}c{}}{{{f{F`}}}d}{fc{}}{c{{O`{e}}}{}{}}{{}{{O`{c}}}{}}{fOb}5``{{ABhBh}{{l{c}}}C`}{{ABj{f{{l{c}}}}}{{l{c}}}C`}10{{ABjBhDn}{{l{c}}}C`}0{{ABhBh}{{O`{{l{c}}e}}}C`{}}{{ABj{f{{l{c}}}}}{{O`{{l{c}}e}}}C`{}}10{{ABjBhDn}{{O`{{l{c}}e}}}C`{}}0`{ABlABl}``{{ABnBhDn}e{}{{AC`{c}}}}{{eBhDn}AC`{}{{Hf{}{{Bb{c}}}}}}```{f{{f{c}}}{}}0{{{f{Bj}}}{{f{Bjc}}}{}}0{Ff{{f{c}}}{}}0{Ff{{f{Bjc}}}{}}0{Ffb}0{cc{}}0{{}Ff}0{{}c{}}000{{{f{ACb}}}ACd}{{{f{BjACd}}}{{B`{c}}}{}}{{{f{Bj{ACf{c}}}}}{{B`{e}}}Bf{}}1{{{f{Bj{ACf{c}}}}}{{B`{e}}}G`{}}`{{{f{ACd}}}{{Hd{Ff{B`{Ff}}}}}}{{{f{{ACf{c}}}}}{{Hd{Ff{B`{Ff}}}}}Bf}{c{{O`{e}}}{}{}}0{{}{{O`{c}}}{}}0{fOb}099`````````````````````````{{fh}b}0000{{}Fn}{{}Hn}{{FnFn}Fn}{{HnHn}Hn}{{{f{BjFn}}Fn}b}{{{f{BjHn}}Hn}b}3210{{{f{Fn}}}Ll}0{{{f{Hn}}}Dj}05432{f{{f{c}}}{}}000000{{{f{Bj}}}{{f{Bjc}}}{}}000000{{{f{{L`{c}}}}}{{L`{c}}}C`}{{{f{{Ij{c}}}}}{{Ij{c}}}C`}{{{f{ACh}}}ACh}{{{f{Fn}}}Fn}{{{f{Hn}}}Hn}{{f{f{Bjc}}}b{}}0000{fb}0000{{{f{BjACj}}}b}0{FnFn}{HnHn}{{{f{Fn}}Fn}d}{{{f{Hn}}Hn}d}{{}{{L`{c}}}C`}{{}{{Ij{c}}}C`}{{}Fn}{{}Hn}{{{f{{Kn{c}}}}}{{f{e}}}C`{}}{Ff{{f{c}}}{}}000000{Ff{{f{Bjc}}}{}}000000{{FnFn}Fn}{{HnHn}Hn}{{}d}{{{f{Ld}}}{{B`{Hl}}}}{{{Ij{c}}Hl}{{Ij{c}}}C`}{{{f{{Ij{c}}}}}{{B`{Hl}}}C`}{{{Ij{c}}{B`{Hl}}}{{Ij{c}}}C`}{Ffb}000000<;5{{{f{Fn}}{f{Fn}}}d}{{{f{Hn}}{f{Hn}}}d}7{{{f{BjFn}}c}b{{H`{}{{Bb{Fn}}}}}}{{{f{BjHn}}c}b{{H`{}{{Bb{Hn}}}}}}{{{Ij{c}}d}{{Ij{c}}}C`}{{{Ij{c}}{B`{d}}}{{Ij{c}}}C`}{{{f{{Ij{c}}}}Fn}{{Ij{c}}}C`}{{{f{{Ij{c}}}}Fn}{{Ij{e}}}C`C`}{{{Ij{c}}Hn}{{Ij{c}}}C`}{{{Ij{c}}{B`{Hn}}}{{Ij{c}}}C`}{{{f{{Ij{c}}}}{f{BjGh}}}GjC`}{{{f{ACh}}{f{BjGh}}}Gj}{{{f{Fn}}{f{BjGh}}}Gj}0000{{{f{Hn}}{f{BjGh}}}Gj}0000{cc{}}000000{Ll{{B`{Fn}}}}{Dj{{B`{Hn}}}}{LlFn}0{DjHn}010{cFn{{H`{}{{Bb{Fn}}}}}}{cHn{{H`{}{{Bb{Hn}}}}}}{{{f{Df}}}{{B`{Fn}}}}{{{f{Df}}}{{B`{Hn}}}}{{{f{{Ij{c}}}}}{{B`{Hl}}}C`}{{{f{{Ij{c}}}}}dC`}{{{f{Hn}}}d}{{{f{Ld}}}Hn}{{{f{{Ij{c}}}}}HnC`}0{{{f{{Ij{c}}}}}{{B`{f}}}C`}0{{{f{Bj{L`{c}}}}}{{f{Bj{Ij{c}}}}}C`}{{{f{Hn}}}Jj}{{}Ff}000000{{{f{BjFn}}Fn}b}{{{f{BjHn}}Hn}b}{{FnFn}Fn}{{HnHn}Hn}{{{f{Fn}}Fn}d}{{{f{Hn}}Hn}d}{{}c{}}000000{Fnc{}}{Hnc{}}{{{f{Fn}}}d}{{{f{Hn}}}d}{{{f{{Ij{c}}}}}dC`}21{{{f{{Ij{c}}}}}JjC`}111{{{f{Fn}}}{{ACl{Fn}}}}{{{f{Hn}}}{{ACl{Hn}}}}{{{f{Fn}}}{{ACn{Fn}}}}{{{f{Hn}}}{{ACn{Hn}}}}{{}d}{{}{{f{{ADb{AD`}}}}}}{{{f{Ld}}}{{B`{Kl}}}}{{{Ij{c}}}{{Ij{c}}}C`}{{{f{{Ij{c}}}}}{{B`{Kl}}}C`}{{{Ij{c}}B`}{{Ij{c}}}C`}{{{f{{Ij{c}}}}{Ij{c}}}{{ADd{c}}}C`}4321{{{Ij{c}}}{{L`{c}}}C`}{FnFn}{HnHn}{{{f{{L`{c}}}}}{{Lf{{Ij{c}}}}}C`}{{{f{BjFn}}Fn}b}{{{f{BjHn}}Hn}b}{{{f{BjFn}}Fnd}b}{{{f{BjHn}}Hnd}b}{{{f{Bj{Ij{c}}}}{B`{Hl}}}bC`}{{{f{Bj{Ij{c}}}}d}bC`}{{{f{BjHn}}d}b}{{{f{Bj{Ij{c}}}}Hn}bC`}{{{f{Bj{Ij{c}}}}B`}bC`}033{{{f{Bj{Ij{c}}}}Jj}bC`}{{{f{BjHn}}Jj}b}{{{Ij{c}}Jj}{{Ij{c}}}C`}{{{Ij{c}}{B`{Jj}}}{{Ij{c}}}C`}{{FnFn}Fn}{{HnHn}Hn}>=10{{{L`{c}}}{{Ij{c}}}C`}{fc{}}0000{{{f{BjFn}}Fn}b}{{{f{BjHn}}Hn}b}{c{{O`{e}}}{}{}}000000{{}{{O`{c}}}{}}000000{{{f{{L`{c}}}}}{{B`{{Lf{{Ij{c}}}}}}}C`}{{{f{{L`{c}}}}}{{B`{{Il{{Ij{c}}}}}}}C`}{fOb}000000:9{{{f{{L`{c}}}}}{{f{{ADf{Ld}}}}}C`}{{}c{}}000000{ACjACj}0{{{f{{L`{c}}}}}{{Il{{Ij{c}}}}}C`}````{{fh}b}{{{f{{ADh{c}}}}Ff}{{Hd{{ADh{c}}{ADh{c}}}}}Id}{e{{ADh{c}}}Id{{H`{}{{Bb{{B`{{f{c}}}}}}}}}}{e{{ADh{c}}}Id{{H`{}{{Bb{{f{c}}}}}}}}{{ADje}g{}{{H`{}{{Bb{c}}}}}{}}0{{{f{Ib}}}{{f{ADl}}}}{{{f{{ADh{c}}}}}{{f{ADl}}}Id}{{{f{Bj{ADh{c}}}}}{{f{BjADl}}}Id}{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}`{{{f{{ADh{c}}}}Ff}dId}{{{f{{ADh{c}}}}}{{ADh{c}}}{IdA@l}}{{f{f{Bjc}}}b{}}{fb}{Ff{{f{c}}}{}}{Ff{{f{Bjc}}}{}}{Ffb}{{{f{{ADh{c}}}}}{{f{ADj}}}Id}{{{f{{f{Ib}}}}{f{{f{Ib}}}}}d}{{{f{Ib}}{f{Ib}}}d}{{{f{{ADh{c}}}}{f{BjGh}}}Gj{IdADn}}{cc{}}{{{Fj{c}}}{{ADh{c}}}Id}{{FfADj}{{ADh{c}}}Id}{{{f{{ADh{c}}}}Ff}{{B`{{f{c}}}}}Id}{{}ADj}{{{f{Hb}}{f{{ADh{c}}}}{f{{ADh{c}}}}}{{ADh{c}}}Id}{{ADj{f{Hb}}cc}{{ADh{e}}}{}Id}{{{f{Hb}}{f{{ADh{c}}}}e}{{ADh{c}}}Id{}}{{{f{Hb}}c{f{{ADh{e}}}}}{{ADh{e}}}{}Id}{{}Ff}{{}c{}}{{{f{{ADh{c}}}}}eId{}}{{{f{{ADh{c}}}}Ff}dId}0{{fFf}d}{{{f{{ADh{c}}}}}{{AEd{{f{c}}{AE`{c}}AEb}}}Id}{{{f{{ADh{c}}}}}{{AEd{egAEb}}}Id{}{}}{{{f{{ADh{c}}}}}FfId}0`{db}{{{f{Bj{ADh{c}}}}{B`{Hb}}}bId}{{{f{Bj{ADh{c}}}}FfFf}bId}{{fFfFf}c{}}01{{{f{{ADh{c}}}}Ff}{{Hd{{ABd{Gl}}{ABd{Gl}}}}}Id}0{{{f{Ib}}}{{ABd{Ib}}}}{{{f{{ADh{c}}}}}{{ABd{Gl}}}Id}{fc{}}{g{{O`{{ADh{c}}e}}}Id{}{{H`{}{{Bb{{O`{{B`{{f{c}}}}e}}}}}}}}{g{{O`{{ADh{c}}e}}}Id{}{{H`{}{{Bb{{O`{{f{c}}e}}}}}}}}{{ADjg}{{O`{ie}}}{}{}{{H`{}{{Bb{{O`{ce}}}}}}}{}}0{c{{O`{e}}}{}{}}{{}{{O`{c}}}{}}{fOb}{{{f{Ib}}}{{f{Df}}}}{{}{{f{Df}}}}{{{f{{ADh{c}}}}}{{B`{{f{Hb}}}}}Id}{{{f{{ADh{c}}}}Ff}{{f{c}}}Id}0{{{f{{ADh{c}}}}Ff}eId{}}{{{f{{ADh{c}}}}}{{AE`{c}}}Id}{{{f{{ADh{c}}}}}eId{}}{{}c{}}{{{ADh{c}}{B`{Hb}}}{{ADh{c}}}Id}{{{f{{ADh{c}}}}{B`{Hb}}}{{ABd{Gl}}}Id}1`{{{f{Bj{AEf{c}}}}}bId}0{{{f{Bj{AEf{c}}}}{B`{c}}}bId}{{{f{Bj{AEf{c}}}}c}bId}{{{f{Bj{AEf{c}}}}{f{ADl}}}bId}{{{f{Bj{AEf{c}}}}{f{ADl}}}{{Ah{b}}}Id}{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}{{}{{AEf{c}}}Id}{Ff{{f{c}}}{}}{Ff{{f{Bjc}}}{}}{Ffb}{{{AEf{c}}}{{AEh{c}}}Id}{cc{}}{{}Ff}{{}c{}}{{BhFf}{{AEf{c}}}Id}{{{f{Bj{AEf{c}}}}}AfId}{c{{O`{e}}}{}{}}{{}{{O`{c}}}{}}{fOb}5````{{{f{BjAEj}}}b}{{{f{BjAEj}}{B`{{f{ADl}}}}}b}{{{f{BjAEj}}{f{ADl}}}b}{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}`{Ff{{f{c}}}{}}{Ff{{f{Bjc}}}{}}{Ffb}{{{f{AEl}}{f{BjGh}}}Gj}{cc{}}{{BhFf}{{ABd{AEj}}}}{{}AEn}{{}ADj}{{}Ff}{{}c{}}{{}d}`{{AF`AEnADj}b}{{{f{BjAEj}}}Af}{c{{O`{e}}}{}{}}{{}{{O`{c}}}{}}{fOb}6``````````````````````````````````````````{{fh}b}{{{f{AFb}}}n}{{{f{{AFf{}{{AFd{c}}}}}}g}{{AFf{}{{AFd{c}}}}}{}{}{{Cd{{B`{e}}}{{Cb{{B`{c}}}}}}Cf}}{{{f{AFh}}{f{Cd}}}AFh}{{{f{AFh}}{f{Cd}}}{{l{c}}}C`}{{{f{{AFf{}{{AFd{c}}}}}}i{f{Bj{Dl{g}}}}}b{}{}{}{{Cd{{B`{e}}{f{g}}}{{Cb{g}}}}}}{{{f{{AFf{}{{AFd{c}}}}}}g}{{AFf{}{{AFd{c}}}}}{}{}{{Cd{e}{{Cb{c}}}}Cf}}{{{f{AFj}}Ed}Ef}{{{f{AFj}}{f{{Dl{Eh}}}}{f{Ej}}}{{Ah{Ef}}}}{{{f{AFl}}}{{Ah{Ef}}}}`{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}{{{f{AFn}}{f{Dn}}}{{Ah{Af}}}}0{{{f{AFn}}{f{Dn}}F`}{{Ah{Af}}}}{{{f{AG`}}}AG`}{{f{f{Bjc}}}b{}}{fb}{Ff{{f{c}}}{}}{Ff{{f{Bjc}}}{}}{Ffb}{{{f{AG`}}{f{AG`}}}d}{{{f{{AGb{}{{Bb{c}}}}}}e}c{}{}}0{{{f{AGd}}}{{Ah{Af}}}}{{{f{AGd}}}{{Ah{{Hd{Af{AGf{Jn}}}}}}}}`{{{f{AGh}}c}{{Ah{AGh}}}{}}{{{f{AGj}}{f{Gb}}}{{Ah{{l{c}}}}}C`}`{{{f{AG`}}{f{BjGh}}}Gj}{cc{}}`{{BhcFf}AGl{}}{{BhFf}AGn}`{{{f{AH`}}Ff}{{Ah{Hj}}}}{{{f{AH`}}Ff}Hj}::{{{f{AG`}}{f{Bjc}}}bABf}{{}Ff}{{}c{}}{{{f{AHb}}}{{Ah{Gb}}}}{{{f{AHd}}}{{Ah{Gb}}}}??{{{f{AFb}}}{{B`{c}}}{}}{{{f{AFb}}}{{B`{n}}}}{{{f{AHf}}}{{B`{c}}}{}}2{{{f{AFb}}}{{B`{{Hd{cc}}}}}{}}{{{f{AFl}}}{{Ah{Ff}}}}{{{f{AHh}}FfFf}{{l{c}}}C`}{{{f{{AGb{}{{Bb{c}}}}}}e}c{}{}}0{{{f{AGd}}}{{Ah{{AGf{Jn}}}}}}{{{f{AHf}}nMn}{{Ah{{B`{c}}}}}{}}{{{f{AHj}}}AHj}{{{f{AHl}}{f{Cd}}N`}{{Ah{Af}}}}{{{f{AHn}}c{B`{e}}}{{Ah{AHn}}}{{H`{}{{Bb{Hl}}}}}{}}{{{f{AHn}}ci}{{Ah{AHn}}}{{H`{}{{Bb{Hl}}}}}{}{}{{Cd{{B`{e}}}{{Cb{{B`{g}}}}}}}}`{{{f{AHn}}{f{Gb}}{B`{c}}}{{Ah{AHn}}}{}}{{{f{AI`}}Jn}{{l{c}}}C`}{{{f{AIb}}Jnc}{{l{e}}}{}C`}`{{{f{AFj}}d}{{l{c}}}C`}{{{f{AFj}}Ed}{{l{c}}}C`}{{{f{AId}}Dj}{{B`{n}}}}{{{f{AFb}}}{{B`{c}}}{}}{{{f{AIf}}{f{c}}}{{Ah{AIf}}}Nb}{{{f{AIh}}{f{c}}}AIhNb}{{{f{AIj}}}{{Fj{{f{{Dl{Dj}}}}}}}}{fc{}}{c{{O`{e}}}{}{}}{{}{{O`{c}}}{}}{fOb}{{{f{AFl}}}{{Ah{AFl}}}}9{{}c{}}`{{{f{AIl}}{f{Gb}}{f{{l{c}}}}}{{Ah{{l{c}}}}}C`}``````{{{f{{l{c}}}}{f{{l{e}}}}gik}{{l{m}}}C`C`{{Cd{ff}{{Cb{}}}}}{{Cd{f}{{Cb{}}}}}{{Cd{f}{{Cb{}}}}}C`}{{{l{c}}{l{e}}gik}{{l{m}}}C`C`{{Cd{}{{Cb{}}}}}{{Cd{}{{Cb{}}}}}{{Cd{}{{Cb{}}}}}C`}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}C`C`Gl{{Cj{ff}{{Cb{g}}}}}{{C`{}{{Gn{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{l{i}}}C`C`{{AIn{B`B`}}}C`}{{{f{{l{c}}}}{f{{l{e}}}}g}bC`C`{{Cj{B`B`}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}D`C`C`{{Cj{{f{BjDb}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}C`C`{}{{Cj{}{{Cb{g}}}}}C`}{{{f{{l{c}}}}{f{{l{e}}}}iBh}{{l{k}}}C`C`{GlAJ`}{{Cj{ff}{{Cb{g}}}}}{{C`{}{{Gn{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}iBh}{{l{k}}}C`C`Gl{{Cj{ff}{{Cb{g}}}}}{{C`{}{{Gn{g}}}}}}{{{l{c}}{l{e}}i}{{l{k}}}C`C`Gl{{Cj{}{{Cb{g}}}}}{{C`{}{{Gn{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{Ah{Af}}}C`C`{{Cj{ff}{{Cb{{ABd{Gl}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}gdd}{{l{c}}}C`C`{{Cj{ff}{{Cb{{ABd{Gl}}}}}}}}85{{{f{{l{c}}}}{f{{l{e}}}}k}{{O`{{l{m}}i}}}C`C`{}{}{{Cj{B`B`}{{Cb{{O`{{B`{g}}i}}}}}}}C`}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}i}{{l{k}}}C`C`C`{{AJb{B`B`B`}}}C`}{{{f{{l{c}}}}{f{{l{e}}}}k}{{O`{{l{m}}i}}}C`C`GlAJd{{Cj{ff}{{Cb{{O`{gi}}}}}}}{{C`{}{{Gn{g}}}}}}2{{{f{{l{c}}}}{f{{l{e}}}}kBh}{{O`{{l{m}}i}}}C`C`GlAJd{{Cj{ff}{{Cb{{O`{gi}}}}}}}{{C`{}{{Gn{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}idd}{{O`{{l{c}}g}}}C`C`AJd{{Cj{ff}{{Cb{{O`{{ABd{Gl}}g}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}m}{{O`{{l{o}}k}}}C`C`C`{}{}{{Cj{B`B`B`}{{Cb{{O`{{B`{i}}k}}}}}}}C`}{{{f{{l{c}}}}i}{{O`{{l{k}}g}}}C`{}{}{{Cj{B`}{{Cb{{O`{{B`{e}}g}}}}}}}C`}{{{f{{l{c}}}}i}{{O`{{l{k}}g}}}C`{}{}{{Cj{}{{Cb{{O`{eg}}}}}}}C`}{{{f{{l{c}}}}i}{{O`{{l{k}}g}}}C`{GlAJ`}AJd{{Cj{f}{{Cb{{O`{eg}}}}}}}{{C`{}{{Gn{e}}}}}}{{{f{{l{c}}}}e}{{l{g}}}C`{{AJf{B`}}}C`}{{{f{{l{c}}}}e}{{l{g}}}C`AJfC`}{{{f{{l{c}}}}g}{{l{i}}}C`Gl{{Cj{f}{{Cb{e}}}}}{{C`{}{{Gn{e}}}}}}{{{l{c}}g}{{l{i}}}C`Gl{{Cj{}{{Cb{e}}}}}{{C`{}{{Gn{e}}}}}}{{{f{{l{c}}}}g}{{l{i}}}C`{GlAJ`}{{Cj{f}{{Cb{e}}}}}{{C`{}{{Gn{e}}}}}}0{{{f{{l{c}}}}}FfA`}0{{JjJj}Jj}{{{f{Ef}}Hl}{{Ah{b}}}}{{{f{{AJh{Hl}}}}Hl}{{Ah{b}}}}````{{fh}b}{{{f{{l{c}}}}eAJjd}{{Fj{Hl}}}C`{{Bf{}{{Bb{B`}}}}}}{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}{{{f{AJj}}}AJj}{{f{f{Bjc}}}b{}}{fb}{{}AJj}{Ff{{f{c}}}{}}{Ff{{f{Bjc}}}{}}{Ffb}{{{f{AJj}}{f{AJj}}}d}{{f{f{c}}}d{}}00{{{f{AJj}}{f{BjGh}}}Gj}{cc{}}{{{f{AJj}}{f{Bjc}}}bABf}{{}Ff}{{}c{}}{{{f{{Dl{f}}}}cHle}{{Fj{Hl}}}{{Bf{}{{Bb{B`}}}}}{{Cd{fFff}{{Cb{d}}}}}}{fc{}}{c{{O`{e}}}{}{}}{{}{{O`{c}}}{}}{fOb}5`{{Ff{f{Bj{Fj{d}}}}}b}```{{{f{AJl}}FfFf}AJl}0{{Ff{f{{Dl{Eh}}}}{f{BjEj}}}{{Ah{{AJn{Ef}}}}}}{{{f{{Dl{Eh}}}}{f{{Dl{d}}}}{f{{Dl{d}}}}}{{Ah{AK`}}}}{{{f{{Dl{Eh}}}}{f{{Dl{d}}}}{f{{Dl{d}}}}}{{Ah{{AKb{Jn}}}}}}{{Bh{f{{Dl{Eh}}}}{f{{Dl{d}}}}{f{{Dl{d}}}}}{{Ah{AKd}}}}{{Bh{f{{Dl{Af}}}}}{{Ah{AKd}}}}{{{f{Af}}}{{Ah{Fh}}}}{{{f{{Dl{Af}}}}}{{Ah{AK`}}}}{{{f{{Dl{Af}}}}}{{Ah{AKd}}}}0```{{fh}b}0{f{{f{c}}}{}}0{{{f{Bj}}}{{f{Bjc}}}{}}0{{{f{Ed}}}Ed}{{{f{Ej}}}Ej}{{f{f{Bjc}}}b{}}0{fb}0{{}Ed}{{}Ej}{Ff{{f{c}}}{}}0{Ff{{f{Bjc}}}{}}0``{Ffb}0{{{f{Ed}}{f{Ed}}}d}{{{f{Ej}}{f{Ej}}}d}{{f{f{c}}}d{}}00000{{{f{Ed}}{f{BjGh}}}Gj}{{{f{Ej}}{f{BjGh}}}Gj}{cc{}}{{{f{Ej}}}Ed}{{{f{Ed}}}Ej}2{{{f{Ed}}{f{Bjc}}}bABf}{{{f{Ej}}{f{Bjc}}}bABf}{{}Ff}0{{}c{}}0````{{}Ed}{{}Ej}``{{{f{AJl}}FfFf}AJl}0{fc{}}0{c{{O`{e}}}{}{}}0{{}{{O`{c}}}{}}0{fOb}077{{Edd}Ed}{{Ejd}Ej}1010{{Ejc}Ej{{H`{}{{Bb{d}}}}}}210{EdEd}{EjEj}`{AKfJn}00{{}d}??0````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{fh}b}00000000000000000000000000000{{{f{E`}}}d}{{{f{J`}}{f{J`}}}c{}}{{{f{Gb}}{f{Gb}}}c{}}{{GbGb}c{}}{{{f{D`}}{f{D`}}}c{}}{{{f{D`}}{f{Df}}}c{}}{{D`D`}c{}}{{{f{El}}{f{El}}}c{}}{{ElEl}c{}}{{{f{El}}{f{{Dl{Dj}}}}}c{}}{{{f{Hj}}{f{Hj}}}Hj}{{{f{{l{c}}}}{f{Af}}}{{O`{AfAKh}}}{}}000000{{{f{D`}}{f{Af}}}{{Ah{Af}}}}{{{f{El}}{f{Af}}}{{Ah{Af}}}}{{{f{Gb}}{f{Af}}}{{Ah{Af}}}}{{{f{E`}}{f{Al}}}Af}{{{f{Gb}}{f{Al}}}Af}{{{f{D`}}{f{Al}}}Af}{{{f{El}}{f{Al}}}Af}{{{f{{AEh{c}}}}{f{Al}}}AfId}{{{f{Gb}}}d}{{{f{Gb}}}{{B`{d}}}}{{{f{E`}}}{{`{{`{{Bf{}{{Bb{{B`{Bd}}}}}}}}}}}}{{{f{E`}}Bh}{{`{{`{{Bf{}{{Bb{{B`{Bd}}}}}}}}}}}}32{{{f{E`}}c}E`{{Cd{{B`{Af}}}{{Cb{{B`{Af}}}}}}Cf}}{{{f{Gb}}c}Gb{{Cd{{B`{d}}}{{Cb{{B`{d}}}}}}Cf}}{{{f{D`}}c}D`{{Cd{{B`{{f{Df}}}}}{{Cb{{B`{{AKj{Df}}}}}}}}Cf}}{{{f{El}}c}El{{Cd{{B`{{f{{Dl{Dj}}}}}}}{{Cb{{B`{{AKj{{Dl{Dj}}}}}}}}}}Cf}}{{{f{{AEh{c}}}}e}{{AEh{c}}}Id{{Cd{{B`{{f{c}}}}}{{Cb{{B`{c}}}}}}Cf}}{{{f{E`}}c}E`{{Cj{Ch}{{Cb{Af}}}}}}{{{f{E`}}e}{{l{g}}}{}{{Cj{{B`{Ch}}}{{Cb{{B`{c}}}}}}Cf}C`}{{{f{AKl}}c}Af{{Cd{{f{Af}}}{{Cb{Af}}}}}}{{{f{AKn}}c}Af{{Cd{{f{Af}}}{{Cb{Af}}}}}}{{{f{Gb}}{f{Cd}}}Gb}{{{f{D`}}{f{Cd}}}D`}{{{f{El}}{f{Cd}}}El}{{{f{Gb}}{f{Cd}}}{{l{c}}}C`}{{{f{D`}}{f{Cd}}}{{l{c}}}C`}{{{f{El}}{f{Cd}}}{{l{c}}}C`}{{{f{D`}}c}D`{{Cj{{f{Df}}}{{Cb{{f{Df}}}}}}}}{{{f{El}}c}El{{Cj{{f{{Dl{Dj}}}}}{{Cb{{f{{Dl{Dj}}}}}}}}}}{{{f{E`}}{f{Cd}}}{{Ah{E`}}}}{{{f{E`}}e{f{Bj{Dl{c}}}}}b{}{{Cd{{B`{Af}}{f{c}}}{{Cb{c}}}}}}{{{f{Gb}}e{f{Bj{Dl{c}}}}}b{}{{Cd{{B`{d}}{f{c}}}{{Cb{c}}}}}}{{{f{D`}}e{f{Bj{Dl{c}}}}}b{}{{Cd{{B`{{f{Df}}}}{f{c}}}{{Cb{c}}}}}}{{{f{El}}e{f{Bj{Dl{c}}}}}b{}{{Cd{{B`{{f{{Dl{Dj}}}}}}{f{c}}}{{Cb{c}}}}}}{{{f{{AEh{c}}}}g{f{Bj{Dl{e}}}}}bId{}{{Cd{{B`{{f{c}}}}{f{e}}}{{Cb{e}}}}}}{{{f{E`}}c}E`{{Cd{Af}{{Cb{Af}}}}Cf}}{{{f{Gb}}c}Gb{{Cd{d}{{Cb{d}}}}Cf}}{{{f{D`}}c}D`{{Cd{{f{Df}}}{{Cb{{AKj{Df}}}}}}Cf}}{{{f{El}}c}El{{Cd{{f{{Dl{Dj}}}}}{{Cb{{AKj{{Dl{Dj}}}}}}}}Cf}}{{{f{{AEh{c}}}}e}{{AEh{c}}}Id{{Cd{{f{c}}}{{Cb{c}}}}Cf}}{{{f{D`}}c}D`{{Cj{Eb{f{Df}}}{{Cb{Eb}}}}Cf}}{{{f{Gb}}Ed}Ef}{{{f{D`}}Ed}Ef}{{{f{El}}Ed}Ef}{{{f{AKd}}Ed}Ef}{{{f{Gb}}{f{{Dl{Eh}}}}{f{Ej}}}{{Ah{Ef}}}}{{{f{D`}}{f{{Dl{Eh}}}}{f{Ej}}}{{Ah{Ef}}}}{{{f{El}}{f{{Dl{Eh}}}}{f{Ej}}}{{Ah{Ef}}}}{{{f{AKd}}{f{{Dl{Eh}}}}{f{Ej}}}{{Ah{Ef}}}}{{{f{Gb}}}{{Ah{Ef}}}}{{{f{D`}}}{{Ah{Ef}}}}{{{f{El}}}{{Ah{Ef}}}}{{{f{{AEh{c}}}}}{{Ah{Ef}}}Id}{eAL`{}{{H`{}{{Bb{c}}}}}}0{{ADje}ALb{}{{H`{}{{Bb{c}}}}}}0{{{f{D`}}}El}{{{f{Hj}}}Hj}{{{f{Dn}}}{{f{Dn}}}}{{{f{Mh}}}{{f{Dn}}}}{{{f{ALd}}}{{f{Dn}}}}{{{f{{AJ`{}{{ALf{c}}{ALh{e}}{ALj{g}}}}}}}{{B`{{f{{Dl{c}}}}}}}A@l{ALl{ALn{c}}}{{G`{}{{Bb{c}}}}HhJbJd}}{{{f{E`}}{f{{l{c}}}}{f{{l{e}}}}g}E`C`C`{{Cj{{B`{Ch}}B`B`}{{Cb{{B`{Af}}}}}}}}{{{f{Gb}}{f{Gb}}}c{}}{{GbGb}c{}}0101{f{{f{c}}}{}}0000000000000000000000000000000000{{{f{Bj}}}{{f{Bjc}}}{}}0000000000000000000000000000000000{Dn{{ABd{Dn}}}}{{{f{AM`}}{f{AM`}}c}{{Ah{AM`}}}AMb}{{{f{AMd}}{f{Dn}}}{{Ah{Af}}}}0{{{f{Hj}}{f{Dn}}}Hj}{{{f{Dn}}Dn}Dn}{{{f{E`}}{f{Dn}}}{{Ah{Af}}}}{{{f{Gb}}{f{Dn}}}{{Ah{Af}}}}{{{f{D`}}{f{Dn}}}{{Ah{Af}}}}{{{f{El}}{f{Dn}}}{{Ah{Af}}}}{{{f{AKd}}{f{Dn}}}{{Ah{Af}}}}{{{f{AMd}}{f{Dn}}F`}{{Ah{Af}}}}{{{f{J`}}{f{Dn}}F`}{{Ah{Af}}}}{{{f{E`}}{f{Dn}}F`}{{Ah{Af}}}}{{{f{Gb}}{f{Dn}}F`}{{Ah{Af}}}}{{{f{D`}}{f{Dn}}F`}{{Ah{Af}}}}{{{f{El}}{f{Dn}}F`}{{Ah{Af}}}}{{{f{AKd}}{f{Dn}}F`}{{Ah{Af}}}}`{{{f{{l{c}}}}{f{Af}}}{{O`{AfAKh}}}{}}0000{{{f{AKl}}{f{Af}}}{{Ah{Af}}}}{{{f{AKn}}{f{Af}}}{{Ah{Af}}}}{{{f{{AMf{ce}}}}}{{AMf{ce}}}C`C`}{{{f{AMh}}}AMh}{{{f{Hj}}}Hj}{{{f{AMj}}}AMj}{{{f{Dn}}}Dn}{{{f{AMl}}}AMl}{{{f{Mh}}}Mh}{{{f{AMn}}}AMn}{{{f{AN`}}}AN`}{{{f{ANb}}}ANb}{{{f{Lj}}}Lj}{{{f{Ln}}}Ln}{{{f{ANd}}}ANd}{{{f{ANf}}}ANf}{{{f{M`}}}M`}{{{f{Lh}}}Lh}{{{f{Cn}}}Cn}{{{f{Cl}}}Cl}{{{f{ANh}}}ANh}{{{f{ANj}}}ANj}{{{f{Dd}}}Dd}{{{f{Dh}}}Dh}{{{f{ANl}}}ANl}{{{f{An}}}An}{{{f{ANn}}}ANn}{{{f{AO`}}}AO`}{{{f{AOb}}}AOb}{{{f{AOd}}}AOd}{{{f{ADj}}}ADj}{{{f{AOf}}}AOf}{{f{f{Bjc}}}b{}}00000000000000000000000000000{fb}00000000000000000000000000000{{{f{BjMh}}Dn}b}{AOhe{}{{AL`{c}}AJ`}}0{{AOhADj}e{}{{ALb{c}}AJ`}}0{{{f{Dn}}}d}00{AOjDn}{{}Hj}{{}AMj}{{}Dn}{{}ADj}{{{f{{AMf{ce}}}}}{{f{g}}}C`C`{}}{Ff{{f{c}}}{}}0000000000000000000000000000000000{{{f{Bj{AMf{ce}}}}}{{f{Bjg}}}C`C`{}}{Ff{{f{Bjc}}}{}}0000000000000000000000000000000000{{{f{J`}}{f{J`}}}c{}}{{{f{{l{c}}}}{f{Af}}}{{O`{AfAKh}}}{}}000000{Ffb}0000000000000000000000000000000000{{{f{AMd}}}{{f{Dn}}}}{{{f{J`}}}{{f{Dn}}}}{{{f{Hj}}}Dn}{{{f{Mh}}}{{f{Dn}}}}`{{{f{Hj}}{f{Hj}}}d}{{{f{AMj}}{f{AMj}}}d}{{{f{Dn}}{f{ADj}}}d}{{{f{Dn}}{f{Dn}}}d}{{{f{AMl}}{f{AMl}}}d}{{{f{Mh}}{f{Mh}}}d}{{{f{AMn}}{f{AMn}}}d}{{{f{ADj}}{f{ADj}}}d}{{{f{AOf}}{f{AOf}}}d}{{{f{Hj}}{f{Hj}}d}d}{{{f{E`}}{f{E`}}}Gb}{{{f{Gb}}{f{Gb}}}Gb}{{{f{D`}}{f{D`}}}Gb}{{{f{D`}}{f{Df}}}Gb}{{{f{El}}{f{El}}}Gb}{{{f{El}}{f{{Dl{Dj}}}}}Gb}542301{{f{f{c}}}d{}}00000000000000000000000{{{f{E`}}}{{Ah{{Hd{Af{AGf{Jn}}}}}}}}{{{f{{AMf{ce}}}}}MhC`C`}{{{f{Gb}}d}{{Ah{Gb}}}}{{{f{El}}{f{{Dl{Dj}}}}}{{Ah{El}}}}{{{f{D`}}{f{Gb}}}{{Ah{{l{Dd}}}}}}{{{f{El}}{f{Gb}}}{{Ah{{l{Dh}}}}}}{{{f{{AEh{c}}}}{f{Gb}}}{{Ah{{l{{I`{c}}}}}}}Id}{{AMb{f{AOl}}{f{AOl}}}{{Ah{AOl}}}}{{{f{E`}}{f{BjGh}}}Gj}{{{f{D`}}{f{BjGh}}}Gj}{{{f{El}}{f{BjGh}}}Gj}{{{f{{AEh{c}}}}{f{BjGh}}}GjId}{{{f{AMh}}{f{BjGh}}}Gj}{{{f{Hj}}{f{BjGh}}}Gj}0{{{f{AMj}}{f{BjGh}}}Gj}{{{f{Dn}}{f{BjGh}}}Gj}0{{{f{AMl}}{f{BjGh}}}Gj}{{{f{Mh}}{f{BjGh}}}Gj}{{{f{AMn}}{f{BjGh}}}Gj}0{{{f{ADj}}{f{BjGh}}}{{O`{bAOn}}}}{{{f{AOf}}{f{BjGh}}}{{O`{bAOn}}}}{{{f{E`}}c}b{{Cj{{B`{Ch}}}}}}{cc{}}000000{{{f{Df}}}Hj}{cHjB@`}{{{f{{Dl{Dj}}}}}Hj}3{dHj}{{{B`{c}}}Hj{{B@b{Hj}}}}5{{{f{ADj}}}Dn}{HjDn}{{{f{Hj}}}Dn}88{{{f{Hj}}}Mh}9{{{f{B@d}}}Mh}:{{{f{AOf}}}AMn};;;;;;;;;;;;;;;;;;;;;{B@fADj}{B@hADj}={{{f{ADj}}d}Dn}{cE`{{H`{}{{Bb{{B`{Af}}}}}}}}{eE`{{B@j{Af}}}{{H`{}{{Bb{c}}}}}}{cE`{{H`{}{{Bb{{B`{{ABd{Gl}}}}}}}}}}{cGb{{H`{}{{Bb{d}}}}}}{eD`{{`{Df}}}{{H`{}{{Bb{c}}}}}}{eD`{{Kf{Df}}}{{H`{}{{Bb{{B`{c}}}}}}}}{eEl{{`{{Dl{Dj}}}}}{{H`{}{{Bb{c}}}}}}{eEl{{Kf{{Dl{Dj}}}}}{{H`{}{{Bb{{B`{c}}}}}}}}{e{{AEh{c}}}Id{{H`{}{{Bb{{B`{c}}}}}}}}{{Bhc}{{l{An}}}{{Bf{}{{Bb{{B`{d}}}}}}}}{{Bhe}D`{{Kf{Df}}}{{Bf{}{{Bb{{B`{c}}}}}}}}{{Bhe}El{{Kf{{Dl{Dj}}}}}{{Bf{}{{Bb{{B`{c}}}}}}}}{{Bhe}{{AEh{c}}}Id{{Bf{}{{Bb{{B`{c}}}}}}}};<97856{eAKd{{Kf{{Dl{Dj}}}}}{{H`{}{{Bb{{B`{c}}}}}}}}{eAKd{{`{{Dl{Dj}}}}}{{H`{}{{Bb{c}}}}}}6{{Bhc}{{l{An}}}{{Bf{}{{Bb{d}}}}}}{{Bhe}D`{{Kf{Df}}}{{Bf{}{{Bb{c}}}}}}{{Bhe}El{{Kf{{Dl{Dj}}}}}{{Bf{}{{Bb{c}}}}}}{{Bhe}{{AEh{c}}}Id{{Bf{}{{Bb{c}}}}}}{cE`{{Hf{}{{Bb{{B`{Af}}}}}}}}{cGb{{Hf{}{{Bb{{B`{d}}}}}}}}{cGb{{Hf{}{{Bb{d}}}}}}{eD`{{`{Df}}JbJdB@l}{{Hf{}{{Bb{c}}}}}}{eD`{{Kf{Df}}JbJd}{{Hf{}{{Bb{{B`{c}}}}}}}}{eEl{{`{{Dl{Dj}}}}JbJdB@l}{{Hf{}{{Bb{c}}}}}}{eEl{{Kf{{Dl{Dj}}}}JbJd}{{Hf{}{{Bb{{B`{c}}}}}}}}{{cBhDn}E`{{Hf{}{{Bb{{B`{Af}}}}}}}}{{Bh{f{{Dl{d}}}}}Gb}{{Bh{f{{Dl{c}}}}}D`{{Kf{Df}}}}{{Bh{f{{Dl{c}}}}}El{{Kf{{Dl{Dj}}}}}}{{Bh{f{{Dl{c}}}}}{{AEh{c}}}Id}{{Bh{f{{Dl{{B`{d}}}}}}}Gb}{{Bh{f{{Dl{{B`{c}}}}}}}D`{{Kf{Df}}}}{{Bh{f{{Dl{{B`{c}}}}}}}El{{Kf{{Dl{Dj}}}}}}{{Bh{f{{Dl{{B`{c}}}}}}}{{AEh{c}}}Id}{cGb{{Hh{}{{Bb{{B`{d}}}}}}}}{{{Fj{c}}ADj}{{AJ`{}{{ALf{c}}{ALh{e}}{ALj{g}}}}}A@l{ALl{ALn{c}}}{{G`{}{{Bb{c}}}}HhJbJd}}{{{Fj{c}}ADj}{{AJ`{}{{ALf{e}}{ALh{c}}{ALj{g}}}}}{ALl{ALn{e}}}A@l{{G`{}{{Bb{e}}}}HhJbJd}}{{FfcADj}{{AJ`{}{{ALf{c}}{ALh{e}}{ALj{g}}}}}A@l{ALl{ALn{c}}}{{G`{}{{Bb{c}}}}HhJbJd}}{{Bh{f{Af}}Ff}E`}{{BhdFf}Gb}{{Bh{f{Df}}Ff}D`}{{Bh{f{{Dl{Dj}}}}Ff}El}{{Bh{f{{Dl{Dj}}}}Ff}AKd}{{BhcFf}{{AEh{c}}}Id}{{FfADj}{{AJ`{}{{ALf{c}}{ALh{e}}{ALj{g}}}}}A@l{ALl{ALn{c}}}{{G`{}{{Bb{c}}}}HhJbJd}}{{BhFf}E`}{{BhFf}Gb}{{BhFf}D`}{{BhFf}El}{{BhFf}AKd}{{BhFf}{{AEh{c}}}Id}{{BhFf{f{Dn}}}E`}{{{f{{AJ`{}{{ALf{c}}{ALh{e}}{ALj{g}}}}}}Ff}{{B`{c}}}A@l{ALl{ALn{c}}}{{G`{}{{Bb{c}}}}HhJbJd}}{{{f{J`}}Ff}{{Ah{Hj}}}}{{{f{AMd}}Ff}{{Ah{Hj}}}}0{{{f{E`}}Ff}{{Ah{Hj}}}}{{{f{Gb}}Ff}{{Ah{Hj}}}}{{{f{D`}}Ff}{{Ah{Hj}}}}{{{f{El}}Ff}{{Ah{Hj}}}}{{{f{AKd}}Ff}{{Ah{Hj}}}}{{{f{{AEh{c}}}}Ff}{{Ah{Hj}}}Id}{{{f{J`}}Ff}Hj}{{{f{AMd}}Ff}Hj}0{{{f{E`}}Ff}Hj}{{{f{Gb}}Ff}Hj}{{{f{D`}}Ff}Hj}{{{f{El}}Ff}Hj}{{{f{AKd}}Ff}Hj}{{{f{{AEh{c}}}}Ff}HjId}{{{f{E`}}Ff}{{B`{Af}}}}{{}Dn}00000000000000000000000{{{f{E`}}}Af}{{{f{{AEh{c}}}}Ff}{{B`{{f{Ib}}}}}Id}0{{{f{Hj}}}{{B`{{f{Df}}}}}}{{{f{B@n}}Ff}Hj}{{{f{{AJ`{}{{ALf{c}}{ALh{e}}{ALj{g}}}}}}Ff}{{B`{c}}}A@l{ALl{ALn{c}}}{{G`{}{{Bb{c}}}}HhJbJd}}{{{f{E`}}}Ff}{{{f{D`}}}Ff}{{{f{AKd}}}Ff}{{{f{E`}}dd}{{Ah{Al}}}}{{{f{Gb}}dd}{{Ah{Al}}}}{{{f{D`}}dd}{{Ah{Al}}}}{{{f{El}}dd}{{Ah{Al}}}}{{{f{AKd}}dd}{{Ah{Al}}}}{{{f{{AEh{c}}}}dd}{{Ah{Al}}}Id}{{{f{E`}}{f{E`}}}Gb}{{{f{Gb}}{f{Gb}}}Gb}{{{f{D`}}{f{D`}}}Gb}{{{f{D`}}{f{Df}}}Gb}{{{f{El}}{f{{Dl{Dj}}}}}Gb}{{{f{El}}{f{El}}}Gb}542310{{{f{Hj}}{f{Bjc}}}bABf}{{{f{AMj}}{f{Bjc}}}bABf}{{{f{Dn}}{f{Bjc}}}bABf}{{{f{Mh}}{f{Bjc}}}bABf}{{{f{AMn}}{f{Bjc}}}bABf}{{{f{ADj}}{f{Bjc}}}bABf}{{{f{AOf}}{f{Bjc}}}bABf}{{{f{Hj}}{f{Bjc}}d}bABf}{{{f{Hj}}}Hl}{DnDn}{{}Ff}0000000000000000000000000000000000{{{f{E`}}}{{f{Dn}}}}{{{f{Dn}}}{{B`{{f{Dn}}}}}}{{{f{ADj}}}{{B`{{f{ADj}}}}}}{{}c{}}0000000000000000000000000000000000{{}Eh}{{BA`{B`{Ff}}Ff}{{Ah{J`}}}}{{BA`{B`{Ff}}Ff}J`}{{{f{E`}}}c{}}{{{f{Gb}}}c{}}{{{f{D`}}}c{}}{{{f{El}}}c{}}{{{f{AKd}}}c{}}{{{f{{AEh{c}}}}}eId{}}{{BAbDn}{{Ah{Kl}}}}{J`Af}{BA`Af}{Hj{{Ah{Hj}}}}{{{f{Dn}}}d}00{{{f{Hj}}}d}1111010111101{{{f{ADj}}}d}12121222212222120{{{f{{AJ`{}{{ALf{c}}{ALh{e}}{ALj{g}}}}}}}{{AEd{cgAEb}}}A@l{ALl{ALn{c}}}{{G`{}{{Bb{c}}}}HhJbJd}}{{{f{E`}}}{{`{{Bf{}{{Bb{Jn}}}}}}}}{{{f{{AJ`{}{{ALf{c}}{ALh{e}}{ALj{g}}}}}}}{{B`{c}}}A@l{ALl{ALn{c}}}{{G`{}{{Bb{c}}}}HhJbJd}}{{{f{Dn}}}{{f{Dn}}}}{{{f{E`}}{f{E`}}}Gb}{{{f{Gb}}{f{Gb}}}Gb}{{{f{D`}}{f{Df}}}Gb}{{{f{D`}}{f{D`}}}Gb}{{{f{El}}{f{El}}}Gb}{{{f{El}}{f{{Dl{Dj}}}}}Gb}543210{{{f{AM`}}{f{AM`}}}{{Ah{{Hd{AM`AM`}}}}}}{{E`E`}{{Ah{{Hd{E`E`}}}}}}{{{f{Dn}}{f{Dn}}}{{Ah{d}}}}{{{f{AMj}}}{{B`{Dn}}}}{{{f{Gb}}}{{B`{d}}}}{{{f{Gb}}}Kl}{{{f{D`}}}Kl}{{{f{El}}}Kl}{{{f{Gb}}}{{B`{n}}}}{{{f{AKl}}}{{B`{If}}}}{{{f{AKn}}}{{B`{n}}}}{{{f{AKl}}}Kl}{{{f{AKn}}}Kl}{{{f{Dn}}{f{Dn}}}{{Ah{Dn}}}}9876{{Bh{f{{Dl{Dj}}}}FfFf}Gb}{{{f{J`}}{f{J`}}}c{}}{{{f{{l{c}}}}{f{Af}}}{{O`{AfAKh}}}{}}000000{{{f{D`}}}{{Ah{Ff}}}}{{{f{El}}}{{Ah{Ff}}}}{{{f{Mh}}}{{f{Bh}}}}`{{}c{}}00{{Bhc}D`{{Kf{{Dl{{B`{{f{Df}}}}}}}}}}{{Bhc}D`{{Kf{{Dl{{AKj{Df}}}}}}}}{{Bhc}D`{{Kf{{Dl{{B`{{AKj{Df}}}}}}}}}}{{Bhc}D`{{Kf{{Dl{{f{Df}}}}}}}}{{Bhc}El{{Kf{{Dl{{B`{{f{{Dl{Dj}}}}}}}}}}}}{{Bhc}El{{Kf{{Dl{{B`{{AKj{{Dl{Dj}}}}}}}}}}}}{{Bhc}El{{Kf{{Dl{{f{{Dl{Dj}}}}}}}}}}{{Bhc}El{{Kf{{Dl{{AKj{{Dl{Dj}}}}}}}}}}{{Bh{f{{Dl{c}}}}}{{AEh{c}}}Id}{{Bhe}{{AEh{c}}}Id{{Kf{{Dl{{B`{c}}}}}}}}{{BhDn}Mh}{Bh{{AEh{c}}}Id}{{{f{E`}}FfFf}E`}{{{f{Gb}}FfFf}Gb}{{{f{D`}}FfFf}D`}{{{f{El}}FfFf}El}{{{f{AKd}}FfFf}AKd}{{{f{{AEh{c}}}}FfFf}{{AEh{c}}}Id}{{Bh{Fj{c}}}{{AEh{c}}}Id}{{Bh{Fj{c}}Hb}{{AEh{c}}}Id}{{{l{c}}}{{AMf{ec}}}C`C`}{{}AMl}{Gbc{}}{{{f{Gb}}}c{}}{{{f{E`}}{f{E`}}}Gb}{{{f{Gb}}{f{Gb}}}Gb}{{{f{D`}}{f{Df}}}Gb}{{{f{D`}}{f{D`}}}Gb}{{{f{El}}{f{{Dl{Dj}}}}}Gb}{{{f{El}}{f{El}}}Gb}543201{{{f{E`}}}{{Ah{{AGf{Jn}}}}}}9{{{f{E`}}}{{`{{Mj{}{{Bb{{B`{Af}}}}}}}}}}{{{f{D`}}}{{`{{Mj{}{{Bb{{B`{{f{Df}}}}}}}}}}}}{{{f{BjE`}}}{{`{{Ml{}{{Bb{{B`{Af}}}}}}}}}}{{{f{D`}}}{{`{{Ml{}{{Bb{{B`{{f{Df}}}}}}}}}}}}{{{f{Hj}}{f{Hj}}}{{B`{BAd}}}}{{{f{AMn}}{f{AMn}}}{{B`{BAd}}}}{{{f{{AMf{ce}}}}}{{f{{l{e}}}}}C`C`}{{{f{J`}}}{{B`{Ff}}}}{{{f{{AMf{ANnIn}}}}}{{B`{Ff}}}}{{{f{AKl}}nMn}{{Ah{{B`{If}}}}}}{{{f{AKn}}nMn}{{Ah{{B`{n}}}}}}{{{f{AKl}}nMn}{{Ah{Kl}}}}{{{f{AKn}}nMn}{{Ah{Kl}}}}{{BhFfn}{{Ah{Gb}}}}{{{f{{l{c}}}}{f{Af}}}{{O`{AfAKh}}}{}}000000{{{f{E`}}}E`}{{{f{Gb}}}Gb}{{{f{D`}}}D`}{{{f{El}}}El}{{{f{AKd}}}AKd}{{{f{{AEh{c}}}}}{{AEh{c}}}Id}`{{{f{J`}}}Ff}{{{f{{AMf{ANnIn}}}}}Ff}{{{f{Gb}}c{B`{d}}}{{Ah{Gb}}}{{H`{}{{Bb{Hl}}}}}}{{{f{D`}}c{B`{{f{Df}}}}}{{Ah{D`}}}{{H`{}{{Bb{Hl}}}}}}{{{f{El}}c{B`{{f{{Dl{Dj}}}}}}}{{Ah{El}}}{{H`{}{{Bb{Hl}}}}}}{{{f{Gb}}ce}{{Ah{Gb}}}{{H`{}{{Bb{Hl}}}}}{{Cd{{B`{d}}}{{Cb{{B`{d}}}}}}}}{{{f{D`}}ce}{{Ah{D`}}}{{H`{}{{Bb{Hl}}}}}{{Cd{{B`{{f{Df}}}}}{{Cb{{B`{Db}}}}}}}}{{{f{El}}ce}{{Ah{El}}}{{H`{}{{Bb{Hl}}}}}{{Cd{{B`{{f{{Dl{Dj}}}}}}}{{Cb{{B`{{Fj{Dj}}}}}}}}}}{{{f{Gb}}{f{Gb}}{B`{d}}}{{Ah{Gb}}}}{{{f{D`}}{f{Gb}}{B`{{f{Df}}}}}{{Ah{D`}}}}{{{f{El}}{f{Gb}}{B`{{f{{Dl{Dj}}}}}}}{{Ah{El}}}}{{{f{BjE`}}}b}{{{f{BjE`}}Dn}b}{{{f{BjMh}}Bh}b}{{{f{E`}}Jn}E`}{{{f{Gb}}Jn}Gb}{{{f{D`}}Jn}D`}{{{f{El}}Jn}El}{{{f{AKd}}Jn}AKd}{{{f{{AEh{c}}}}Jn}{{AEh{c}}}Id}{{{f{E`}}Jn{B`{{f{Af}}}}}E`}{{{f{Gb}}Jn{B`{d}}}Gb}{{{f{D`}}Jn{B`{{f{Df}}}}}D`}{{{f{El}}Jn{B`{{f{{Dl{Dj}}}}}}}El}{{{f{AKd}}Jn{B`{{f{{Dl{Dj}}}}}}}AKd}{{{f{{AEh{c}}}}Jn{B`{{I`{c}}}}}{{l{{I`{c}}}}}Id}{{{f{Gb}}d}Gb}{{{f{D`}}d}D`}{{{f{El}}d}{{l{Dh}}}}{{{f{AKd}}d}AKd}{{{f{Gb}}Ed}{{l{An}}}}{{{f{D`}}Ed}{{l{Dd}}}}{{{f{El}}Ed}{{l{Dh}}}}{{{f{AKd}}Ed}AKd}{{{f{AKl}}Dj}Kl}{{{f{AKn}}Dj}Kl}{{{f{Hj}}}{{AKj{Df}}}}{{{f{Hj}}{f{Dn}}}{{B`{Hj}}}}`{{{f{J`}}{f{J`}}}c{}}{{{f{{l{c}}}}{f{Af}}}{{O`{AfAKh}}}{}}000000{{{f{Gb}}}{{B`{Hl}}}}{{{f{Gb}}}Kl}{{{f{El}}}Kl}{{{f{D`}}{f{Ef}}}D`}{{{f{D`}}{f{c}}}D`{{Kf{{Dl{Hl}}}}Nb}}{{{f{El}}{f{c}}}El{{Kf{{Dl{Hl}}}}Nb}}{{{f{El}}{f{Ef}}}El}{{{f{Dn}}AMl}ADj}{{{f{Mh}}AMl}B@d}{AMnAOf}{{{f{Dn}}BhAMl}B@d}{AMn{{f{Df}}}}{{{f{D`}}Ff}{{Ah{Af}}}}{{{f{BjE`}}Dn}b}{{{f{ADj}}}{{f{ADj}}}}{{{f{E`}}}{{Ah{Nj}}}}{fc{}}00000000000000000000000000000{{{f{Dn}}}Dn}{{{f{ADj}}}BAf}{{{f{J`}}Ff}{{Ah{{AKj{J`}}}}}}{{{f{{AMf{ANnIn}}}}Ff}{{Ah{{AKj{{AMf{ANnIn}}}}}}}}{fDb}00{{{f{El}}}D`}{{{f{Hj}}{f{Hj}}}d}{{{f{E`}}c}{{Ah{E`}}}{{Cj{Ch}{{Cb{{Ah{Af}}}}}}}}{{{f{E`}}e}{{Ah{{l{g}}}}}{}{{Cj{{B`{Ch}}}{{Cb{{Ah{{B`{c}}}}}}}}Cf}C`}{g{{O`{AL`e}}}{}{}{{H`{}{{Bb{{O`{ce}}}}}}}}0{{ADjg}{{O`{ALbe}}}{}{}{{H`{}{{Bb{{O`{ce}}}}}}}}0{AOh{{O`{eg}}}{}{{AL`{c}}AJ`}{}}0{{AOhADj}{{O`{eg}}}{}{{ALb{c}}AJ`}{}}0{{{f{Hj}}}{{Ah{c}}}Kj}{c{{O`{e}}}{}{}}0000000000000000000000000000000000{{}{{O`{c}}}{}}0000000000000000000000000000000000{{{f{Hj}}{f{Dn}}}{{Ah{Hj}}}}{{{f{Dn}}AMl}{{Ah{ADj}}}}{f{{O`{FlBAh}}}}00{{{f{E`}}{f{{l{c}}}}e}{{Ah{E`}}}C`{{Cj{{B`{Ch}}B`}{{Cb{{Ah{{B`{Af}}}}}}}}}}{fOb}0000000000000000000000000000000000{{{f{ADj}}}ADj}{{{f{Gb}}}{{Ah{Gb}}}}{{{f{D`}}}{{Ah{D`}}}}{{{f{El}}}{{Ah{El}}}}{{{f{{AEh{c}}}}}{{Ah{{l{{I`{c}}}}}}}Id}{{{f{{AJ`{}{{ALf{c}}{ALh{e}}{ALj{g}}}}}}Ff}cA@l{ALl{ALn{c}}}{{G`{}{{Bb{c}}}}HhJbJd}}0{{{f{Dn}}Hj}d}{{{f{{AJ`{}{{ALf{c}}{ALh{e}}{ALj{g}}}}}}}gA@l{ALl{ALn{c}}}{{G`{}{{Bb{c}}}}HhJbJd}}{{{f{AKl}}Dj}Kl}{{{f{AKn}}Dj}Kl}{{{f{Gb}}Nf{f{Bj{Fj{Ih}}}}}{{Ah{b}}}}{{{f{BAj}}Nf{f{Bj{Fj{Ih}}}}}{{Ah{b}}}}{{{f{BAl}}Nf{f{Bj{Fj{Ih}}}}}{{Ah{b}}}}{{{f{AOl}}Nf{f{Bj{Fj{Ih}}}}}{{Ah{b}}}}{{{f{BAn}}Nf{f{Bj{Fj{Ih}}}}}{{Ah{b}}}}{{{f{BB`}}Nf{f{Bj{Fj{Ih}}}}}{{Ah{b}}}}{{{f{BBb}}Nf{f{Bj{Fj{Ih}}}}}{{Ah{b}}}}{{{f{BBd}}Nf{f{Bj{Fj{Ih}}}}}{{Ah{b}}}}{{{f{BBf}}Nf{f{Bj{Fj{Ih}}}}}{{Ah{b}}}}{{{f{BA`}}Nf{f{Bj{Fj{Ih}}}}}{{Ah{b}}}}{{{f{AKl}}Nf{f{Bj{Fj{Ih}}}}}{{Ah{b}}}}{{{f{AKn}}Nf{f{Bj{Fj{Ih}}}}}{{Ah{b}}}}{{{f{D`}}Nf{f{Bj{Fj{Ih}}}}}{{Ah{b}}}}{{{f{El}}Nf{f{Bj{Fj{Ih}}}}}{{Ah{b}}}}{{{f{AKd}}Nf{f{Bj{Fj{Ih}}}}}{{Ah{b}}}}{{{f{{AEh{c}}}}Nf{f{Bj{Fj{Ih}}}}}{{Ah{b}}}Id}{{{f{Gb}}Nf{f{Bj{Dl{Ih}}}}}{{Ah{b}}}}{{{f{BAj}}Nf{f{Bj{Dl{Ih}}}}}{{Ah{b}}}}{{{f{BAl}}Nf{f{Bj{Dl{Ih}}}}}{{Ah{b}}}}{{{f{AOl}}Nf{f{Bj{Dl{Ih}}}}}{{Ah{b}}}}{{{f{BAn}}Nf{f{Bj{Dl{Ih}}}}}{{Ah{b}}}}{{{f{BB`}}Nf{f{Bj{Dl{Ih}}}}}{{Ah{b}}}}{{{f{BBb}}Nf{f{Bj{Dl{Ih}}}}}{{Ah{b}}}}{{{f{BBd}}Nf{f{Bj{Dl{Ih}}}}}{{Ah{b}}}}{{{f{BBf}}Nf{f{Bj{Dl{Ih}}}}}{{Ah{b}}}}{{{f{BA`}}Nf{f{Bj{Dl{Ih}}}}}{{Ah{b}}}}{{{f{AKl}}Nf{f{Bj{Dl{Ih}}}}}{{Ah{b}}}}{{{f{AKn}}Nf{f{Bj{Dl{Ih}}}}}{{Ah{b}}}}{{{f{D`}}Nf{f{Bj{Dl{Ih}}}}}{{Ah{b}}}}{{{f{El}}Nf{f{Bj{Dl{Ih}}}}}{{Ah{b}}}}{{{f{AKd}}Nf{f{Bj{Dl{Ih}}}}}{{Ah{b}}}}{{{f{{AEh{c}}}}Nf{f{Bj{Dl{Ih}}}}}{{Ah{b}}}Id}{{}c{}}0000000000000000000000000000000000{Ffc{}}0{Ff{{BBh{ce}}}{}{}}{{{f{{Dl{Od}}}}e}c{}{{Of{{f{Ef}}}{{Cb{c}}}}}}{{{AJ`{}{{ALf{c}}{ALh{e}}{ALj{g}}}}{B`{Hb}}}{{AJ`{}{{ALf{c}}{ALh{e}}{ALj{g}}}}}A@l{ALl{ALn{c}}}{{G`{}{{Bb{c}}}}HhJbJd}}{{{f{Dn}}}Hj}{{{f{E`}}{f{{l{c}}}}e}E`C`{{Cj{{B`{Ch}}B`}{{Cb{{B`{Af}}}}}}}}```````````{{fh}b}{{{f{AM`}}}d}{{AM`d}AM`}{{{f{BjBBj}}{B`{{f{Df}}}}}b}{{{f{BjAM`}}{f{AM`}}}{{Ah{b}}}}{{{f{BjBBj}}}b}{{{f{BjBBj}}{f{Df}}}b}{{{f{AM`}}Ed}Ef}{f{{f{c}}}{}}000{{{f{Bj}}}{{f{Bjc}}}{}}000{{{f{AM`}}{f{AM`}}c}{{Ah{AM`}}}AMb}{{{f{AM`}}{f{Dn}}F`}{{Ah{Af}}}}{{{f{AM`}}}AM`}{{f{f{Bjc}}}b{}}{fb}{{}BBl}{Ff{{f{c}}}{}}000{Ff{{f{Bjc}}}{}}000{{BBjc}AM`{{H`{}{{Bb{{B`{{f{Df}}}}}}}}}}{Ffb}000{{{f{AM`}}}{{f{Dn}}}}{{{f{AM`}}{f{AM`}}}c{}}{{{f{AM`}}{f{Df}}}c{}}{{{f{AM`}}{f{D`}}}c{}}210{{AMb{f{AOl}}{f{AOl}}}{{Ah{AOl}}}}{BBjAM`}{BBl{{Lb{BBn}}}}{cc{}}000{{AOl{Lb{BBn}}dBC`}AM`}{{AOlBC`}AM`}{{{f{D`}}{f{AOj}}BC`}{{Ah{AM`}}}}{{BhdFfBC`}AM`}{{{f{AM`}}Ff}{{Ah{Hj}}}}{{{f{AM`}}Ff}Hj}{{{f{AM`}}}{{f{{Lb{BBn}}}}}}=;<<=;{{}Ff}000{{}c{}}000{{}Eh}1{AM`Af}{{{f{AM`}}}d}0{{{f{AM`}}}BCb}{{{f{AM`}}}Ff}{{{f{AM`}}{f{AM`}}}c{}}{{{f{AM`}}{f{Df}}}c{}}{{{f{AM`}}{f{D`}}}c{}}201{{{f{AM`}}{f{AM`}}}{{Ah{{Hd{AM`AM`}}}}}}{{E`E`}{{Ah{{Hd{E`E`}}}}}}{{{f{AM`}}}Kl}{{{f{BjBBl}}{f{{Lb{BBn}}}}}{{Ah{b}}}}1{{{f{AM`}}}{{Ah{Ff}}}}{{{f{AM`}}}{{f{Bh}}}}{{BhFfBC`}BBj}{{{Lb{BBn}}}BBl}{{{f{BjBCb}}}{{B`{c}}}{}};:9:9;<{{{f{AM`}}}{{f{AOl}}}}{{{f{BjBBj}}{f{Df}}}{{Hd{Lld}}}}`{{{f{BCb}}}{{Hd{Ff{B`{Ff}}}}}}{{{f{AM`}}d}AM`}{{{f{AM`}}Ed}AM`}`{{{f{AM`}}AMld}Fh}{{{f{AM`}}{f{AOj}}BCd}AM`}{{{f{AM`}}}{{Ah{AM`}}}}{{{f{AM`}}}AM`}{fc{}}{c{{O`{e}}}{}{}}000{{}{{O`{c}}}{}}000{fOb}0005{{{f{AM`}}}d}{{{f{AM`}}}{{Ah{BCf}}}}{{}c{}}000``````{{fh}b}0{f{{f{c}}}{}}0{{{f{Bj}}}{{f{Bjc}}}{}}0{AOjBBn}{{{f{BC`}}}BC`}{{{f{BBn}}}BBn}{{f{f{Bjc}}}b{}}0{fb}0{{}BC`}{{}BBn}{Ff{{f{c}}}{}}0{Ff{{f{Bjc}}}{}}0{Ffb}0{{{f{BC`}}{f{BC`}}}d}{{{f{BBn}}{f{Df}}}{{B`{Ll}}}}{{{f{BC`}}{f{BjGh}}}Gj}{{{f{BBn}}{f{BjGh}}}Gj}{cc{}}0{{{f{BBn}}Ll}{{f{Df}}}}{{{f{BBn}}}{{f{AOj}}}}{{{f{BBn}}Ll}{{B`{{f{Df}}}}}}{{}Ff}0{{}c{}}0{{{f{BBn}}}d}0{{{f{BBn}}}Ff}{{{f{BBn}}{f{BBn}}}d}{fc{}}0{c{{O`{e}}}{}{}}0{{}{{O`{c}}}{}}0{fOb}077`{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}{{}BCh}{Ff{{f{c}}}{}}{Ff{{f{Bjc}}}{}}{{}b}{{{f{BjBCh}}}b}{Ffb}2{cc{}}6{{}Ff}{{}c{}}=<;{{}d}1```````660````````````````````````{{{f{BCj}}}{{f{Df}}}}<<;;`99{{{f{BCj}}}f}9966`{{{f{BCl}}{f{BjGh}}}{{O`{bAOn}}}}{{{f{BCj}}{f{BjGh}}}{{O`{bAOn}}}}07{cBCj{{B@b{{AKj{Df}}}}}}8{{}{{Kb{{f{Df}}BCl}{{Cb{b}}}}}}8877{cAKhAJd}{{{f{Df}}}BCj}````{{{Kb{{f{Df}}BCl}{{Cb{b}}}}}b}{cAKhBCn}{fDb}{c{{O`{e}}}{}{}}0{{}{{O`{c}}}{}}0{f{{O`{FlBAh}}}}{fOb}0{{}c{}}0`````````````````{{fh}b}{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}{{{f{BD`}}}BD`}{{f{f{Bjc}}}b{}}{fb}{Ff{{f{c}}}{}}{Ff{{f{Bjc}}}{}}{Ffb}{{{f{BjGh}}MdFf}Gj}{cc{}}{{}BDb}{{}BD`}{{}{{B`{Ff}}}}{{}Db}{{}d}{{}Ff}{{}c{}}{{{B`{BDb}}}b}{BD`b}{{{B`{Ff}}}b}2{{{B`{d}}}b}{fc{}}{c{{O`{e}}}{}{}}{{}{{O`{c}}}{}}{fOb}8```````````{{fh}b}00{{{f{BjBCf}}{Fj{Eh}}{f{BDd}}}{{Ah{b}}}}{{{f{BjBCf}}{Fj{Af}}{f{BDd}}}{{Ah{b}}}}{{{f{BCf}}{f{Cd}}}{{Fj{Eh}}}}0{{{f{BCf}}{f{Gb}}}{{Ah{BCf}}}}{{{f{BCf}}{f{{Dl{Bh}}}}}{{Ah{BCf}}}}0{{{f{BCf}}{f{{Dl{Bh}}}}{f{BDd}}d}{{Ah{BCf}}}}{{{f{BCf}}JnFf}BCf}{{{f{BCf}}{f{Af}}}c{}}{{BCf{f{Af}}}c{}}{{{f{BCf}}{f{BCf}}}c{}}{{{f{BjBCf}}}{{f{BjBCf}}}}{{{f{BjBCf}}{f{Df}}e}{{Ah{{f{BjBCf}}}}}BDf{{Of{{f{Eh}}}{{Cb{c}}}}}}{{{f{BjBCf}}Ffe}{{Ah{{f{BjBCf}}}}}BDf{{Of{{f{Eh}}}{{Cb{c}}}}}}22{f{{f{c}}}{}}0000{{{f{Bj}}}{{f{Bjc}}}{}}0000{{{f{BCf}}}{{`{{Bf{}{{Bb{Ff}}}}}}}}{{{f{BCf}}}BCf}{{{f{BDh}}}BDh}{{{f{BDj}}}BDj}2{{f{f{Bjc}}}b{}}00{fb}00`{{{f{BCf}}{f{Df}}}{{Ah{{f{Eh}}}}}}{{{f{BCf}}e}{{Ah{{Fj{{f{Eh}}}}}}}{{Kf{Df}}}{{H`{}{{Bb{c}}}}}}{{}BDj}{{}BCf}{Ff{{f{c}}}{}}0000{Ff{{f{Bjc}}}{}}0000{{{f{BCf}}{f{Af}}}c{}}{{BCf{f{Af}}}c{}}{{{f{BCf}}{f{BCf}}}c{}}{Ffb}0000{{{f{BCf}}{f{Df}}}{{Ah{BCf}}}}{{{f{BjBCf}}{f{Df}}}{{Ah{Eh}}}}{{{f{BCf}}e}BCf{{B@b{Bh}}}{{H`{}{{Bb{c}}}}}}{{{f{BCf}}{f{{BDl{Bh}}}}}BCf}{{{f{BCf}}{B`{{f{{Dl{c}}}}}}}{{Ah{BCf}}}{}}{{{f{BCf}}}{{Fj{Dn}}}}<{{{f{BDn}}}BCf}{{{f{BDd}}}BCf}{{{f{BDj}}{f{BDj}}}d}{{{f{BCf}}{f{BCf}}}d}00{{f{f{c}}}d{}}00{{{f{BCf}}}Ff}`{{{f{BCf}}e}{{Ah{BCf}}}{{B@b{Bh}}}{{H`{}{{Bb{c}}}}}}{{{f{BCf}}{Fj{Eh}}}{{Ah{BCf}}}}{{{f{BjBCf}}{f{BCf}}}{{Ah{b}}}}{{{f{BCf}}}{{Fj{Mh}}}}{{{f{BCf}}AG`}{{Ah{BCf}}}}{{{f{BCf}}{f{Gb}}}{{Ah{BCf}}}}{{{f{BDh}}{f{BjGh}}}Gj}{{{f{BDj}}{f{BjGh}}}Gj}{{{f{BCf}}{f{BjGh}}}Gj}0{cc{}}0000{cBCf{{H`{}{{Bb{Af}}}}}}{cBCf{{H`{}{{Bb{Eh}}}}}}{{{f{{Dl{BE`}}}}}{{Ah{BCf}}}}{{{f{{Dl{BE`}}}}{f{BDd}}}{{Ah{BCf}}}}{{c{f{BDd}}}{{Ah{BCf}}}{{Bf{}{{Bb{{f{BE`}}}}}}}}{{{f{BCf}}Ff}{{B`{{Fj{Hj}}}}}}{{{f{BCf}}{f{Df}}}{{B`{Ff}}}}{{{f{BCf}}}{{Fj{{f{Bh}}}}}}{{{f{BCf}}}{{Fj{Bh}}}}{{{f{BCf}}}{{Fj{{f{Df}}}}}}{{{f{BCf}}}{{f{{Dl{Eh}}}}}}{{{f{BjBCf}}}{{f{Bj{Fj{Eh}}}}}}{{{f{BCf}}Ff}{{Ah{BE`}}}}{{{f{BCf}}Ff{f{BjBE`}}}{{Ah{b}}}}{{{f{BCf}}Ff{f{BjBE`}}}b}{{{f{BCf}}}{{B`{{Ah{Dn}}}}}}`{{{f{BCf}}e}{{Ah{BEb}}}{{B@b{Bh}}}{{H`{}{{Bb{c}}}}}}0{{{f{BCf}}{Fj{Eh}}dd}{{Ah{BEb}}}}{{{f{BDj}}{f{Bjc}}}bABf}{{{f{BjBCf}}{B`{Nf}}}{{Ah{BAn}}}}{{{f{BCf}}{B`{Ff}}}BCf}{{{f{BCf}}}Ff}{{{f{BCf}}{f{{Dl{Eh}}}}}{{Ah{BCf}}}}{{{f{BjBCf}}{f{{Dl{Eh}}}}}{{Ah{{f{BjBCf}}}}}}{{{f{BjBCf}}{f{{Dl{Eh}}}}}{{f{BjBCf}}}}{{{f{BCf}}{f{Df}}}{{f{c}}}{}}{{{f{BCf}}{Mf{Ff}}}{{f{c}}}{}}{{{f{BCf}}BEd}{{f{c}}}{}}{{{f{BCf}}Ff}{{f{c}}}{}}{{{f{BCf}}{BEf{Ff}}}{{f{c}}}{}}{{{f{BCf}}{BEh{Ff}}}{{f{c}}}{}}{{{f{BCf}}{BEj{Ff}}}{{f{c}}}{}}{{{f{BCf}}{BEl{Ff}}}{{f{c}}}{}}{{}Ff}0000{{{f{BjBCf}}Ffc}{{Ah{{f{BjBCf}}}}}BDf}{{}c{}}000000{{{f{BCf}}}{{Ah{Gb}}}}{{{f{BCf}}}d}1{{{f{BCf}}}{{`{{Jf{}{{Bb{{f{Af}}}}}}}}}}{{{f{BCf}}}{{`{{Bf{}{{Bb{BCf}}}}}}}}{{{f{BCf}}AMld}BEn}{{{f{BCf}}}BF`}{{{f{BCf}}}Ff}4{{{f{BCf}}}{{Ah{{B`{Af}}}}}}{{{f{BCf}}BDh}{{Ah{{B`{Af}}}}}}1{{{f{BCf}}{f{Af}}}c{}}{{BCf{f{Af}}}c{}}{{{f{BCf}}{f{BCf}}}c{}}55{{{Fj{Eh}}}{{Ah{BCf}}}}{{{Fj{Eh}}}BCf}111{{{f{BjBEn}}}{{B`{c}}}{}}{{{f{BjBF`}}}{{B`{c}}}{}}{{{f{BCf}}}BCf}{{{f{BCf}}}{{`{{Mj{}{{Bb{{f{Af}}}}}}}}}}{{{f{BCf}}ed}{{Ah{{Fj{BCf}}}}}{{B@b{Bh}}}{{H`{}{{Bb{c}}}}}}0{{BCfe}{{Ah{c}}}{}{{Cd{BCf}{{Cb{{Ah{c}}}}}}}}{{{f{BjBCf}}e}{{Ah{c}}}{}{{Cd{{f{BjBCf}}}{{Cb{{Ah{c}}}}}}}}{{BCfgc}{{Ah{e}}}{}{}{{Cd{BCfc}{{Cb{{Ah{e}}}}}}}}{{{f{BjBCf}}}{{B`{Eh}}}}{{{f{BCf}}{f{BCf}}}d}<=>{{{f{BjBCf}}{f{Df}}Bh}{{Ah{{f{BjBCf}}}}}}{{{f{BjBCf}}{f{Df}}c}{{Ah{{f{BjBCf}}}}}BFb}{{{f{BjBCf}}Ffc}{{Ah{{f{BjBCf}}}}}BDf}{{{f{BjBCf}}Bhc}{{Ah{{f{BjBCf}}}}}BFb};`{{{f{BCf}}{f{Af}}dd{B`{Ih}}}{{Ah{BCf}}}}0{{{f{BCf}}Ffdd{B`{Ih}}}{{Ah{BCf}}}}{{{f{BCf}}}BDd}{{{f{BCf}}{f{BCf}}}{{Ah{b}}}}{{{f{BCf}}e}{{Ah{BCf}}}{{B@b{Bh}}}{{H`{}{{Bb{c}}}}}}{{{f{BCf}}Ff}{{B`{{f{Eh}}}}}}{{{f{BCf}}c}{{Ah{BCf}}}{{BFd{Ff}}}}{{{f{BCf}}c}{{Ah{{Fj{Eh}}}}}{{BFf{Bh}}}}3{{{f{BCf}}e{f{BFh}}}{{Ah{BCf}}}{{B@b{Bh}}}{{H`{}{{Bb{c}}}}}}{{{f{BCf}}e{f{BDd}}}{{Ah{BCf}}}{{B@b{Bh}}}{{H`{}{{Bb{c}}}}}}{{{f{BjBCf}}e}{{Ah{b}}}{{B@b{Bh}}}{{H`{}{{Bb{c}}}}}}{{{f{BCf}}}{{Hd{FfFf}}}}{{{f{BCf}}Jn}BCf}{{{f{BCf}}}d}{{{f{BjBCf}}}b}{{{f{BEn}}}{{Hd{Ff{B`{Ff}}}}}}{{{f{BF`}}}{{Hd{Ff{B`{Ff}}}}}}{{{f{BCf}}JnFf}BCf}00{{{f{BCf}}cEj}{{Ah{BCf}}}{{BFf{Bh}}}}{{{f{BjBCf}}cEj}{{Ah{{f{BjBCf}}}}}{{BFf{Bh}}}}{{{f{BCf}}Jn}{{Hd{BCfBCf}}}}0{{{f{BjBCf}}}{{`{{Bf{}{{Bb{BCf}}}}}}}}{{BCfFfd}{{Fj{BCf}}}}{{{f{BCf}}{f{BCf}}}c{}}{{{f{BCf}}{f{Af}}}c{}}{{BCf{f{Af}}}c{}}{{{f{BCf}}BDh}{{Ah{{B`{Af}}}}}}{{{f{BCf}}{B`{Ff}}}BCf}{{{f{BCf}}{f{Ef}}}{{Ah{BCf}}}}{BCf{{Fj{Eh}}}}{{{f{BCf}}{f{Ef}}}BCf}{{{f{BCf}}{f{Ef}}d}BCf}{{{f{BCf}}BFj}{{Ah{Nj}}}}{fc{}}00{fDb}{{{f{BjBCf}}{B`{{f{Df}}}}{B`{{Nn{Db{Fj{Db}}}}}}}{{Ah{BCf}}}}{{{f{BjBCf}}{B`{{f{Df}}}}{B`{{Nn{Bh{Fj{Bh}}}}}}}{{Ah{BCf}}}}{{{f{BjBCf}}{f{Df}}e}{{Ah{{f{BjBCf}}}}}BDf{{Of{{f{Af}}}{{Cb{{Ah{c}}}}}}}}{{{f{BjBCf}}Ffe}{{Ah{{f{BjBCf}}}}}BDf{{Of{{f{Eh}}}{{Cb{{Ah{c}}}}}}}}{c{{O`{e}}}{}{}}0000{BFl{{Ah{BCf}}}}{{{Hd{BFn{f{BDn}}}}}{{Ah{BCf}}}}{{c{f{BDd}}}{{Ah{BCf}}}{{Bf{}{{Bb{{Ah{{f{BE`}}}}}}}}}}{{{f{BCf}}{f{Df}}}{{Ah{Ff}}}}{{}{{O`{c}}}{}}0000{f{{O`{FlBAh}}}}{fOb}0000{{{f{BCf}}{B`{{f{{Dl{Db}}}}}}BDj{B`{{Hd{JnFf}}}}}{{Ah{BCf}}}}{{{f{BCf}}d{B`{{Fj{Bh}}}}BDj{B`{{Hd{JnFf}}}}}{{Ah{BCf}}}}1{{{f{BCf}}{f{BCf}}}{{Ah{BCf}}}}{{{f{BjBCf}}{f{BCf}}}{{Ah{{f{BjBCf}}}}}}{{{f{BjBCf}}{f{BCf}}}b}{{}c{}}0000{{{f{BCf}}}Ff}{{{f{BjBCf}}c}{{Ah{{f{BjBCf}}}}}BDf}{{{f{BjBCf}}c{f{BDd}}}{{Ah{{f{BjBCf}}}}}BDf}{{{f{BjBCf}}Af}{{f{BjBCf}}}}{{{f{BCf}}Bh{B`{Hl}}}{{Ah{BCf}}}}{{{f{BjBCf}}Bh{B`{Hl}}}{{f{BjBCf}}}}`````{{fh}b}0{{{f{Eh}}c}e{AbKj}{}}{{EhEh}c{}}{{Ehc}e{AbKj}{}}{{{f{Eh}}{f{Eh}}}c{}}{{{f{Eh}}{f{Al}}}Eh}0000000{{{f{Eh}}{f{Al}}nMn}Eh}1{{{f{Eh}}{f{Al}}Dj}Eh}{{{f{BjEh}}{f{Eh}}}{{Ah{{f{BjEh}}}}}}{{{f{Eh}}Ed}Ef}{{{f{Eh}}}{{f{Af}}}}{{{f{BG`}}}{{f{Af}}}}{{{f{Eh}}}{{B`{{f{BG`}}}}}}{{{f{Eh}}}{{B`{{f{Af}}}}}}{{{f{BG`}}}Af}{{{f{Eh}}}{{Ah{{f{El}}}}}}{{{f{Eh}}}{{Ah{{f{AKd}}}}}}{{{f{Eh}}}{{B`{BGb}}}}{{{f{Eh}}{f{Eh}}}{{Ah{Eh}}}}{{EhEh}c{}}?0??0{{{f{Eh}}}{{Ah{{f{Gb}}}}}}{f{{f{c}}}{}}0{{{f{Bj}}}{{f{Bjc}}}{}}0{{{f{Eh}}{f{Dn}}}{{Ah{Eh}}}}{{{f{BG`}}{f{Dn}}}{{Ah{BG`}}}}10{{{f{Eh}}{f{Dn}}F`}{{Ah{Eh}}}}{{{f{BG`}}{f{Dn}}F`}{{Ah{BG`}}}}{{{f{Eh}}}{{Ah{{f{AM`}}}}}}{{{f{Eh}}}Eh}0{{{f{BG`}}}BG`}{{f{f{Bjc}}}b{}}0{fb}0{{{f{Eh}}}{{Ah{{f{J`}}}}}}{{}Eh}{Ff{{f{c}}}{}}0{Ff{{f{Bjc}}}{}}0{{EhEh}c{}}{{Ehc}e{AbKj}{}}{{{f{Eh}}c}e{AbKj}{}}{{{f{Eh}}{f{Eh}}}c{}}{{{f{Eh}}{f{Eh}}}{{Ah{Eh}}}}{Ffb}0={{{f{Eh}}}{{f{Dn}}}}{{{f{BG`}}}{{f{Dn}}}}{{{f{Eh}}{f{Eh}}}d}{{{f{Eh}}{f{Eh}}}{{Ah{Gb}}}}011{{{f{Eh}}}{{Ah{Eh}}}}{{{f{BjEh}}{f{Eh}}}{{Ah{{f{BjEh}}}}}}{{{f{Eh}}HjFf}{{Ah{Eh}}}}{{{f{Eh}}}{{Ah{{f{AKl}}}}}}{{{f{Eh}}}{{Ah{{f{AKn}}}}}}{{{f{Eh}}}{{AKj{Mh}}}}{{{f{Eh}}AG`}{{Ah{Eh}}}}{{{f{Eh}}{f{{l{An}}}}}{{Ah{Eh}}}}{{{f{Eh}}{f{BjGh}}}Gj}{{{f{BG`}}{f{BjGh}}}Gj}{AfEh}{cc{}}{BG`Eh}1{{AfFf}{{Ah{BG`}}}}{{BhFf{f{Dn}}}Eh}{{{f{Eh}}FfFf}Eh}{{{f{Eh}}Ff}{{Ah{Hj}}}}{{{f{Eh}}}Ff}{{{f{Eh}}}Hn}{{{f{Eh}}Ff}{{B`{{f{Ib}}}}}}{{{f{Eh}}Ff}Hj}{{{f{Eh}}{f{Eh}}}{{Ah{Gb}}}}0{{{f{Eh}}}d}{{{f{BG`}}}d}{{{f{Eh}}{B`{Ff}}}Eh}{{{f{Eh}}}{{Ah{{f{BBb}}}}}}{{{f{Eh}}}{{Ah{{f{BBd}}}}}}{{{f{Eh}}}{{Ah{{f{BBf}}}}}}{{{f{Eh}}}{{Ah{{f{BB`}}}}}}{{{f{Eh}}}{{Ah{{f{Ef}}}}}}{{}Ff}0{{}c{}}0{BDfEh}{EhEh}{BG`Eh}{EhBCf}{{{f{BjEh}}}{{f{BjAf}}}}>={{{f{Eh}}}{{Ah{Gb}}}}000{{{f{Eh}}}Gb}0{{{f{Eh}}}Jj}{{{f{Eh}}}Ff}{{{f{BG`}}}Ff}{{{f{Eh}}}{{Ah{{f{E`}}}}}}{{{f{Eh}}{f{Eh}}}{{Ah{Gb}}}}0{{{f{Eh}}}{{Ah{Kl}}}}0{{Ehc}e{AbKj}{}}{{{f{Eh}}{f{Eh}}}c{}}{{{f{Eh}}c}e{AbKj}{}}{{EhEh}c{}}{{{f{Eh}}}{{f{Bh}}}}{{{f{BG`}}}{{f{Bh}}}}{{Bhc}Eh{}}{{BhKlFf}BG`}{{Bh{f{Dn}}}Eh}{{BhDn}BG`}{{{f{Eh}}FfFf}Eh}{{BhKlFf}Eh}=={{{f{Eh}}}Ff}{{{f{Eh}}}BGd}>{{{f{Eh}}}Eh}<=;>{{{f{BjEh}}Bh}b}{{{f{Eh}}{f{{Dl{Jn}}}}}{{Ah{Eh}}}}{{{f{BG`}}Ff}BG`}3{{{f{Eh}}ndd{B`{Ih}}}{{Ah{Eh}}}}{{{f{Eh}}Ffdd{B`{Ih}}}{{Ah{Eh}}}}{{{f{BjEh}}Jj}b}{{{f{Eh}}Jn}Eh}{{{f{BjEh}}}b}{{{f{Eh}}{B`{Ih}}}Eh}{{{f{Eh}}JnFf}Eh}{{{f{Eh}}Ed}{{Ah{Eh}}}}{{{f{Eh}}Jn}{{Hd{EhEh}}}}{{{f{Eh}}}{{Ah{{f{D`}}}}}}{{{f{Eh}}{f{Dn}}}{{Ah{Eh}}}}{{{f{BG`}}{f{Dn}}}{{Ah{BG`}}}}{{{f{Eh}}{f{Eh}}}c{}}{{EhEh}c{}}{{{f{Eh}}c}e{AbKj}{}}{{Ehc}e{AbKj}{}}{{{f{Eh}}{B`{Ff}}}Eh}{{{f{Eh}}{f{Ef}}}{{Ah{Eh}}}}{EhAf}{BG`Af}{{{f{Eh}}{f{{Dl{Hl}}}}}{{Ah{Eh}}}}{{{f{Eh}}{f{{Dl{Hl}}}}}Eh}{{{f{Eh}}{f{Ef}}}Eh}{fc{}}0{{{f{Eh}}}Eh}{{{f{BG`}}}Af}{c{{O`{e}}}{}{}}0{{}{{O`{c}}}{}}0{fOb}0{{{f{Eh}}}{{Ah{{f{BAl}}}}}}{{{f{Eh}}}{{Ah{{f{AOl}}}}}}{{{f{Eh}}}{{Ah{{f{BAn}}}}}}{{{f{Eh}}}{{Ah{{f{BAj}}}}}}{{{f{Eh}}}{{Ah{Eh}}}}0{{{f{Eh}}Nf{f{Bj{Fj{Ih}}}}}{{Ah{b}}}}{{{f{Eh}}Nf{f{Bj{Dl{Ih}}}}}{{Ah{b}}}}{{}c{}}0{{EhBh}Eh}{{{f{Eh}}c}Eh{AbKj}}{{{f{Eh}}{f{Gb}}{f{Eh}}}{{Ah{Eh}}}}{{{f{Eh}}{f{{l{An}}}}{f{Eh}}}{{Ah{Eh}}}}`{{fh}b}{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}{{{f{BGf}}}BGf}{{f{f{Bjc}}}b{}}{fb}{{}BGf}{Ff{{f{c}}}{}}{Ff{{f{Bjc}}}{}}{Ffb}{{{f{BGf}}{f{BGf}}}d}{{f{f{c}}}d{}}00{{{f{BGf}}{f{BjGh}}}Gj}{cc{}}{{{f{BGf}}{f{Bjc}}}bABf}`{{}Ff}{{}c{}}`{fc{}}{c{{O`{e}}}{}{}}{{}{{O`{c}}}{}}{fOb}``4````````````````````````````````{{fh}b}000{{{f{BEb}}}{{Ah{BCf}}}}`{{{f{BGh}}}{{f{{Dl{BGj}}}}}}{{{f{BEb}}c}{{Ah{BCf}}}{{Cj{BCf}{{Cb{{Ah{BCf}}}}}}JbJd}}{{{f{Al}}}E`}{f{{f{c}}}{}}0000000{{{f{Bj}}}{{f{Bjc}}}{}}0000000{{{f{BGh}}}BGh}{{{f{Al}}}Al}{{{f{BEb}}}BEb}{{{f{BGl}}}BGl}{{f{f{Bjc}}}b{}}000{fb}000;{{}BGh}{{}Al}{Ff{{f{c}}}{}}00{{{f{BGn}}}{{f{c}}}{}}11111{Ff{{f{Bjc}}}{}}0000000`{{BH`e}{}{}{{BHb{c}}}}{Ffb}000{{{f{BjBGh}}}b}1111{{{f{BGh}}{f{BGh}}}d}{{{f{Al}}{f{Al}}}d}{{f{f{c}}}d{}}00000`{{{f{BHd}}}Hl}{{{f{BGh}}}{{f{{Dl{Hl}}}}}}{{{f{BEb}}}{{Ah{BCf}}}}{{{f{BjBGh}}}{{f{Bj{Fj{Hl}}}}}}{{{f{BGh}}{f{BjGh}}}Gj}{{{f{Al}}{f{BjGh}}}Gj}{{{f{BEb}}{f{BjGh}}}Gj}{{{f{BGl}}{f{BjGh}}}Gj}0{{{f{Df}}BGl}Bh}{cc{}}000{{{Fj{BHf}}}BGh}1{{{Fj{{Fj{BHf}}}}}BGh}{{{Fj{{Hd{{Fj{Hl}}{Fj{BGj}}}}}}}BGh}{BGhAl}444{cBGh{{H`{}{{Bb{BHf}}}}}}{cBGh{{Hf{}{{Bb{BHf}}}}}}{{{f{Al}}Ff}BHd}{{{f{BEb}}}{{f{Al}}}}{{{f{BjBEb}}}{{f{BjAl}}}}{{{f{Al}}}Ef}{{{f{BHh}}dd}{{Ah{Al}}}}0{{{f{BEb}}}{{Ah{BCf}}}}{{{f{BjAl}}}{{f{BjBGh}}}}{{}Ff}0000000{{}c{}}0000000{AlBGh}1{{{f{BGh}}}c{}}{BGhc{}}301{{{f{BHd}}}d}{{{f{Al}}}d}{{{f{BGh}}}d}{{{f{BGh}}}{{BHl{{BHj{{K`{Hl}}}}{K`{BGj}}}}}}{{{f{Al}}}BHn}{{{f{BEb}}}{{Fj{Eh}}}}{{{f{BEb}}{B`{{Hd{JnFf}}}}}{{Fj{Eh}}}}={{{f{BHd}}}Ff}{{{f{Al}}}Ff}?????{{{Fj{Hl}}{Fj{BGj}}d}BGh}{{{f{BCf}}{Fj{Eh}}Al{B`{{Fj{Bh}}}}}BEb}{{{f{BjBHn}}}{{B`{c}}}{}}{{{f{BjBHn}}Ff}{{B`{c}}}{}}{{{f{BEb}}c}{{Ah{BCf}}}{{Cd{BCf}{{Cb{{Ah{BCf}}}}}}JbJd}}{f}{{{f{Al}}}BH`}{{{f{BEb}}nMn}{{Ah{BCf}}}}{{BEbe}BEb{{B@b{Bh}}}{{H`{}{{Bb{c}}}}}}{{{f{Al}}JnFf}BGn}{{{f{BjBGh}}}b}{{{f{BjAl}}}b}{{{f{BEb}}Dj}{{Ah{BCf}}}}{{{f{BEb}}}{{Ah{BCf}}}}{Al{{Fj{Hl}}}}0{BEbAl}{{{f{BjBEb}}}Al}{fc{}}000{fDb}{c{{O`{e}}}{}{}}0000000{{}{{O`{c}}}{}}0000000{f{{O`{FlBAh}}}}{fOb}0000000{AlAl}{{{f{Al}}}{{f{BGh}}}}{{{f{Al}}}{{f{BI`}}}}={{}c{}}0000000`````{{{f{BGh}}c}Af{{Cd{{Hd{Hl{f{BGj}}}}}{{Cb{B`}}}}JbJd}}{{{f{BGh}}c}Af{{Cd{{Hd{Hl{f{BGj}}}}}{{Cb{}}}}JbJd}}{{{f{{Dl{{BIb{Hl}}}}}}c}Af{{Cd{{BIb{Hl}}}{{Cb{B`}}}}JbJd}}{{{f{{Dl{{BIb{Hl}}}}}}c}Af{{Cd{{BIb{Hl}}}{{Cb{}}}}JbJd}}{{{f{{Dl{c}}}}eBId}{{AJh{c}}}{BIfBIh}{{Bf{}{{Bb{{Hd{HlHl}}}}}}Hh}}{{{f{{Dl{c}}}}{f{Hb}}eBId}{{AJh{c}}}{BIfBIh}{{Bf{}{{Bb{{Hd{HlHl}}}}}}Hh}}{{{f{{l{c}}}}HlHl}{{l{c}}}C`}{{{f{BI`}}{f{{Dl{Fh}}}}}d}{{{f{BIj}}{f{Al}}}Af}{{BIlBIl}BIl}0`{{{f{BIn}}{f{BCf}}{f{Al}}}{{Ah{Af}}}}{{{f{BIn}}}{{Ah{{f{Bh}}}}}}```````````````````````{{fh}b}00{{{f{BjBJ`}}Hj}{{B`{b}}}}{{{f{BjBJb}}{f{Hj}}}b}0{f{{f{c}}}{}}00{{{f{Bj}}}{{f{Bjc}}}{}}00{{{f{BJ`}}}BJ`}{{{f{BJb}}}BJb}{{{f{BE`}}}BE`}{{f{f{Bjc}}}b{}}00{fb}00{{{f{{Dl{c}}}}}Dn{{B@j{Dn}}}}{{}BE`}{Ff{{f{c}}}{}}00{Ff{{f{Bjc}}}{}}00{Ffb}00{{{f{BE`}}{f{BE`}}}d}{{f{f{c}}}d{}}00{{{f{BE`}}{f{BjGh}}}Gj}{cc{}}{{{Hd{{f{Dn}}Ff}}}BJ`}1{{{Hd{{f{Dn}}Ff}}}BJb}2{{gFf}BDd{{B@b{Bh}}}{{B@b{Dn}}}{{Bf{}{{Bb{{Fj{{Hd{ce}}}}}}}}}}{{}Ff}00{{}c{}}00{BJ`Af}{BJbAf}{{{f{Dn}}Ff}BJ`}{{{f{Dn}}Ff}BJb}{{{Fj{Hj}}}BE`}{{{f{BjBJ`}}Ff}Af}{{{f{BjBJb}}Ff}Af}{{{f{{Dl{BE`}}}}{B`{Ff}}}{{Ah{BDd}}}}0{{{f{{Dl{BE`}}}}{B`{Ff}}}{{Ah{{Fj{Dn}}}}}}{fc{}}00{c{{O`{e}}}{}{}}00{{}{{O`{c}}}{}}00{fOb}00==={{{f{{Dl{BCf}}}}}{{Ah{BCf}}}}{{{f{{Dl{BCf}}}}d}{{Ah{BCf}}}}`````{{IhIh}Ih}{{{f{{Dl{BCf}}}}{B`{Nf}}}{{Ah{{Hd{{Fj{BAn}}Nf}}}}}}{{{f{{AKb{Jn}}}}Nf{f{Bj{Fj{Ih}}}}}b}{f{{f{c}}}{}}0{{{f{Bj}}}{{f{Bjc}}}{}}0{{}BJd}{Ff{{f{c}}}{}}0{Ff{{f{Bjc}}}{}}0{Ffb}0{{{f{BJd}}}Ih}{{{f{BJf}}{f{BjGh}}}Gj}{cc{}}0{{{f{BJf}}{f{Bjc}}}bABf}``{{}Ff}0{{}c{}}0{{{f{Bj{BJh{BJfce}}}}HlIh{f{BCf}}gi}b{}BJj{{Cd{}{{Cb{c}}}}}{{Cj{{f{Bjc}}}}}}{c{{O`{e}}}{}{}}0{{}{{O`{c}}}{}}0{fOb}0{{{f{BJl}}Nf{f{Bj{Fj{Ih}}}}}{{Ah{b}}}}0{{{f{BJl}}Nf{f{Bj{Dl{Ih}}}}}{{Ah{b}}}}066{{{f{BjBJd}}{f{{Dl{Dj}}}}}b}{{{f{BjBJd}}Mb}b}{{{f{BjBJd}}Jn}b}{{{f{BjBJd}}Ll}b}{{{f{BjBJd}}Ih}b}````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{fh}b}0000000000{{{f{{Lb{ce}}}}}{{f{e}}}NbBJn}{{{f{{Lb{c}}}}}BK`{BKbNb}}{{{f{{Lb{ce}}}}}{}NbBJn}{{{f{{Lb{c}}}}}MbBKd}{{{f{Bh}}}{{f{BKf}}}}{{{f{Bh}}}{{f{BKh}}}}{{{f{Bh}}}{{f{{Dl{Dj}}}}}}{{{f{Bh}}}{{f{Df}}}}{{{f{{Lb{ce}}}}}{{f{c}}}NbBJn}1{{{Lb{{BKj{c}}e}}}{{Lb{ce}}}{}BJn}{{{Lb{{Dl{{BKj{c}}}}e}}}{{Lb{{Dl{c}}e}}}{}BJn}{f{{f{c}}}{}}04000300000000{{{f{Bj}}}{{f{Bjc}}}{}}000000000000{{{f{AM`}}{f{AM`}}c}{{Ah{AM`}}}AMb}{{{f{{Lb{c}}}}}{{B`{{f{AJd}}}}}{AJdNb}}`{{{f{BKl}}{f{Af}}}{{Ah{Af}}}}{{{f{BKl}}c}{{Ah{Af}}}Ad}{{{f{Bh}}}Bh}{{{f{Od}}}Od}{{{f{BKn}}}BKn}{{{f{{Lb{ce}}}}}{{Lb{ce}}}Nb{BJnA@l}}{{{f{N`}}}N`}{{{f{BFj}}}BFj}{{{f{B@d}}}B@d}{{{f{Mn}}}Mn}{{{f{BL`}}}BL`}{{{f{BLb}}}BLb}{{{f{BLd}}}BLd}{{f{f{Bjc}}}b{}}0000000000{fb}0000000000{{{f{Bh}}{f{Bh}}}BAd}{{{f{{Lb{ce}}}}{f{{Lb{ce}}}}}BAd{BLfNb}BJn}{AOhe{}{{AL`{c}}AJ`}}0{{AOhADj}e{}{{ALb{c}}AJ`}}0{{f{f{c}}}BAd{}}0{{AKhBCj}AKh}{AKhAKh}{{{f{Gl}}{f{ADj}}}{{ABd{Gl}}}}``{{}b}{cbBJn}{{}Bh}{{}{{Lb{c}}}BLh}{{}{{Lb{Df}}}}{{}{{Lb{BLj}}}}{{}{{Lb{{Dl{c}}}}}{}}{{}N`}{{}BFj}{{}B@d}{{}Mn}`{Ff{{f{c}}}{}}0{{{f{Bh}}}f}11{{{f{{Lb{ce}}}}}{{f{c}}}NbBJn}222222222{Ff{{f{Bjc}}}{}}000000000000{{{f{{Lb{c}}}}}{{f{Df}}}{AJdNb}}`{{{Lb{ADlc}}}{{O`{{Lb{ec}}{Lb{ADlc}}}}}BJn{ADlJbJd}}{{{Lb{ADlc}}}{{Lb{ec}}}BJn{ADlJbJd}}{{{f{{Lb{ce}}}}}{{BLl{ce}}}Nb{A@lBJn}}{Ffb}000{{{f{Bj{Lb{ce}}}}}bNbBJn}111111111{{{f{B@d}}}{{f{ADj}}}}`{{{f{Bh}}{f{c}}}d{{Kf{Df}}Nb}}{{{f{Od}}{f{Od}}}d}{{{f{{Lb{ce}}}}{f{{Lb{ce}}}}}d{BLnNb}BJn}{{{f{{Lb{Gl}}}}{f{Gl}}}d}{{{f{{Lb{BM`}}}}{f{BM`}}}d}{{{f{N`}}{f{N`}}}d}{{{f{BFj}}{f{BFj}}}d}{{{f{B@d}}{f{B@d}}}d}{{{f{Mn}}{f{Mn}}}d}{{{f{BLd}}{f{BLd}}}d}{{f{f{c}}}d{}}00000000000000000000{BKn{{Hd{LlLl}}}}{{AMb{f{AOl}}{f{AOl}}}{{Ah{AOl}}}}{{{f{Bj{Lb{AD`}}}}}{{O`{bBMb}}}}{{{f{AKh}}{f{BjGh}}}{{O`{bAOn}}}}0{{{f{Bh}}{f{BjGh}}}{{O`{bAOn}}}}0{{{f{Od}}{f{BjGh}}}{{O`{bAOn}}}}{{{f{BKn}}{f{BjGh}}}{{O`{bAOn}}}}{{{f{{Lb{ce}}}}{f{BjGh}}}{{O`{bAOn}}}{BCnNb}BJn}{{{f{{Lb{ce}}}}{f{BjGh}}}{{O`{bAOn}}}NbBJn}{{{f{{Lb{ce}}}}{f{BjGh}}}{{O`{bAOn}}}{ADnNb}BJn}{{{f{N`}}{f{BjGh}}}Gj}{{{f{BFj}}{f{BjGh}}}Gj}{{{f{B@d}}{f{BjGh}}}{{O`{bAOn}}}}{{{f{Mn}}{f{BjGh}}}{{O`{bAOn}}}}{{{f{BL`}}{f{BjGh}}}{{O`{bAOn}}}}{{{f{BLb}}{f{BjGh}}}{{O`{bAOn}}}}{{{f{BLd}}{f{BjGh}}}{{O`{bAOn}}}}`{BMbAKh}{BMdAKh}{BMfAKh}{BMhAKh}{cc{}}{DbBh}{{{f{Db}}}Bh}{{{f{Df}}}Bh}3{FlBh}4{LlOd}5{BMj{{Lb{BKh}}}}{BMlc{}}{Fl{{Lb{Df}}}}{Db{{Lb{Df}}}}{{{f{Df}}}{{Lb{Df}}}}{{{f{{Dl{c}}}}}{{Lb{{Dl{c}}}}}A@l}{{{f{BKh}}}{{Lb{BKh}}}}{{{BIb{c}}}{{Lb{{Dl{c}}}}}{}}{c{{Lb{c}}}{}}{{{Lb{Df}}}{{Lb{{Dl{Dj}}}}}}{{{ABd{ce}}}{{Lb{ce}}}NbBJn}{BMn{{Lb{BLj}}}}{cc{}}{BN`{{Lb{BKf}}}}{{{Fj{ce}}}{{Lb{{Dl{c}}e}}}{}{BJnA@l}}{{{AKj{c}}}{{Lb{c}}}{BNbNb}}{{{f{BKf}}}{{Lb{BKf}}}}{{{f{BLj}}}{{Lb{BLj}}}}55555555{{c{B`{Hb}}}BNd{}}{{{BNf{Jn}}{BNf{Dj}}{B`{Hb}}}BNh}{{{BNf{Jn}}{BNf{Dj}}{B`{Hb}}}BNj}{cBh{{H`{}{{Bb{Db}}}}}}{cBh{{H`{}{{Bb{BDb}}}}}}{cBh{{H`{}{{Bb{{AKj{Df}}}}}}}}{cBh{{H`{}{{Bb{Bh}}}}}}{cBh{{H`{}{{Bb{{ABd{Df}}}}}}}}{cBh{{H`{}{{Bb{{f{Df}}}}}}}}{cBh{{H`{}{{Bb{{f{Bh}}}}}}}}{cBh{{H`{}{{Bb{{f{BDb}}}}}}}}{e{{Lb{{Dl{c}}}}}{}{{H`{}{{Bb{c}}}}}}{{gFf}{{BNl{Jn}}}Kf{{H`{}{{Bb{{B`{c}}}}}}}{{H`{}{{Bb{{B`{e}}}}}}}}0{e{{BNl{Jn}}}{{H`{}{{Bb{{B`{d}}}}}}}{{H`{}{{Bb{{B`{c}}}}}}}}{{gADj}{{BNl{Jn}}}BIh{{H`{}{{Bb{{B`{c}}}}}}}{{H`{}{{Bb{{B`{e}}}}}}}}2{e{{Lb{{Dl{c}}}}}Jb{{Hf{}{{Bb{c}}}}}}{{}{{Lb{c}}}Nb}{c{{Lb{ec}}}BJnNb}{{{f{Df}}}Bh}0{{{f{Df}}}{{O`{BNn}}}}{DbBh}{{Bhc}BO`{}}{{{f{{Lb{ce}}}}{f{{Lb{ce}}}}}d{BObNb}BJn}{{{f{Bj{Lb{ce}}}}}{{B`{{f{Bjc}}}}}NbBJn}{{{f{Bj{Lb{ce}}}}}{{f{Bjc}}}NbBJn}{{{f{Fh}}Ff}Hj}3{{{f{Bh}}{f{Bjc}}}bABf}{{{f{{Lb{ce}}}}{f{Bjg}}}b{BOdNb}BJnABf}{{{f{BFj}}{f{Bjc}}}bABf}{{{f{B@d}}{f{Bjc}}}bABf}{{{f{Mn}}{f{Bjc}}}bABf}{{{f{BLd}}{f{Bjc}}}bABf}{{{f{Od}}}Ll}{{}b}{cb{A@lBJn}}{{{f{{Dl{Ll}}}}}{{`{{Bf{}{{Bb{Ff}}}}}}}}{{}Ff}000000000000`{{{f{BjBKn}}}{{f{BjIh}}}}`{{}c{}}000000000000{{}Eh}{{{Lb{ce}}}{{B`{c}}}{}BJn}{{{Lb{ce}}}{}NbBJn}{{{Lb{ce}}}{{Hd{e}}}NbBJn}{{{Lb{BOf}}}Af}{BhDb}{{{f{BKn}}}d}{{{f{Od}}}d}`{{{f{{Lb{AD`}}}}}d}{{{f{c}}}d{}}1{{{f{BDn}}}{{`{{Jf{}{{Bb{{Hd{{f{Bh}}{f{c}}}}}}}}}}}{}}{{{f{{Lb{ce}}}}{f{{Lb{ce}}}}}d{BObNb}BJn}`0{{{f{AM`}}{f{AM`}}}{{Ah{{Hd{AM`AM`}}}}}}{{E`E`}{{Ah{{Hd{E`E`}}}}}}{{{f{Bj{Lb{ce}}}}}{{f{Bjc}}}{BOhNb}{BJnA@l}}{{{f{BOj}}}Kl}0{{{f{BOl}}}Kl}``11`{{{f{{Lb{ce}}}}{f{{Lb{ce}}}}}d{BLnNb}BJn}{{BOnFf}{{B`{Ff}}}}{{Bhc}C@`{}}{c{{Lb{c}}}{}}{{BhADjd}B@d}{e{{Lb{c}}}{}{{Of{{f{{BLl{c}}}}}{{Cb{c}}}}}}{{ce}{{Lb{ce}}}{}BJn}{{}{{Lb{{BKj{c}}}}}{}}{c{{Lb{{BKj{e}}c}}}BJn{}}{Ff{{Lb{{Dl{{BKj{c}}}}}}}{}}{{Ffc}{{Lb{{Dl{{BKj{e}}}}c}}}BJn{}}3210`{{}Od}{{}BKn}{{{f{Bh}}{f{Bh}}}{{B`{BAd}}}}{{{f{{Lb{ce}}}}{f{{Lb{ce}}}}}{{B`{BAd}}}{BObNb}BJn}{c{{C@b{{Lb{c}}}}}{}}{{ce}{{C@b{{Lb{ce}}}}}{}BJn}`````{{{f{BOj}}}Kl}0{{{f{{Lb{c}}}}{f{BjC@d}}}b{AJdNb}}{{{f{{Lb{ce}}}}{f{{Lb{ce}}}}}dNbBJn}{{{f{BOl}}nMn}{{Ah{Kl}}}}{{{f{Bj{Lb{AD`}}}}{f{Bj{Dl{Dj}}}}}{{O`{FfBMb}}}}{{{f{Bj{Lb{AD`}}}}C@f}{{O`{bBMb}}}}{{{f{Bj{Lb{AD`}}}}{f{Bj{Fj{Dj}}}}}{{O`{FfBMb}}}}{{{f{Bj{Lb{AD`}}}}{f{BjDb}}}{{O`{FfBMb}}}}{{{f{Bj{Lb{AD`}}}}{f{Bj{Dl{C@h}}}}}{{O`{FfBMb}}}}`{{{f{Bj{Lb{AD`}}}}C@j}{{O`{IhBMb}}}}`{{{f{AJl}}FfFf}AJl}0{{{f{{Lb{c}}}}}{{B`{{f{AJd}}}}}{AJdNb}}{{{f{C@l}}Dj}Kl}{{LlLl}BKn}`{{{f{{Lb{ce}}}}}FfNbBJn}>>{{{f{Od}}}{{B`{Ll}}}}{fc{}}0000000000{fDb}00{AOh{{O`{eg}}}{}{{AL`{c}}AJ`}{}}0{{AOhADj}{{O`{eg}}}{}{{ALb{c}}AJ`}{}}0{c{{O`{e}}}{}{}}0000{{{Lb{{Dl{c}}e}}}{{O`{{Lb{{BIb{c}}e}}}}}{}BJn}11111111{{}{{O`{c}}}{}}000000000000{{BOnFf}{{O`{FfAKh}}}}{c{{O`{{Lb{c}}C@n}}}{}}{{ce}{{O`{{Lb{ce}}C@n}}}{}BJn}{{}{{O`{{Lb{{BKj{c}}}}C@n}}}{}}{c{{O`{{Lb{{BKj{e}}c}}C@n}}}BJn{}}10{c{{O`{{C@b{{Lb{c}}}}C@n}}}{}}{{ce}{{O`{{C@b{{Lb{ce}}}}C@n}}}{}BJn}{f{{O`{FlBAh}}}}00{{{Lb{ce}}}{{O`{c{Lb{ce}}}}}{}BJn}{fOb}000000000000{{{Lb{ce}}}cA@lBJn}`{{{f{C@l}}Dj}Kl}{{}c{}}000000000000{{{f{{Lb{ce}}}}}FfNbBJn}``{{B@d{CA`{BhBh}}}B@d}{{{f{AKh}}c}AKh{{Of{{f{Df}}}{{Cb{Db}}}}}}{{{f{Bj{Lb{AD`}}}}{f{{Dl{Dj}}}}}{{O`{FfBMb}}}}{{{f{BjBh}}BDb}{{O`{bAOn}}}}{{{f{BjBh}}CAb}{{O`{bAOn}}}}{{{f{BjBh}}{f{Df}}}{{O`{bAOn}}}}{{{f{Bj{Lb{AD`}}}}{f{{Dl{CAd}}}}}{{O`{FfBMb}}}}```````{{c{B`{Hb}}}BNd{}}{{{BNf{Jn}}{BNf{Dj}}{B`{Hb}}}BNh}{{{BNf{Jn}}{BNf{Dj}}{B`{Hb}}}BNj}`{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}{Ff{{f{c}}}{}}{Ff{{f{Bjc}}}{}}{Ffb}{{CAf{B`{{f{ADj}}}}}{{O`{{BNl{Jn}}AKh}}}}{cc{}}{{}Ff}{{}c{}}{{{f{CAf}}}d}{FfCAf}{{{f{CAf}}}{{f{{Dl{Jn}}}}}}{{{f{BjCAf}}{f{Gl}}}b}{{{f{BjCAf}}}b}{{{f{BjCAf}}{f{{Dl{{ABd{Gl}}}}}}}b}1{{{f{BjCAf}}{B`{{f{Gl}}}}}b}{CAf{{CAh{Jn}}}}{c{{O`{e}}}{}{}}{{}{{O`{c}}}{}}{fOb};`{{fh}b}{{{f{CAj}}}{{f{ADl}}}}{{{f{BjCAj}}}{{ABd{Gl}}}}{{{f{BjCAj}}}{{f{BjADl}}}}{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}{{{f{CAj}}}CAj}{{f{f{Bjc}}}b{}}{fb}{{}CAj}{Ff{{f{c}}}{}}{Ff{{f{Bjc}}}{}}{Ffb}{{{f{CAj}}}{{f{ADj}}}}{{{f{BjCAj}}Ff}b}{{{f{CAj}}{f{BjGh}}}{{O`{bAOn}}}}{cc{}}{{}Ff}{{}c{}}{{{f{CAj}}}Ff}{FfCAj}{{{f{BjCAj}}}b}70{fc{}}{c{{O`{e}}}{}{}}{{}{{O`{c}}}{}}{fOb}{{{f{CAj}}}{{B`{{f{CAl}}}}}}8```````{{{f{AJl}}FfFf}AJl}0`{{}b}0{{}d}``{{eFfFf}{{CAn{Jn}}}{{Kf{Df}}}{{Bf{}{{Bb{c}}}}}}{{eFfFf}{{AKb{Jn}}}{{Kf{{Dl{Dj}}}}}{{Bf{}{{Bb{c}}}}}}{Ihb}`{{fh}b}{{{f{Kl}}}Hj}{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}{{{f{Kl}}}Kl}{{f{f{Bjc}}}b{}}{fb}{Ff{{f{c}}}{}}{Ff{{f{Bjc}}}{}}{Ffb}{{{f{Kl}}}{{f{Dn}}}}{{{f{Kl}}{f{Kl}}}d}{{{f{Kl}}{f{BjGh}}}Gj}{cc{}}{nKl}{IfKl}{IhKl}{LlKl}{CB`Kl}{DjKl}{JnKl}{MbKl}{CBbKl}{CBdKl}{{}Ff}{{}c{}}{{KlBh}Eh}{{KlBh}Af}{{{f{Kl}}}d}0{{DnHj}Kl}`{fc{}}{c{{O`{e}}}{}{}}{{}{{O`{c}}}{}}{fOb}{{{f{BjKl}}Hj}b}{{{f{Kl}}}{{f{Hj}}}}:{{{B`{n}}Dn}Kl}``````{{{f{{CBf{c}}}}{f{{CBf{c}}}}}{{Ah{b}}}{}}{{{f{BE`}}}BDd}{{{f{BDn}}}CBh}{{{f{BDn}}}BDd}{{{f{CBh}}{f{Df}}}{{B`{Mh}}}}{{{f{BDd}}{f{Df}}}{{B`{Mh}}}}{{{f{CBh}}}{{`{{Jf{}{{Bb{Mh}}}}}}}}{{{f{BDd}}}{{`{{Jf{}{{Bb{Mh}}}}}}}}{{{f{{CBl{}{{CBj{c}}}}}}}{{`{{Jf{}{{Bb{{Hd{{f{Bh}}{f{c}}}}}}}}}}}{ADnA@lBLhBLn}}{{{f{BDd}}}{{`{{Jf{}{{Bb{{Hd{{f{Bh}}{f{c}}}}}}}}}}}{}}{{{f{CBh}}AMl}BDn}{{{f{BDd}}AMl}BDn}{{{f{BjCBh}}{f{BDd}}}{{Ah{d}}}}{{{f{BjBDd}}{f{BDd}}}{{Ah{d}}}}{{{f{CBh}}{f{Df}}}{{Ah{Mh}}}}{{{f{BDd}}{f{Df}}}{{Ah{Mh}}}}`````````````````{{fh}b}0{{{f{BOf}}}n}0{{Bh{Fj{Fh}}{f{ADj}}}{{Ah{Af}}}}{{Bh{Fj{Fh}}{f{ADj}}{B`{{f{CBn}}}}}{{Ah{Af}}}}{{{f{Af}}c}e{AbKj}{}}{{Afc}e{AbKj}{}}{{{f{Af}}{f{Af}}}c{}}{{AfAf}c{}}`{{{f{BjAf}}{f{Af}}}{{Ah{{f{BjAf}}}}}}{{{f{BOf}}Ed}Ef}0{{{f{BOf}}}{{Ah{Ef}}}}0`{{{f{Af}}Ff}{{f{Fh}}}}{{{f{BOf}}}{{f{ADl}}}}{{{f{BjBOf}}}{{f{BjADl}}}}0{{{f{Af}}}E`}{{{f{BjBOf}}}{{f{Bj{l{c}}}}}C`}{{{f{BOf}}}{{f{{l{c}}}}}C`}{{{f{Af}}}{{f{BOf}}}}{{{f{BjBOf}}}{{Ah{Ff}}}}0{{{f{BjAf}}}{{Ah{Ff}}}}{{{f{Af}}}{{Ah{{f{El}}}}}}{{{f{Af}}}{{Ah{{f{AKd}}}}}}{{{f{BOf}}{f{Af}}}{{Ah{Af}}}}00000{{{f{Af}}}{{Ah{{f{Gb}}}}}}{f{{f{c}}}{}}000{{{f{Bj}}}{{f{Bjc}}}{}}000{{{f{BOf}}{f{Dn}}F`}{{Ah{Af}}}}{{{f{Af}}{f{Dn}}}{{Ah{Af}}}}0{{{f{Af}}{f{Dn}}F`}{{Ah{Af}}}}{{{f{Af}}}{{Ah{{f{AM`}}}}}}77{{{f{Af}}{f{Af}}}{{Ah{Af}}}}{{{f{Af}}c}{{Ah{Af}}}Ad}{{{f{BOf}}}Fd}{{{f{Af}}}{{`{{Bf{}{{Bb{Ff}}}}}}}}{{{f{BOf}}}{{f{{Fj{Fh}}}}}}{{{f{BjBOf}}}{{f{Bj{Fj{Fh}}}}}}{{{f{BjAf}}}{{f{Bj{Fj{Fh}}}}}}{{{f{Af}}}Af}{{{f{Jj}}}Jj}1{{{f{BOf}}}{{Lb{BOf}}}}{{f{f{Bjc}}}b{}}0{fb}0{{{f{BjAf}}}b}{{{f{Af}}}{{Ah{{f{J`}}}}}}{{}Af}{Ff{{f{c}}}{}}000{{{f{Af}}}{{f{c}}}{}}{Ff{{f{Bjc}}}{}}000{{AfAf}c{}}{{{f{Af}}{f{Af}}}c{}}{{{f{Af}}c}e{AbKj}{}}{{Afc}e{AbKj}{}}{{{f{Af}}{f{Af}}}{{Ah{n}}}}{Ffb}000{{{f{BOf}}}Af}0{{{f{BOf}}}{{f{Dn}}}}0{{{f{Jj}}{f{Jj}}}d}{{{f{Af}}{f{Af}}}d}{{{f{Af}}c}{{Ah{Gb}}}B@`}{{{f{Af}}{f{Af}}}{{Ah{Gb}}}}{{{f{Af}}{f{Df}}}{{Ah{Gb}}}}{{{f{Af}}{f{Df}}}c{}}{{{f{Af}}c}eB@`{}}355{{f{f{c}}}d{}}00{{{f{Af}}}Ff}{{{f{Af}}}{{Ah{Af}}}}{{{f{BjAf}}{f{Af}}}{{Ah{{f{BjAf}}}}}}{{{f{Af}}HjFf}{{Ah{Af}}}}{{{f{Af}}}{{Ah{{f{AKl}}}}}}{{{f{Af}}}{{Ah{{f{AKn}}}}}}{{{f{BOf}}}{{AKj{Mh}}}}0{{{f{Af}}AG`}{{Ah{Af}}}}{{{f{BOf}}{f{Gb}}}{{Ah{Af}}}}{{{f{Jj}}{f{BjGh}}}Gj}{{{f{Af}}{f{BjGh}}}Gj}0{{{f{Af}}}Db}{cc{}}000{{{l{c}}}AfC`}{{Bh{f{{Dl{Hj}}}}d}{{Ah{Af}}}}{{Bh{f{{Dl{Hj}}}}{f{Dn}}d}{{Ah{Af}}}}{{BhFh}{{Ah{Af}}}}{{Bh{Fj{Fh}}}{{Ah{Af}}}}{{Bh{Fj{Fh}}{f{Dn}}}Af}{cAf{{H`{}{{Bb{{f{Mb}}}}}}}}{cAf{{H`{}{{Bb{Db}}}}}}{cAf{{H`{}{{Bb{{f{n}}}}}}}}{cAf{{H`{}{{Bb{If}}}}}}{cAf{{H`{}{{Bb{d}}}}}}{cAf{{H`{}{{Bb{{f{d}}}}}}}}{cAf{{H`{}{{Bb{{f{If}}}}}}}}{cAf{{H`{}{{Bb{Jn}}}}}}{cAf{{H`{}{{Bb{{B`{n}}}}}}}}{cAf{{H`{}{{Bb{{B`{Jn}}}}}}}}{cAf{{H`{}{{Bb{{B`{d}}}}}}}}{cAf{{H`{}{{Bb{Mb}}}}}}{cAf{{H`{}{{Bb{{B`{Mb}}}}}}}}{cAf{{H`{}{{Bb{{B`{If}}}}}}}}{cAf{{H`{}{{Bb{{f{Ih}}}}}}}}{cAf{{H`{}{{Bb{Ih}}}}}}{cAf{{H`{}{{Bb{{B`{Ih}}}}}}}}{cAf{{H`{}{{Bb{{f{Ll}}}}}}}}{cAf{{H`{}{{Bb{Ll}}}}}}{cAf{{H`{}{{Bb{{B`{Ll}}}}}}}}{cAf{{H`{}{{Bb{{B`{{f{Df}}}}}}}}}}{cAf{{H`{}{{Bb{{f{Jn}}}}}}}}{cAf{{H`{}{{Bb{{f{Df}}}}}}}}{cAf{{H`{}{{Bb{{B`{Db}}}}}}}}{cAf{{H`{}{{Bb{n}}}}}}{{Bh{Fj{n}}}Af}{{Bh{Fj{Ih}}}Af}{{Bh{Fj{Mb}}}Af}{{Bh{Fj{Jn}}}Af}{{Bh{Fj{Md}}}Af}{{Bh{Fj{Ll}}}Af}{{Bh{Fj{If}}}Af}{{BhFf{f{Dn}}}Af}{{{f{Af}}FfFf}Af}{{{f{BOf}}Ff}{{Ah{Hj}}}}{{{f{Af}}}Ff}{{{f{Af}}}Hn}{{{f{Af}}}Af}{{{f{BOf}}}{{B`{{Lf{Ld}}}}}}0{{{f{BOf}}Ff}{{B`{{f{Ib}}}}}}0{{{f{BOf}}FfFf}{{B`{{f{Ib}}}}}}0{{{f{BOf}}Ff}Hj}0{{{f{Af}}{f{Af}}}{{Ah{Gb}}}}{{{f{Af}}{f{Df}}}{{Ah{Gb}}}}{{{f{Af}}c}{{Ah{Gb}}}B@`}2{{{f{Af}}{f{Df}}}c{}}1{{{f{BOf}}}d}{{{f{Jj}}{f{Bjc}}}bABf}{{{f{Af}}{B`{Ff}}}Af}{{{f{Af}}}{{Ah{{f{BBb}}}}}}{{{f{Af}}}{{Ah{{f{BBd}}}}}}{{{f{Af}}}{{Ah{{f{BBf}}}}}}{{{f{Af}}}{{Ah{{f{BB`}}}}}}{{{f{Af}}}{{Ah{{f{Ef}}}}}}`{{{f{Af}}}{{Ah{E`}}}}{{}Ff}000{{}c{}}000{{}Eh}{AfBCf}2{BFbAf}{AfAf}>>{{{f{Af}}}{{Ah{Gb}}}}000{{{f{BOf}}}Gb}0{{}d}00{{{f{Af}}}Jj}{{{f{Af}}}CC`}{{{f{Af}}}{{`{{Bf{}{{Bb{Af}}}}}}}}{{{f{BOf}}}Ff}{{{f{Af}}}Ff}{{{f{BOf}}Ff}Af}0{{{f{Af}}}{{Ah{{f{E`}}}}}}{{{f{Af}}c}{{Ah{Gb}}}B@`}{{{f{Af}}{f{Df}}}c{}}{{{f{Af}}{f{Af}}}{{Ah{Gb}}}}102{{{f{Af}}}{{Ah{{B`{c}}}}}Kj}{{{f{BOf}}}{{Ah{Kl}}}}0{{{f{BOf}}}{{B`{n}}}}0{{{f{Af}}}Kl}1122322{{{f{Af}}{f{Af}}}c{}}{{{f{Af}}c}e{AbKj}{}}{{Afc}e{AbKj}{}}{{AfAf}c{}}>>={{{f{BOf}}}{{Ah{Ff}}}}0{{{f{BOf}}}{{f{Bh}}}}{{Bhc}Af{{Kf{{Dl{{B`{Jn}}}}}}}}{{Bhc}Af{{Kf{{Dl{Db}}}}}}{{Bhc}Af{{Kf{{Dl{{B`{{f{Df}}}}}}}}}}{{Bh{f{Af}}}Af}{{Bhc}Af{{Kf{{Dl{{f{Df}}}}}}}}{{Bhc}Af{{Kf{{Dl{{B`{Af}}}}}}}}{{Bhc}Af{{Kf{{Dl{Af}}}}}}{{Bh{Mf{Ll}}}Af}{{Bh{Mf{Ih}}}Af}{{Bh{Mf{Mb}}}Af}{{Bh{Mf{Jn}}}Af}{{Bhc}Af{{Kf{{Dl{{B`{{AKj{{Dl{Dj}}}}}}}}}}}}{{Bhc}Af{{Kf{{Dl{{AKj{Df}}}}}}}}{{Bhc}Af{{Kf{{Dl{{B`{n}}}}}}}}{{Bhc}AfBFb}{{Bhc}Af{{Kf{{Dl{{B`{If}}}}}}}}{{Bhc}Af{{Kf{{Dl{Hj}}}}}}{{Bhc}Af{{Kf{{Dl{{B`{Md}}}}}}}}{{Bhc}Af{{Kf{{Dl{Ih}}}}}}{{Bhc}Af{{Kf{{Dl{d}}}}}}{{Bhc}Af{{Kf{{Dl{Mb}}}}}}{{Bhc}Af{{Kf{{Dl{{B`{{f{{Dl{Dj}}}}}}}}}}}}{{Bhc}Af{{Kf{{Dl{{Fj{Dj}}}}}}}}{{Bhc}Af{{Kf{{Dl{{B`{Ih}}}}}}}}{{Bhc}Af{{Kf{{Dl{Jn}}}}}}{{Bhc}Af{{Kf{{Dl{{B`{Ll}}}}}}}}{{Bhc}Af{{Kf{{Dl{{AKj{{Dl{Dj}}}}}}}}}}{{Bhc}Af{{Kf{{Dl{{B`{d}}}}}}}}{{Bhc}Af{{Kf{{Dl{{B`{{AKj{Df}}}}}}}}}}{{Bhc}Af{{Kf{{Dl{{B`{{Fj{Dj}}}}}}}}}}{{Bhc}Af{{Kf{{Dl{Ll}}}}}}{{Bhc}Af{{Kf{{Dl{{B`{Db}}}}}}}}{{Bhc}Af{{Kf{{Dl{Md}}}}}}{{Bhc}Af{{Kf{{Dl{n}}}}}}{{Bhc}Af{{Kf{{Dl{{f{{Dl{Dj}}}}}}}}}}{{Bhc}Af{{Kf{{Dl{If}}}}}}{{Bhc}Af{{Kf{{Dl{{B`{Mb}}}}}}}}{{Bh{f{Dn}}}Af}{{{f{BOf}}FfFf}Af}{{BhFf}Af}{{{f{BjCC`}}}{{B`{c}}}{}}{{{f{Af}}{f{Df}}}{{Ah{Gb}}}}{{{f{Af}}{f{Af}}}{{Ah{Gb}}}}{{{f{Af}}c}{{Ah{Gb}}}B@`}{{{f{Af}}{f{Df}}}c{}}2{{{f{Af}}c}eB@`{}}{{{f{Af}}}{{Ah{{f{`}}}}}}{{{f{BOf}}}Ff}`{{{f{Af}}}BGd}{{{f{Af}}}{{Ah{Kl}}}}{{{f{BOf}}nMn}{{Ah{Kl}}}}0{{{f{BOf}}}Af}{{{f{Af}}{f{Af}}}c{}}{{Afc}e{AbKj}{}}{{{f{Af}}c}e{AbKj}{}}{{{f{BjBOf}}Bh}b}{{{f{BjAf}}Bh}{{f{BjAf}}}}{{{f{Af}}{f{{Dl{Jn}}}}}{{Ah{Af}}}}6{JjJj}{{{f{BOf}}{f{Cd}}N`}{{Ah{Af}}}}0{{{f{Af}}ndd{B`{Ih}}}{{Ah{Af}}}}{{{f{Af}}Ffdd{B`{Ih}}}{{Ah{Af}}}}{{{f{Af}}Ff}Af}{{{f{BjAf}}Jj}b}{{{f{BOf}}Jn}Af}{{{f{BjBOf}}}b}0{{{f{BjAf}}}b}{{{f{Af}}{B`{Ih}}}Af}{{{f{CC`}}}{{Hd{Ff{B`{Ff}}}}}}{{{f{BOf}}JnFf}Af}{{{f{Af}}JnFf}Af}{{{f{Af}}Ed}{{Ah{Af}}}}{{{f{BOf}}Ed}{{Ah{Af}}}}0{{{f{BOf}}Jn}{{Hd{AfAf}}}}{{{f{Af}}Jn}{{Hd{AfAf}}}}{{{f{BOf}}Dj}{{B`{n}}}}0{{{f{BOf}}Dj}{{Ah{Kl}}}}0{{{f{Af}}}{{Ah{{f{D`}}}}}}{{{f{Af}}Ff}{{Ah{{AKj{Df}}}}}}{{{f{Af}}{f{Dn}}}{{Ah{Af}}}}{{{f{Af}}c}e{AbKj}{}}{{{f{Af}}{f{Af}}}c{}}{{Afc}e{AbKj}{}}{{AfAf}c{}}{{{f{Af}}}{{Ah{c}}}Kj}{{{f{BOf}}}{{Ah{Kl}}}}0{{{f{Af}}}{{Ah{Kl}}}}{{{f{Af}}{B`{Ff}}}Af}{{{f{BOf}}{f{Ef}}}{{Ah{Af}}}}{{{f{BOf}}{f{{Dl{Hl}}}}}{{Ah{Af}}}}{{{f{BOf}}{f{{Dl{Hl}}}}}Af}{{{f{BOf}}{f{Ef}}}Af}{{{f{Af}}{f{{Dl{Hl}}}}}Af}{{{f{Af}}FfAMl}Fh}{{{f{Af}}}{{Ah{Af}}}}{fc{}}0{{{f{Af}}}{{AKj{Af}}}}{fDb}{{AfAf}{{Ah{Af}}}}{c{{O`{e}}}{}{}}00{{{Hd{{f{B@d}}{Fj{Fh}}}}}{{Ah{Af}}}}{{{Hd{BhFh}}}{{Ah{Af}}}}{{{Hd{{f{B@d}}Fh}}}{{Ah{Af}}}}{{{Hd{Bh{Fj{Fh}}}}}{{Ah{Af}}}}4{{}{{O`{c}}}{}}0006{{Bhc}{{O`{Af}}}{}}{{{f{BjAf}}{Ij{c}}}dC`}8{f{{O`{FlBAh}}}}{fOb}000{{{f{Af}}}{{Ah{{f{BAl}}}}}}{{{f{Af}}}{{Ah{{f{AOl}}}}}}{{{f{Af}}}{{Ah{{f{BAn}}}}}}{{{f{Af}}}{{Ah{{f{BAj}}}}}}{{{f{BOf}}}{{Ah{Af}}}}0{{{f{Af}}}{{Ah{Af}}}}{{{f{BOf}}}{{Ah{{f{{l{c}}}}}}}C`}{{{f{BOf}}Dj}{{B`{n}}}}0{{{f{BOf}}Dj}{{Ah{Kl}}}}0{{}c{}}000{{AfBh}Af}{{{f{Af}}c}Af{AbKj}}{{{f{Af}}{f{Gb}}{f{Af}}}{{Ah{Af}}}}``{{fh}b}{{{f{Ch}}}{{f{Af}}}}{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}{{{f{Ch}}}Ch}{{f{f{Bjc}}}b{}}{fb}{{{f{Ch}}}Af}{Ff{{f{c}}}{}}{Ff{{f{Bjc}}}{}}{Ffb}{cc{}}{{}Ff}{{}c{}}{{{CCb{Af}}}Ch}{{{f{BjCh}}{f{BjFh}}}b}{fc{}}{c{{O`{e}}}{}{}}{{}{{O`{c}}}{}}{fOb}6{{{f{BjCh}}{f{BjFh}}e}c{}{{Cd{{f{Ch}}}{{Cb{c}}}}}}````{{{CCd{}{{Cb{c}}}}{f{Af}}}c{}}{{{f{CCf}}{f{Af}}}{{Ah{Af}}}}{{{f{{l{Aj}}}}{f{Af}}}{{Ah{Af}}}}0`2100210021002100``{{{f{BKl}}{f{Af}}}{{Ah{Af}}}}{{{f{{l{Fb}}}}{f{Af}}}{{Ah{Af}}}}0{{{f{BKl}}c}{{Ah{Af}}}Ad}{{{f{{l{Fb}}}}c}{{Ah{Af}}}Ad}0```{{fh}b}{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}{{{f{CCh}}}CCh}{{f{f{Bjc}}}b{}}{fb}{{}CCh}{Ff{{f{c}}}{}}{Ff{{f{Bjc}}}{}}{Ffb}{{{f{CCh}}{f{CCh}}}d}{{f{f{c}}}d{}}00{{{f{CCh}}{f{BjGh}}}Gj}{cc{}}{{{f{CCh}}{f{Bjc}}}bABf}{{}Ff}{{}c{}}{fc{}}{c{{O`{e}}}{}{}}{{}{{O`{c}}}{}}{fOb}4````````````{{fh}b}006{{{Fj{BCf}}}{{Ah{BCf}}}}{c{{Ah{BCf}}}{{H`{}{{Bb{BCf}}}}}}{cBCf{{H`{}{{Bb{BCf}}}}}}{c{{B`{BCf}}}{{H`{}{{Bb{BCf}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}}{{Hd{{AKj{{l{c}}}}{AKj{{l{e}}}}}}}C`C`}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}}{{Hd{{AKj{{l{c}}}}{AKj{{l{e}}}}{AKj{{l{g}}}}}}}C`C`C`}{{}CCj}{{{f{CCl}}}d}0{c{{Ah{Dn}}}{{H`{}{{Bb{{f{Hj}}}}}}}}{c{{Ah{{Hd{DnFf}}}}}{{H`{}{{Bb{{f{Hj}}}}}}}}`{{{f{{l{c}}}}{f{{l{e}}}}}{{B`{Hb}}}C`C`}{{CCjCCj}CCj}{{{f{BjCCj}}CCj}b}10{{{f{CCj}}}Dj}021{f{{f{c}}}{}}0000{{{f{Bj}}}{{f{Bjc}}}{}}0000{{{f{CCn}}}{{`{{Bf{}{{Bb{Ff}}}}}}}}{{{f{CCj}}}CCj}{{{f{CCl}}}CCl}{{{f{{CD`{ec}}}}}{{CD`{ec}}}A@l{A@l{Bf{}{{Bb{c}}}}}}{{f{f{Bjc}}}b{}}00{fb}00{{{f{{l{c}}}}{f{{l{c}}}}}{{Hd{{AKj{{l{c}}}}{AKj{{l{c}}}}}}}C`}{{{f{Eh}}{f{Eh}}}{{Hd{EhEh}}}}{CDbe{}{{CDd{c}}}}{CDbe{}{{CDf{c}}}}{CCjCCj}{c{{Ah{BCf}}}{{H`{}{{Bb{{f{BCf}}}}}}}}{cBCf{{H`{}{{Bb{{f{BCf}}}}}}}}{{{f{CCj}}CCj}d}{{}CCj}{{}CCl}{{{f{{CDh{c}}}}}{{f{e}}}{}{}}{Ff{{f{c}}}{}}0{{{f{{AJn{c}}}}}{{f{e}}}{}{}}111{Ff{{f{Bjc}}}{}}{{{f{Bj{AJn{c}}}}}{{f{Bje}}}{}{}}1111{{CCjCCj}CCj}{Ffb}0000{cBDd{{H`{}{{Bb{Dn}}}}}}{c{{Ah{Dn}}}{{H`{}{{Bb{{f{Dn}}}}}}}}:{{{f{{CDh{Af}}}}{f{{CDh{Af}}}}}d}{{{f{CCj}}{f{CCj}}}d}{{{f{CCl}}{f{CCl}}}d}{{f{f{c}}}d{}}00000000{{{f{BjCCj}}c}b{{H`{}{{Bb{CCj}}}}}}``{{{f{CCj}}{f{BjGh}}}Gj}0000{{{f{CCl}}{f{BjGh}}}Gj}{cc{}}000{CCjCCl}1{Dj{{B`{CCj}}}}{DjCCj}00{c{{AJn{{l{e}}}}}{{H`{}{{Bb{}}}}}A`}{c{{AJn{Gb}}}{{H`{}{{Bb{d}}}}}}{cCCj{{H`{}{{Bb{CCj}}}}}}{eCDf{}{{H`{}{{Bb{c}}}}}}32{{{f{Df}}}{{B`{CCj}}}}{c{{AJn{{l{e}}}}}{{Hf{}{{Bb{}}}}}A`}{c{{AJn{{l{e}}}}}{{Hh{}{{Bb{}}}}}A`}{c{{AJn{Gb}}}{{Hh{}{{Bb{d}}}}}}{{{f{Dn}}{f{Dn}}}{{B`{Dn}}}}{{{f{Dn}}{f{Dn}}CCl}{{B`{Dn}}}}{{{f{AMn}}{f{AMn}}}AMn}{{{f{Af}}{f{Af}}}{{Ah{b}}}}{{{f{{CDh{Af}}}}{f{Bjc}}}bABf}{{{f{CCj}}{f{Bjc}}}bABf}{{{f{CCl}}{f{Bjc}}}bABf}{{}Ff}0000{{{f{BjCCj}}CCj}b}{{CCjCCj}CCj}{{{f{CCj}}CCj}d}{{}c{}}0000{{{AJn{c}}}c{}}{CCjc{}}2{BFf{{Fj{c}}}{}}{{}{{Fj{Bh}}}}{{{f{CCj}}}d}0{{{f{CCj}}}{{ACl{CCj}}}}{{{f{CCn}}}{{`{{Bf{}{{Bb{CCn}}}}}}}}{{{f{CCj}}}{{ACn{CCj}}}}{{{f{CCn}}}Ff}{MdHj}1{c{{AJn{c}}}{}}{{eFf}{{CD`{ec}}}{}{{Bf{}{{Bb{c}}}}}}{{cFf}{{CD`{{CDl{{CDj{c}}}}c}}}A@l}{{{f{Bj{CD`{ec}}}}}B`{}{{Bf{}{{Bb{c}}}}}}{{{f{Bj{CD`{ec}}}}}B`{}{{Bf{}{{Bb{c}}}}G`}}{CCjCCj}{{{f{Df}}}Db}`{{{f{BjCCj}}CCj}b}{{{f{BjCCj}}CCjd}b}{{{f{{CD`{ec}}}}}{{Hd{Ff{B`{Ff}}}}}{}{{Bf{}{{Bb{c}}}}}}{{{f{CCn}}JnFf}CCn}{{{f{{Dl{c}}}}JnFf}{{f{{Dl{c}}}}}{}}{{{f{c}}Ff}{{Fj{c}}}CCn}0{{{f{CCn}}Jn}{{Hd{CCnCCn}}}}{{{f{BCf}}Ffd}{{Fj{BCf}}}}{{CCjCCj}CCj}80{fc{}}009{{CDbFf}{{CD`{CDbc}}}{}}{c{{O`{e}}}{}{}}0000{{{f{Dn}}{f{Dn}}}{{Ah{Dn}}}}{{}{{O`{c}}}{}}0000{fOb}00006{{}c{}}0000{{{f{Dn}}e}c{}{{Cd{{f{BjCh}}}{{Cb{c}}}}}}{{{f{{Dl{{Fj{c}}}}}}}{{Hd{Ff{Fj{Ff}}}}}{}}{{{f{BCf}}}{{`{{Bf{}{{Bb{BCf}}}}}}}}{{{f{{Dl{c}}}}}{{AJh{Hl}}}{{Kf{{Dl{Od}}}}JbJd}}{{{f{{Dl{e}}}}}{{Fj{c}}}{JbJdCf}{{Kf{{Dl{c}}}}}}{{{f{Af}}}{{Fj{Af}}}}","D":"JJj","p":[[1,"unit"],[1,"bool"],[1,"reference"],[5,"Private",5721],[5,"ListType",1533],[5,"ChunkedArray",40],[1,"f64"],[10,"PolarsNumericType",1533],[10,"Num",5722],[10,"ToPrimitive",5723],[5,"Series",5002],[8,"PolarsResult",4249,5724],[10,"NumOpsDispatchInner",5445,5725],[6,"GroupsProxy",3844,5726],[5,"BooleanType",1533],[6,"Option",5727],[17,"Item"],[8,"ArrayBox",5421],[10,"Iterator",5728],[5,"PlSmallStr",4249,5729],[0,"mut"],[17,"IsNested"],[5,"FalseT",1533],[10,"PolarsDataType",1533],[17,"Output"],[10,"Fn",5730],[10,"Copy",5731],[5,"AmortSeries",5421],[10,"FnMut",5730],[5,"Float64Type",1533],[5,"Float32Type",1533],[8,"StringChunked",1533],[5,"String",5732],[5,"StringType",1533],[1,"str"],[5,"BinaryType",1533],[1,"u8"],[1,"slice"],[6,"DataType",1533,5733],[8,"ListChunked",1533],[5,"View",5734],[5,"SortOptions",1448],[8,"IdxCa",1533,5735],[6,"Column",3606],[5,"SortMultipleOptions",1448],[8,"BinaryChunked",1533],[10,"PolarsIntegerType",1533],[6,"CastOptions",734],[10,"NumOpsDispatchCheckedInner",5470,5736],[8,"ChunkLenIter",40],[1,"usize"],[8,"ArrayRef",4249,5737],[5,"Vec",5738],[5,"CompactString",5739],[5,"MetadataProperties",822],[10,"DoubleEndedIterator",5740],[8,"BooleanChunked",1533],[17,"HasViews"],[17,"IsObject"],[5,"Formatter",5741],[8,"Result",5741],[10,"Array",5737],[17,"Array"],[10,"IntoIterator",5742],[5,"Bitmap",5743],[1,"tuple"],[10,"IntoParallelIterator",5744],[10,"TrustedLen",5745],[6,"AnyValue",1533,5746],[8,"IdxSize",4249,5747],[5,"MetadataFlags",822],[5,"ObjectType",1533],[10,"PolarsObjectSafe",1107],[10,"PolarsObject",1107],[1,"f32"],[1,"u64"],[5,"Metadata",822],[5,"RwLockWriteGuard",5748],[5,"Int128Type",1533],[8,"DecimalChunked",1533,5749],[10,"Send",5731],[10,"Sync",5731],[10,"ExactSizeIterator",5750],[10,"PolarsFloatType",1533],[6,"IsSorted",5002,5751],[10,"PolarsIterator",783],[1,"i64"],[5,"Iter",5752],[1,"fn"],[5,"Map",5753],[10,"AsRef",5754],[6,"ChunkedArrayLayout",40],[10,"NumCast",5723],[5,"Scalar",4939],[6,"MetadataReadGuard",822,5755],[5,"IMMetadata",822,5756],[5,"Arc",4249,5757],[10,"MetadataTrait",822,5758],[5,"RwLockReadGuard",5748],[5,"Int64Type",1533],[5,"UInt32Type",1533],[1,"u32"],[5,"UInt64Type",1533],[5,"Int32Type",1533],[1,"i32"],[1,"i128"],[5,"Range",5759],[5,"Field",1533,5760],[10,"ParallelIterator",5744],[10,"IndexedParallelIterator",5744],[6,"QuantileInterpolOptions",4249,5761],[5,"RollingOptionsFixedWindow",4249,5762],[10,"Sized",5731],[17,"IsStruct"],[8,"PlRandomState",1533,5763],[5,"BytesHash",5764],[8,"Array2",5765],[8,"ArrayView1",5765],[6,"Either",5766],[6,"Result",5767],[5,"TypeId",5768],[5,"NullableIdxSize",4249,5747],[10,"FnOnce",5730],[17,"Scalar"],[17,"Out"],[17,"TrueDivOut"],[10,"ArithmeticChunked",444,5769],[10,"ChunkedBuilder",472],[5,"BinViewChunkedBuilder",472,5770],[10,"ViewType",5771],[5,"BooleanChunkedBuilder",472,5772],[5,"NullChunkedBuilder",472,5773],[5,"PrimitiveChunkedBuilder",472,5774],[10,"Clone",5775],[8,"StringChunkedBuilder",472,5770],[8,"BinaryChunkedBuilder",472,5770],[10,"NewChunkedArray",472],[5,"AnonymousListBuilder",580,5776],[5,"AnonymousOwnedListBuilder",580,5776],[5,"ListBooleanChunkedBuilder",580,5777],[5,"ListPrimitiveChunkedBuilder",580,5778],[10,"ListBuilderTrait",580],[5,"ListStringChunkedBuilder",580,5779],[5,"ListBinaryChunkedBuilder",580,5779],[5,"ListNullChunkedBuilder",580,5780],[5,"Box",5781],[10,"Hasher",5782],[10,"ChunkedCollectInferIterExt",763],[10,"ChunkedCollectIterExt",763],[10,"Canonical",777],[10,"ChunkedCollectParIterExt",779],[10,"FromParIterWithDtype",779],[5,"BooleanArray",5783],[5,"BoolIterNoNull",783],[5,"SomeIterator",783],[5,"MetadataEnv",822,5784],[10,"MetadataCollectable",822,5785],[5,"Iter",5786],[5,"IterNames",5786],[5,"File",5787],[5,"Mutex",5788],[6,"MetadataMerge",822],[5,"RwLock",5748],[5,"ObjectArray",1107],[6,"ArrowDataType",1533,5789],[10,"Any",5768],[10,"Debug",5741],[8,"ObjectValueIter",1107],[5,"BitmapIter",5790],[6,"ZipValidity",5791],[5,"ObjectChunkedBuilder",1184],[8,"ObjectChunked",1533],[10,"AnonymousObjectBuilder",1207],[5,"ObjectRegistry",1207],[8,"ObjectConverter",1207],[8,"BuilderConstructor",1207],[10,"ChunkAgg",1235],[17,"FuncRet"],[10,"ChunkApply",1235],[10,"ChunkApplyKernel",1235],[10,"ChunkSort",1235],[10,"ChunkUnique",1235],[10,"ChunkCast",1235],[6,"FillNullStrategy",1235],[10,"ChunkCompare",1235],[10,"ChunkExplode",1235],[5,"OffsetsBuffer",5792],[10,"ChunkFillNullValue",1235],[10,"ChunkFilter",1235],[10,"ChunkFull",1235],[10,"ChunkFullNull",1235],[10,"ChunkAnyValue",1235],[10,"IsFirstDistinct",1235],[10,"IsLastDistinct",1235],[10,"ChunkQuantile",1235],[10,"ChunkExpandAtIndex",1235],[10,"ChunkReverse",1235],[10,"ChunkRollApply",1235],[10,"ChunkSet",1235],[10,"ChunkShift",1235],[10,"ChunkShiftFill",1235],[10,"ChunkVar",1235],[10,"ChunkTake",1235],[10,"ChunkTakeUnchecked",1235],[10,"ChunkBytes",1235],[10,"ChunkZip",1235],[10,"BinaryFnMut",1361],[10,"StaticArray",1533,5793],[10,"TernaryFnMut",1361],[10,"Error",5794],[10,"UnaryFnMut",1361],[5,"PrimitiveArray",5795],[6,"SearchSortedSide",1402],[10,"SlicedArray",4249,5796],[5,"NoNull",5505],[5,"RowsEncoded",5797],[5,"BinaryArray",5798],[8,"BinaryOffsetChunked",1533],[5,"NaiveDateTime",5799],[6,"PolarsError",4249,5724],[6,"Cow",5800],[8,"Float32Chunked",1533],[8,"Float64Chunked",1533],[10,"ArrayFromIter",1533,5801],[10,"ArrayFromIterDtype",1533,5801],[10,"AsRefDataType",1533,5733],[17,"ValueT"],[17,"ZeroableValueT"],[17,"ValueIterT"],[10,"Zeroable",5802],[10,"From",5754],[5,"CategoricalChunked",2988,5803],[10,"CategoricalMergeOperation",2988,5804],[10,"LogicalType",1533,5805],[5,"Logical",1533,5805],[5,"OwnedObject",1533,5746],[6,"UnknownKind",1533,5733],[5,"CompatLevel",1533,5733],[6,"TimeUnit",1533,5806],[5,"UInt8Type",1533],[5,"UInt16Type",1533],[5,"Int8Type",1533],[5,"Int16Type",1533],[5,"DateType",1533],[5,"TimeType",1533],[5,"BinaryOffsetType",1533],[5,"DecimalType",1533],[5,"DatetimeType",1533],[5,"DurationType",1533],[5,"CategoricalType",1533],[6,"ArrowTimeUnit",1533],[10,"ArrayCollectIterExt",4249,5801],[8,"Utf8ViewArray",5771],[8,"UInt32Chunked",1533],[5,"Error",5741],[10,"NumericNative",1533],[10,"Into",5754],[5,"ArrowField",4249],[6,"PrimitiveType",5807],[6,"IntegerType",5808],[10,"Borrow",5809],[10,"NoOption",5810],[10,"GetAnyValue",1533,5746],[8,"Int128Chunked",1533],[10,"IntoScalar",1533,5811],[6,"Ordering",5812],[6,"PhysicalType",5808],[6,"ToCompactStringError",5739],[8,"UInt8Chunked",1533],[8,"UInt16Chunked",1533],[8,"UInt64Chunked",1533],[8,"Int8Chunked",1533],[8,"Int16Chunked",1533],[8,"Int32Chunked",1533],[8,"Int64Chunked",1533],[8,"PlIdHashMap",1533,5735],[5,"CategoricalChunkedBuilder",2988,5813],[5,"GlobalRevMapMerger",2988,5804],[6,"RevMapping",3130,5814],[6,"CategoricalOrdering",3130,5814],[5,"CatIter",2988,5803],[1,"u128"],[5,"DataFrame",3325],[5,"StringCacheHolder",3184,5815],[5,"ErrString",3213,5724],[6,"PolarsWarning",3213,5816],[10,"Display",5741],[6,"FloatFmt",3294],[1,"char"],[8,"Schema",4980],[10,"IntoColumn",3606],[6,"NullStrategy",3325],[6,"UniqueKeepStrategy",3325],[8,"PlHashSet",1533,5763],[8,"ArrowSchema",4249,5817],[5,"Row",4102],[5,"GroupBy",3844],[5,"RangeFull",5759],[5,"RangeInclusive",5759],[5,"RangeToInclusive",5759],[5,"RangeFrom",5759],[5,"RangeTo",5759],[5,"RecordBatchIter",3325],[5,"PhysRecordBatchIter",3325],[10,"IntoSeries",5002,5818],[10,"RangeBounds",5759],[10,"IntoVec",5505],[8,"SchemaRef",4980],[6,"IndexOrder",4249,5819],[5,"StructArray",5820],[8,"RecordBatch",5821],[5,"ScalarColumn",3606],[6,"BitRepr",5002,5751],[8,"SeriesPhysIter",5002,5822],[5,"UnpivotArgsIR",3815],[5,"GroupsIdx",3844,5726],[8,"IdxVec",5823],[6,"GroupByMethod",3844],[5,"SlicedGroups",3844,5726],[5,"GroupsProxyParIter",3844,5726],[10,"UnindexedConsumer",5824],[6,"GroupsIndicator",3844,5726],[8,"IdxItem",3844,5726],[10,"IntoGroupsProxy",3844,5825],[5,"Copied",5826],[5,"Zip",5827],[5,"GroupsProxyIter",3844,5726],[8,"GroupsSlice",3844,5726],[1,"array"],[8,"DynArgs",4249,5828],[10,"IsFloat",5829],[10,"NativeType",5830],[10,"AggList",4086,5831],[10,"TakeExtremum",4086],[10,"PhysicalAggExpr",4099],[6,"AnyValueBuffer",4102,5832],[6,"AnyValueBufferTrusted",4102,5832],[5,"IdHasher",4201,5833],[5,"IdxHash",4201,5833],[5,"HashMap",5834],[10,"BuildHasher",5782],[10,"VecHash",4201,5835],[10,"Allocator",5836],[5,"BorrowedFd",5837],[10,"AsFd",5837],[10,"AsRawFd",5838],[5,"Path",5839],[5,"OsStr",5840],[20,"MaybeUninit",5841],[10,"NumOpsDispatchChecked",4249,5736],[5,"ChunkId",4249,5747],[5,"RollingVarParams",4249,5828],[5,"RollingQuantileParams",4249,5828],[6,"NonExistent",4249,5842],[10,"Ord",5812],[10,"Default",5843],[5,"CStr",5844],[5,"Weak",5757],[10,"PartialEq",5812],[10,"Scalar",5845],[5,"Error",5846],[5,"TryReserveError",5847],[5,"Utf8Error",5848],[6,"Error",5849],[5,"OsString",5840],[1,"never"],[5,"CString",5850],[5,"PathBuf",5839],[10,"ToOwned",5800],[10,"FromData",4861,5851],[5,"Buffer",5852],[10,"FromDataUtf8",4861,5851],[10,"FromDataBinary",4861,5851],[5,"ListArray",5853],[6,"Ambiguous",4249,5842],[10,"NamedFromOwned",4249,5854],[10,"PartialOrd",5812],[10,"Hash",5782],[10,"SeriesTrait",5002,5751],[10,"CloneToUninit",5775],[10,"ChunkAggSeries",4249,5855],[10,"QuantileAggSeries",4249,5856],[10,"IndexToUsize",4249,5857],[10,"NamedFrom",4249,5854],[5,"Pin",5858],[5,"Request",5794],[5,"BorrowedCursor",5859],[5,"IoSliceMut",5860],[6,"SeekFrom",5860],[10,"VarAggSeries",4249,5861],[5,"AllocError",5836],[5,"BTreeMap",5862],[5,"Arguments",5741],[5,"IoSlice",5860],[5,"AnonymousBuilder",4867,5863],[5,"Offsets",5792],[5,"MutableNullArray",4890,5864],[5,"MutableBitmap",5865],[5,"Utf8Array",5866],[1,"u16"],[1,"i16"],[1,"i8"],[5,"Schema",5867],[10,"SchemaExt",4980],[17,"DataType"],[10,"SchemaNamesAndDtypes",4980],[8,"Metadata",5789],[5,"SeriesIter",5002,5822],[5,"Rc",5868],[10,"LhsNumOps",5445,5725],[10,"NumOpsDispatch",5445,5725],[6,"NullBehavior",5478],[5,"SuperTypeFlags",5505,5869],[5,"SuperTypeOptions",5505,5869],[10,"Container",5505],[5,"TrustMyLength",5505,5745],[10,"CustomIterTools",5505,5870],[10,"FromIteratorReversed",5871],[10,"FromTrustedLenIterator",5505,5870],[5,"Wrap",5505],[5,"Repeat",5872],[5,"Take",5873],[8,"FillNullLimit",1235],[10,"InitHashMaps",1533],[10,"InitHashMaps2",1533],[5,"TrueT",1533],[15,"IO",3280],[15,"Context",3280],[15,"Count",4083],[15,"Slice",4084],[10,"ListFromIter",4249],[10,"Utf8FromIter",4934],[10,"BinaryFromIter",4934]],"r":[[0,5833],[4,5815],[13,5815],[16,5815],[32,5815],[444,5769],[472,5770],[473,5770],[474,5772],[477,5773],[478,5774],[479,5770],[580,5776],[581,5776],[582,5779],[583,5777],[585,5780],[586,5778],[587,5779],[827,5756],[833,5785],[834,5784],[838,5755],[839,5758],[1154,5874],[1432,5796],[1448,5796],[1534,5746],[1536,5801],[1537,5801],[1538,5801],[1539,5789],[1541,5733],[1557,5803],[1560,5803],[1561,5813],[1562,5804],[1563,5814],[1566,5733],[1567,5733],[1568,5733],[1569,5733],[1580,5749],[1591,5760],[1592,5760],[1607,5746],[1609,5804],[1613,5735],[1614,5857],[1615,5735],[1616,5735],[1617,5763],[1618,5735],[1643,5811],[1657,5805],[1658,5805],[1676,5746],[1680,5763],[1681,5763],[1682,5735],[1683,5763],[1684,5763],[1685,5763],[1686,5729],[1692,5814],[1694,5793],[1706,5806],[1707,5733],[1734,5733],[1932,5804],[1949,5805],[2055,5733],[2579,5804],[2580,5804],[2592,5733],[2678,5803],[2717,5803],[2988,5803],[2989,5803],[2990,5813],[2991,5804],[2992,5814],[2994,5804],[2998,5814],[3015,5804],[3082,5804],[3083,5804],[3101,5803],[3105,5803],[3130,5814],[3135,5814],[3184,5815],[3190,5815],[3193,5815],[3201,5815],[3203,5814],[3208,5814],[3209,5815],[3210,5815],[3211,5815],[3212,5815],[3219,5724],[3226,5724],[3227,5724],[3228,5816],[3242,5724],[3250,5724],[3257,5816],[3262,5724],[3264,5724],[3265,5724],[3266,5724],[3267,5724],[3268,5816],[3269,5724],[3284,5875],[3285,5875],[3286,5875],[3287,4201],[3844,5726],[3850,5726],[3851,5726],[3852,5726],[3853,5726],[3854,5726],[3855,5726],[3858,5726],[3860,5825],[3872,5726],[4086,5831],[4104,5832],[4105,5832],[4200,5876],[4201,5833],[4202,5833],[4203,5833],[4204,5835],[4207,5835],[4208,5835],[4249,5842],[4250,5757],[4251,5769],[4252,5801],[4253,5737],[4255,5817],[4256,5770],[4257,5772],[4259,5803],[4260,5803],[4261,5813],[4262,5804],[4263,5814],[4264,5855],[4265,5747],[4266,40],[4267,472],[4268,763],[4269,763],[4270,3606],[4274,3325],[4276,5828],[4282,5851],[4283,5851],[4284,5851],[4286,5804],[4289,5857],[4290,5747],[4291,5819],[4292,5857],[4293,3606],[4294,5818],[4295,5505],[4297,5877],[4298,5877],[4299,5877],[4302,5725],[4304,5779],[4305,5777],[4306,580],[4307,5878],[4308,5778],[4309,5779],[4313,5854],[4314,5854],[4316,472],[4318,5842],[4322,5747],[4323,5747],[4324,5725],[4325,5736],[4329,5729],[4330,5724],[4331,783],[4332,1107],[4333,5724],[4334,5774],[4335,5856],[4336,5761],[4339,5814],[4340,5762],[4341,5828],[4342,5828],[4345,4939],[4348,5002],[4349,5751],[4351,5796],[4353,5815],[4355,5770],[4357,3325],[4358,3815],[4359,5861],[4360,5835],[4412,5804],[4460,5878],[4461,0],[4474,5878],[4504,0],[4653,5857],[4697,5878],[4699,5804],[4700,5804],[4725,5878],[4732,5724],[4733,5724],[4734,5724],[4735,5724],[4747,5803],[4749,5878],[4755,5803],[4832,5878],[4861,5851],[4862,5851],[4863,5851],[4867,5863],[4890,5864],[4921,5814],[4926,5814],[4927,5796],[4930,5815],[4931,5815],[4932,5815],[4933,5815],[4934,5879],[4935,5879],[5004,5751],[5005,1235],[5008,5818],[5009,5751],[5010,5751],[5015,5822],[5016,5822],[5017,5751],[5445,5725],[5446,5725],[5447,5725],[5453,5725],[5470,5736],[5471,5736],[5508,5870],[5509,5870],[5510,5870],[5513,5869],[5514,5869],[5515,5745],[5530,5880],[5531,5880],[5591,5881],[5592,5869],[5635,5869],[5636,5869],[5638,5882],[5666,5869],[5698,5869],[5715,5882]],"b":[[50,"impl-Add%3CN%3E-for-ChunkedArray%3CT%3E"],[51,"impl-Add%3CN%3E-for-%26ChunkedArray%3CT%3E"],[52,"impl-Add-for-%26ChunkedArray%3CT%3E"],[53,"impl-Add-for-ChunkedArray%3CT%3E"],[66,"impl-ChunkedArray%3CFloat64Type%3E"],[67,"impl-ChunkedArray%3CFloat32Type%3E"],[72,"impl-ChunkedArray%3CStringType%3E"],[73,"impl-ChunkedArray%3CBinaryType%3E"],[74,"impl-ChunkedArray%3CT%3E"],[102,"impl-ChunkedArray%3CT%3E"],[103,"impl-Container-for-ChunkedArray%3CT%3E"],[123,"impl-Div%3CN%3E-for-%26ChunkedArray%3CT%3E"],[124,"impl-Div%3CN%3E-for-ChunkedArray%3CT%3E"],[125,"impl-Div-for-%26ChunkedArray%3CT%3E"],[126,"impl-Div-for-ChunkedArray%3CT%3E"],[133,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[134,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[135,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[136,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[143,"impl-Debug-for-ChunkedArray%3CBooleanType%3E"],[144,"impl-Debug-for-ChunkedArray%3CT%3E"],[154,"impl-FromIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[155,"impl-FromIterator%3C(Vec%3C%3CT+as+PolarsNumericType%3E::Native%3E,+Option%3CBitmap%3E)%3E-for-ChunkedArray%3CT%3E"],[156,"impl-FromIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[158,"impl-FromTrustedLenIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[159,"impl-FromTrustedLenIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[187,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[188,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[189,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[190,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[224,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[225,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[226,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[227,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[228,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[229,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[230,"impl-ChunkedArray%3CT%3E"],[231,"impl-Container-for-ChunkedArray%3CT%3E"],[236,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[237,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[238,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[239,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[240,"impl-ChunkedArray%3CBooleanType%3E"],[241,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[243,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[244,"impl-ChunkedArray%3CBooleanType%3E"],[254,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[255,"impl-ChunkedArray%3CBooleanType%3E"],[258,"impl-ChunkedArray%3CBooleanType%3E"],[259,"impl-ChunkedArray%3CT%3E"],[260,"impl-Mul-for-ChunkedArray%3CT%3E"],[261,"impl-Mul%3CN%3E-for-%26ChunkedArray%3CT%3E"],[262,"impl-Mul-for-%26ChunkedArray%3CT%3E"],[263,"impl-Mul%3CN%3E-for-ChunkedArray%3CT%3E"],[268,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[269,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[270,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[271,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-ChunkedArray%3CStringType%3E"],[272,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[273,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[274,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[275,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[276,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[277,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[278,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[279,"impl-NamedFrom%3CT,+%5Bi128%5D%3E-for-ChunkedArray%3CInt128Type%3E"],[280,"impl-NamedFrom%3CT,+%5BOption%3Ci128%3E%5D%3E-for-ChunkedArray%3CInt128Type%3E"],[281,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[282,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[283,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[284,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[285,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[286,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-ChunkedArray%3CInt64Type%3E"],[287,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-ChunkedArray%3CInt32Type%3E"],[288,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-ChunkedArray%3CUInt64Type%3E"],[289,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-ChunkedArray%3CUInt32Type%3E"],[290,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[291,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[299,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[300,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[301,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[302,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[306,"impl-ChunkedArray%3CListType%3E"],[307,"impl-ChunkedArray%3CStringType%3E"],[308,"impl-ChunkedArray%3CStringType%3E"],[309,"impl-ChunkedArray%3CListType%3E"],[320,"impl-Rem%3CN%3E-for-ChunkedArray%3CT%3E"],[321,"impl-Rem-for-%26ChunkedArray%3CT%3E"],[322,"impl-Rem-for-ChunkedArray%3CT%3E"],[323,"impl-Rem%3CN%3E-for-%26ChunkedArray%3CT%3E"],[342,"impl-Container-for-ChunkedArray%3CT%3E"],[343,"impl-ChunkedArray%3CT%3E"],[346,"impl-Container-for-ChunkedArray%3CT%3E"],[347,"impl-ChunkedArray%3CT%3E"],[350,"impl-Sub%3CN%3E-for-ChunkedArray%3CT%3E"],[351,"impl-Sub-for-ChunkedArray%3CT%3E"],[352,"impl-Sub-for-%26ChunkedArray%3CT%3E"],[353,"impl-Sub%3CN%3E-for-%26ChunkedArray%3CT%3E"],[355,"impl-ChunkedArray%3CBooleanType%3E"],[356,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[359,"impl-ChunkTake%3CI%3E-for-ChunkedArray%3CT%3E"],[360,"impl-ChunkTake%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[361,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[362,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CT%3E"],[368,"impl-ChunkedArray%3CListType%3E"],[369,"impl-ChunkedArray%3CT%3E"],[374,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[375,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[376,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[377,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[378,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[379,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[406,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[407,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[408,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[409,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[410,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[411,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[412,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[413,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[414,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[415,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[416,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[417,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[418,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[419,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[420,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[421,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[422,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[423,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[424,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[425,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[426,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[427,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[428,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[429,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[430,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[431,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[432,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[433,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[434,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[435,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[436,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[437,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[438,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[439,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[440,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[441,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[528,"impl-BinViewChunkedBuilder%3Cstr%3E"],[529,"impl-BinViewChunkedBuilder%3C%5Bu8%5D%3E"],[860,"impl-MetadataProperties"],[861,"impl-Flags-for-MetadataProperties"],[862,"impl-Flags-for-MetadataFlags"],[863,"impl-MetadataFlags"],[926,"impl-Metadata%3CT%3E"],[927,"impl-MetadataTrait-for-Metadata%3CT%3E"],[952,"impl-Binary-for-MetadataProperties"],[953,"impl-UpperHex-for-MetadataProperties"],[954,"impl-LowerHex-for-MetadataProperties"],[955,"impl-Octal-for-MetadataProperties"],[956,"impl-Debug-for-MetadataProperties"],[957,"impl-LowerHex-for-MetadataFlags"],[958,"impl-UpperHex-for-MetadataFlags"],[959,"impl-Binary-for-MetadataFlags"],[960,"impl-Octal-for-MetadataFlags"],[961,"impl-Debug-for-MetadataFlags"],[971,"impl-Flags-for-MetadataProperties"],[972,"impl-MetadataProperties"],[973,"impl-MetadataFlags"],[974,"impl-Flags-for-MetadataFlags"],[985,"impl-Metadata%3CT%3E"],[986,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1029,"impl-Metadata%3CT%3E"],[1030,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1034,"impl-Metadata%3CT%3E"],[1035,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1113,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[1114,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[1149,"impl-ObjectArray%3CT%3E"],[1150,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1165,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[1166,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[1176,"impl-ObjectArray%3CT%3E"],[1177,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1178,"impl-ObjectArray%3CT%3E"],[1179,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1181,"impl-ObjectArray%3CT%3E"],[1182,"impl-Array-for-ObjectArray%3CT%3E"],[1185,"impl-ObjectChunkedBuilder%3CT%3E"],[1186,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[1188,"impl-ObjectChunkedBuilder%3CT%3E"],[1189,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[1773,"impl-Add-for-%26ChunkedArray%3CBooleanType%3E"],[1774,"impl-Add-for-ChunkedArray%3CBooleanType%3E"],[1775,"impl-Add-for-%26ChunkedArray%3CStringType%3E"],[1776,"impl-Add%3C%26str%3E-for-%26ChunkedArray%3CStringType%3E"],[1777,"impl-Add-for-ChunkedArray%3CStringType%3E"],[1778,"impl-Add-for-%26ChunkedArray%3CBinaryType%3E"],[1779,"impl-Add-for-ChunkedArray%3CBinaryType%3E"],[1780,"impl-Add%3C%26%5Bu8%5D%3E-for-%26ChunkedArray%3CBinaryType%3E"],[1855,"impl-BitAnd-for-%26ChunkedArray%3CBooleanType%3E"],[1856,"impl-BitAnd-for-ChunkedArray%3CBooleanType%3E"],[1857,"impl-BitOr-for-ChunkedArray%3CBooleanType%3E"],[1858,"impl-BitOr-for-%26ChunkedArray%3CBooleanType%3E"],[1859,"impl-BitXor-for-ChunkedArray%3CBooleanType%3E"],[1860,"impl-BitXor-for-%26ChunkedArray%3CBooleanType%3E"],[2182,"impl-PartialEq%3CArrowDataType%3E-for-DataType"],[2183,"impl-PartialEq-for-DataType"],[2192,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2193,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2194,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2195,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2198,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2199,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2200,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2201,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2239,"impl-Debug-for-AnyValue%3C\'a%3E"],[2240,"impl-Display-for-AnyValue%3C\'_%3E"],[2242,"impl-Debug-for-DataType"],[2243,"impl-Display-for-DataType"],[2246,"impl-Debug-for-TimeUnit"],[2247,"impl-Display-for-TimeUnit"],[2258,"impl-From%3C%26str%3E-for-AnyValue%3C\'a%3E"],[2259,"impl-From%3CK%3E-for-AnyValue%3C\'static%3E"],[2260,"impl-From%3C%26%5Bu8%5D%3E-for-AnyValue%3C\'a%3E"],[2262,"impl-From%3Cbool%3E-for-AnyValue%3C\'static%3E"],[2263,"impl-From%3COption%3CT%3E%3E-for-AnyValue%3C\'a%3E"],[2265,"impl-From%3C%26ArrowDataType%3E-for-DataType"],[2266,"impl-From%3CAnyValue%3C\'_%3E%3E-for-DataType"],[2267,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-DataType"],[2270,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-Field"],[2272,"impl-From%3C%26Field%3E-for-Field"],[2296,"impl-From%3CPrimitiveType%3E-for-ArrowDataType"],[2297,"impl-From%3CIntegerType%3E-for-ArrowDataType"],[2300,"impl-FromIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[2301,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[2302,"impl-FromIterator%3COption%3CBox%3Cdyn+Array%3E%3E%3E-for-ChunkedArray%3CListType%3E"],[2304,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[2305,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[2306,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[2307,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2313,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[2314,"impl-FromTrustedLenIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[2316,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[2317,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[2318,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2319,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[2320,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[2321,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[2328,"impl-FromParallelIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[2329,"impl-FromParallelIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[2330,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[2331,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[2332,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[2333,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2422,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2423,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2424,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2425,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2428,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2429,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2430,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2431,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2569,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2570,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2571,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2572,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2575,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2576,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2577,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2578,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2613,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[2614,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[2615,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[2616,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-ChunkedArray%3CStringType%3E"],[2617,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2618,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2619,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2620,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2621,"impl-NamedFrom%3C%26%5BT%5D,+%26%5BT%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[2622,"impl-NamedFrom%3CS,+%5BOption%3CT%3E%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[2635,"impl-Not-for-ChunkedArray%3CBooleanType%3E"],[2636,"impl-Not-for-%26ChunkedArray%3CBooleanType%3E"],[2639,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2640,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2641,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2642,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2645,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2646,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2647,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2648,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2729,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CStringType%3E"],[2730,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CStringType%3E"],[2731,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CBinaryType%3E"],[2732,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[3035,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3036,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3037,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3038,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3039,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3040,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3055,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3056,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3057,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3058,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3059,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3060,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3076,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3077,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3078,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3079,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3080,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3081,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3092,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3093,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3094,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3095,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3096,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3097,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3252,"impl-Display-for-ErrString"],[3253,"impl-Debug-for-ErrString"],[3348,"impl-Add%3C%26Series%3E-for-%26DataFrame"],[3349,"impl-Add%3C%26Series%3E-for-DataFrame"],[3350,"impl-Add%3C%26DataFrame%3E-for-%26DataFrame"],[3392,"impl-Div%3C%26Series%3E-for-%26DataFrame"],[3393,"impl-Div%3C%26Series%3E-for-DataFrame"],[3394,"impl-Div%3C%26DataFrame%3E-for-%26DataFrame"],[3426,"impl-Display-for-DataFrame"],[3427,"impl-Debug-for-DataFrame"],[3433,"impl-FromIterator%3CSeries%3E-for-DataFrame"],[3434,"impl-FromIterator%3CColumn%3E-for-DataFrame"],[3460,"impl-Index%3C%26str%3E-for-DataFrame"],[3461,"impl-Index%3CRange%3Cusize%3E%3E-for-DataFrame"],[3462,"impl-Index%3CRangeFull%3E-for-DataFrame"],[3463,"impl-Index%3Cusize%3E-for-DataFrame"],[3464,"impl-Index%3CRangeInclusive%3Cusize%3E%3E-for-DataFrame"],[3465,"impl-Index%3CRangeToInclusive%3Cusize%3E%3E-for-DataFrame"],[3466,"impl-Index%3CRangeFrom%3Cusize%3E%3E-for-DataFrame"],[3467,"impl-Index%3CRangeTo%3Cusize%3E%3E-for-DataFrame"],[3485,"impl-Container-for-DataFrame"],[3486,"impl-DataFrame"],[3493,"impl-Mul%3C%26Series%3E-for-%26DataFrame"],[3494,"impl-Mul%3C%26Series%3E-for-DataFrame"],[3495,"impl-Mul%3C%26DataFrame%3E-for-%26DataFrame"],[3496,"impl-DataFrame"],[3497,"impl-Container-for-DataFrame"],[3514,"impl-Rem%3C%26DataFrame%3E-for-%26DataFrame"],[3515,"impl-Rem%3C%26Series%3E-for-DataFrame"],[3516,"impl-Rem%3C%26Series%3E-for-%26DataFrame"],[3542,"impl-Container-for-DataFrame"],[3543,"impl-DataFrame"],[3547,"impl-DataFrame"],[3548,"impl-Container-for-DataFrame"],[3551,"impl-Sub%3C%26DataFrame%3E-for-%26DataFrame"],[3552,"impl-Sub%3C%26Series%3E-for-%26DataFrame"],[3553,"impl-Sub%3C%26Series%3E-for-DataFrame"],[3574,"impl-TryFrom%3CStructArray%3E-for-DataFrame"],[3575,"impl-TryFrom%3C(RecordBatchT%3CBox%3Cdyn+Array%3E%3E,+%26Schema%3CField%3E)%3E-for-DataFrame"],[3613,"impl-Add%3CT%3E-for-%26Column"],[3614,"impl-Add-for-Column"],[3615,"impl-Add%3CT%3E-for-Column"],[3616,"impl-Add-for-%26Column"],[3638,"impl-Column"],[3639,"impl-BitAnd-for-Column"],[3640,"impl-BitAnd-for-%26Column"],[3641,"impl-BitOr-for-Column"],[3642,"impl-BitOr-for-%26Column"],[3643,"impl-BitXor-for-%26Column"],[3644,"impl-BitXor-for-Column"],[3670,"impl-Div-for-Column"],[3671,"impl-Div%3CT%3E-for-Column"],[3672,"impl-Div%3CT%3E-for-%26Column"],[3673,"impl-Div-for-%26Column"],[3695,"impl-From%3CSeries%3E-for-Column"],[3697,"impl-From%3CScalarColumn%3E-for-Column"],[3742,"impl-Mul%3CT%3E-for-Column"],[3743,"impl-Mul-for-%26Column"],[3744,"impl-Mul%3CT%3E-for-%26Column"],[3745,"impl-Mul-for-Column"],[3760,"impl-Rem%3CT%3E-for-%26Column"],[3761,"impl-Rem-for-%26Column"],[3762,"impl-Rem-for-Column"],[3763,"impl-Rem%3CT%3E-for-Column"],[3780,"impl-Sub-for-%26Column"],[3781,"impl-Sub-for-Column"],[3782,"impl-Sub%3CT%3E-for-%26Column"],[3783,"impl-Sub%3CT%3E-for-Column"],[3960,"impl-Display-for-GroupByMethod"],[3961,"impl-Debug-for-GroupByMethod"],[3967,"impl-From%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E-for-GroupsIdx"],[3969,"impl-From%3CVec%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E%3E-for-GroupsIdx"],[3970,"impl-From%3CVec%3C(Vec%3Cu32%3E,+Vec%3CUnitVec%3Cu32%3E%3E)%3E%3E-for-GroupsIdx"],[4003,"impl-IntoIterator-for-%26GroupsIdx"],[4004,"impl-IntoIterator-for-GroupsIdx"],[4006,"impl-IntoParallelIterator-for-GroupsIdx"],[4007,"impl-IntoParallelIterator-for-%26GroupsIdx"],[4376,"impl-AsRef%3CPath%3E-for-PlSmallStr"],[4377,"impl-AsRef%3COsStr%3E-for-PlSmallStr"],[4378,"impl-AsRef%3C%5Bu8%5D%3E-for-PlSmallStr"],[4379,"impl-AsRef%3Cstr%3E-for-PlSmallStr"],[4382,"impl-Arc%3CMaybeUninit%3CT%3E,+A%3E"],[4383,"impl-Arc%3C%5BMaybeUninit%3CT%3E%5D,+A%3E"],[4466,"impl-Default-for-Arc%3CT%3E"],[4467,"impl-Default-for-Arc%3Cstr%3E"],[4468,"impl-Default-for-Arc%3CCStr%3E"],[4469,"impl-Default-for-Arc%3C%5BT%5D%3E"],[4526,"impl-PartialEq-for-Arc%3CT,+A%3E"],[4527,"impl-PartialEq%3Cdyn+Array%3E-for-Arc%3Cdyn+Array%3E"],[4528,"impl-PartialEq%3Cdyn+Scalar%3E-for-Arc%3Cdyn+Scalar%3E"],[4558,"impl-Display-for-PolarsError"],[4559,"impl-Debug-for-PolarsError"],[4560,"impl-Debug-for-PlSmallStr"],[4561,"impl-Display-for-PlSmallStr"],[4564,"impl-Display-for-Arc%3CT,+A%3E"],[4565,"impl-Pointer-for-Arc%3CT,+A%3E"],[4566,"impl-Debug-for-Arc%3CT,+A%3E"],[4575,"impl-From%3CError%3E-for-PolarsError"],[4576,"impl-From%3CTryReserveError%3E-for-PolarsError"],[4577,"impl-From%3CUtf8Error%3E-for-PolarsError"],[4578,"impl-From%3CError%3E-for-PolarsError"],[4580,"impl-From%3CString%3E-for-PlSmallStr"],[4581,"impl-From%3C%26String%3E-for-PlSmallStr"],[4582,"impl-From%3C%26str%3E-for-PlSmallStr"],[4584,"impl-From%3CCompactString%3E-for-PlSmallStr"],[4588,"impl-From%3COsString%3E-for-Arc%3COsStr%3E"],[4590,"impl-From%3CCompactString%3E-for-Arc%3Cstr%3E"],[4591,"impl-From%3CString%3E-for-Arc%3Cstr%3E"],[4592,"impl-From%3C%26str%3E-for-Arc%3Cstr%3E"],[4593,"impl-From%3C%26%5BT%5D%3E-for-Arc%3C%5BT%5D%3E"],[4594,"impl-From%3C%26OsStr%3E-for-Arc%3COsStr%3E"],[4595,"impl-From%3C%5BT;+N%5D%3E-for-Arc%3C%5BT%5D%3E"],[4596,"impl-From%3CT%3E-for-Arc%3CT%3E"],[4597,"impl-From%3CArc%3Cstr%3E%3E-for-Arc%3C%5Bu8%5D%3E"],[4598,"impl-From%3CBox%3CT,+A%3E%3E-for-Arc%3CT,+A%3E"],[4599,"impl-From%3CCString%3E-for-Arc%3CCStr%3E"],[4601,"impl-From%3CPathBuf%3E-for-Arc%3CPath%3E"],[4602,"impl-From%3CVec%3CT,+A%3E%3E-for-Arc%3C%5BT%5D,+A%3E"],[4603,"impl-From%3CCow%3C\'a,+B%3E%3E-for-Arc%3CB%3E"],[4604,"impl-From%3C%26Path%3E-for-Arc%3CPath%3E"],[4605,"impl-From%3C%26CStr%3E-for-Arc%3CCStr%3E"],[4617,"impl-FromIterator%3CString%3E-for-PlSmallStr"],[4618,"impl-FromIterator%3Cchar%3E-for-PlSmallStr"],[4619,"impl-FromIterator%3CCow%3C\'a,+str%3E%3E-for-PlSmallStr"],[4620,"impl-FromIterator%3CPlSmallStr%3E-for-PlSmallStr"],[4621,"impl-FromIterator%3CBox%3Cstr%3E%3E-for-PlSmallStr"],[4622,"impl-FromIterator%3C%26str%3E-for-PlSmallStr"],[4623,"impl-FromIterator%3C%26PlSmallStr%3E-for-PlSmallStr"],[4624,"impl-FromIterator%3C%26char%3E-for-PlSmallStr"],[4954,"impl-From%3Cf64%3E-for-Scalar"],[4955,"impl-From%3Cf32%3E-for-Scalar"],[4956,"impl-From%3Cu64%3E-for-Scalar"],[4957,"impl-From%3Cu32%3E-for-Scalar"],[4958,"impl-From%3Cu16%3E-for-Scalar"],[4959,"impl-From%3Cu8%3E-for-Scalar"],[4960,"impl-From%3Ci64%3E-for-Scalar"],[4961,"impl-From%3Ci32%3E-for-Scalar"],[4962,"impl-From%3Ci16%3E-for-Scalar"],[4963,"impl-From%3Ci8%3E-for-Scalar"],[5025,"impl-Add%3CT%3E-for-%26Series"],[5026,"impl-Add%3CT%3E-for-Series"],[5027,"impl-Add-for-%26Series"],[5028,"impl-Add-for-Series"],[5098,"impl-Div-for-Series"],[5099,"impl-Div-for-%26Series"],[5100,"impl-Div%3CT%3E-for-%26Series"],[5101,"impl-Div%3CT%3E-for-Series"],[5113,"impl-ChunkCompare%3CRhs%3E-for-Series"],[5114,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[5115,"impl-ChunkCompare%3C%26str%3E-for-Series"],[5116,"impl-ChunkCompare%3C%26str%3E-for-Series"],[5117,"impl-ChunkCompare%3CRhs%3E-for-Series"],[5118,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[5135,"impl-Display-for-Series"],[5136,"impl-Debug-for-Series"],[5148,"impl-FromIterator%3C%26i32%3E-for-Series"],[5149,"impl-FromIterator%3CString%3E-for-Series"],[5150,"impl-FromIterator%3C%26f64%3E-for-Series"],[5151,"impl-FromIterator%3Cf32%3E-for-Series"],[5152,"impl-FromIterator%3Cbool%3E-for-Series"],[5153,"impl-FromIterator%3C%26bool%3E-for-Series"],[5154,"impl-FromIterator%3C%26f32%3E-for-Series"],[5155,"impl-FromIterator%3Ci64%3E-for-Series"],[5156,"impl-FromIterator%3COption%3Cf64%3E%3E-for-Series"],[5157,"impl-FromIterator%3COption%3Ci64%3E%3E-for-Series"],[5158,"impl-FromIterator%3COption%3Cbool%3E%3E-for-Series"],[5159,"impl-FromIterator%3Ci32%3E-for-Series"],[5160,"impl-FromIterator%3COption%3Ci32%3E%3E-for-Series"],[5161,"impl-FromIterator%3COption%3Cf32%3E%3E-for-Series"],[5162,"impl-FromIterator%3C%26u64%3E-for-Series"],[5163,"impl-FromIterator%3Cu64%3E-for-Series"],[5164,"impl-FromIterator%3COption%3Cu64%3E%3E-for-Series"],[5165,"impl-FromIterator%3C%26u32%3E-for-Series"],[5166,"impl-FromIterator%3Cu32%3E-for-Series"],[5167,"impl-FromIterator%3COption%3Cu32%3E%3E-for-Series"],[5168,"impl-FromIterator%3COption%3C%26str%3E%3E-for-Series"],[5169,"impl-FromIterator%3C%26i64%3E-for-Series"],[5170,"impl-FromIterator%3C%26str%3E-for-Series"],[5171,"impl-FromIterator%3COption%3CString%3E%3E-for-Series"],[5172,"impl-FromIterator%3Cf64%3E-for-Series"],[5173,"impl-NamedFromOwned%3CVec%3Cf64%3E%3E-for-Series"],[5174,"impl-NamedFromOwned%3CVec%3Cu64%3E%3E-for-Series"],[5175,"impl-NamedFromOwned%3CVec%3Ci32%3E%3E-for-Series"],[5176,"impl-NamedFromOwned%3CVec%3Ci64%3E%3E-for-Series"],[5177,"impl-NamedFromOwned%3CVec%3Ci128%3E%3E-for-Series"],[5178,"impl-NamedFromOwned%3CVec%3Cu32%3E%3E-for-Series"],[5179,"impl-NamedFromOwned%3CVec%3Cf32%3E%3E-for-Series"],[5194,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[5195,"impl-ChunkCompare%3C%26str%3E-for-Series"],[5196,"impl-ChunkCompare%3CRhs%3E-for-Series"],[5197,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[5198,"impl-ChunkCompare%3C%26str%3E-for-Series"],[5199,"impl-ChunkCompare%3CRhs%3E-for-Series"],[5242,"impl-ChunkCompare%3CRhs%3E-for-Series"],[5243,"impl-ChunkCompare%3C%26str%3E-for-Series"],[5244,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[5245,"impl-ChunkCompare%3C%26str%3E-for-Series"],[5246,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[5247,"impl-ChunkCompare%3CRhs%3E-for-Series"],[5261,"impl-Mul-for-%26Series"],[5262,"impl-Mul%3CT%3E-for-%26Series"],[5263,"impl-Mul%3CT%3E-for-Series"],[5264,"impl-Mul-for-Series"],[5271,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-Series"],[5272,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-Series"],[5273,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-Series"],[5274,"impl-NamedFrom%3C%26Series,+str%3E-for-Series"],[5275,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-Series"],[5276,"impl-NamedFrom%3CT,+%5BOption%3CSeries%3E%5D%3E-for-Series"],[5277,"impl-NamedFrom%3CT,+ListType%3E-for-Series"],[5278,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-Series"],[5279,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-Series"],[5280,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-Series"],[5281,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-Series"],[5282,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-Series"],[5283,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-Series"],[5284,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-Series"],[5285,"impl-NamedFrom%3CT,+T%3E-for-Series"],[5286,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-Series"],[5287,"impl-NamedFrom%3CT,+%5BAnyValue%3C\'a%3E%5D%3E-for-Series"],[5288,"impl-NamedFrom%3CT,+%5BOption%3Ci128%3E%5D%3E-for-Series"],[5289,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-Series"],[5290,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-Series"],[5291,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-Series"],[5292,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-Series"],[5293,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-Series"],[5294,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-Series"],[5295,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-Series"],[5296,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-Series"],[5297,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-Series"],[5298,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-Series"],[5299,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-Series"],[5300,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-Series"],[5301,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-Series"],[5302,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-Series"],[5303,"impl-NamedFrom%3CT,+%5Bi128%5D%3E-for-Series"],[5304,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-Series"],[5305,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-Series"],[5306,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-Series"],[5307,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-Series"],[5312,"impl-ChunkCompare%3C%26str%3E-for-Series"],[5313,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[5314,"impl-ChunkCompare%3CRhs%3E-for-Series"],[5315,"impl-ChunkCompare%3C%26str%3E-for-Series"],[5316,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[5317,"impl-ChunkCompare%3CRhs%3E-for-Series"],[5326,"impl-Rem-for-%26Series"],[5327,"impl-Rem%3CT%3E-for-Series"],[5328,"impl-Rem%3CT%3E-for-%26Series"],[5360,"impl-Sub%3CT%3E-for-%26Series"],[5361,"impl-Sub-for-%26Series"],[5362,"impl-Sub%3CT%3E-for-Series"],[5363,"impl-Sub-for-Series"],[5384,"impl-TryFrom%3C(%26Field,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"],[5385,"impl-TryFrom%3C(PlSmallStr,+Box%3Cdyn+Array%3E)%3E-for-Series"],[5386,"impl-TryFrom%3C(%26Field,+Box%3Cdyn+Array%3E)%3E-for-Series"],[5387,"impl-TryFrom%3C(PlSmallStr,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"],[5538,"impl-Flags-for-SuperTypeFlags"],[5539,"impl-SuperTypeFlags"],[5609,"impl-UpperHex-for-SuperTypeFlags"],[5610,"impl-Octal-for-SuperTypeFlags"],[5611,"impl-Debug-for-SuperTypeFlags"],[5612,"impl-Binary-for-SuperTypeFlags"],[5613,"impl-LowerHex-for-SuperTypeFlags"],[5622,"impl-SuperTypeFlags"],[5623,"impl-Flags-for-SuperTypeFlags"],[5625,"impl-FromIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[5626,"impl-FromIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[5629,"impl-FromTrustedLenIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[5630,"impl-FromTrustedLenIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[5633,"impl-FromIteratorReversed%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[5634,"impl-FromIteratorReversed%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"]],"c":"OjAAAAEAAAAAAAwAEAAAACkPdA+wD7MPtA+1D7YPtw+8D78PxA/FD+sP","e":"OzAAAAEAAAQRLgIAAAQABgACAAsAAAANAAAAEgACABcAAAAcAAIAIgAHACsADQBAAAAAQwABAEYABQBOAAEAUQAAAFMAAABVAAsAYwADAGgAAABrAAMAcAACAHcADQCGAAMAiwACAI8ABQCXAAEAmwAFAKMAAwCpAAMArgAFALUAAQC6AAUAwgACAMkABQDQAAMA1wACANwAAgDgAAYA6AAAAO0ADAD/AAMABQEGAA0BGwAsAQMAMQEAADMBBAA5AQEAPwEAAEEBBABHAQAATAEFAFQBAQBXAQAAWQECAF0BCQBtAQEAcwEAAHcBCACBAQgAiwEAAI0BBQCVAQAAlwEjALwBKQDqAQIA8AEnAB4CBQAoAgAAKgImAFMCTACnAgwAuwIkAOMCDgDzAgEA9gIZABMDCQAfAwEAIwMBACYDFQA9AwkASAMKAF4DAQBlAx4AiAMSAJ0DAACfAwkAqwMDALEDAQC1Aw0AzAMAAM8DAADWAwcA3wMHAPQDAQD4AwAA+wMDAAMEBQAKBAQAFgQLACkEBAAwBA0AQAQGAEoECABUBAEAWAQWAHAECAB6BAAAfQQAAH8EAgCFBBAAlwQAAJoEAwCfBAIAowQBAKYECACwBAAAsgQFALoEAQC9BAAAvwQBAMIEAwDHBAMAzAQCANAEAwDWBAAA2QQAAOEEAADmBAAA6QQBAO4EAQDxBAAA9AQAAP4EAQAIBQIADgUGABcFAgAcBQEAHwUAACEFAQAnBQEAKgUBADEFAQA3BQAAOgUAAD0FAAA/BQAAQQUAAEMFAABIBQQATwUBAFIFBwBbBQEAXgUAAGIFAABkBQMAaQUBAGwFBQB4BRYAkAUBAJQFBACaBQMAoQUHAKwFEQDABQsAzQUBANAFAwDgBQkA9gUNAAYGAgAKBgUAEgYAABQGDgAmBgAAKAYAAC0GAQAwBgAAMgYDADcGAAA5BgAAPAYAAD8GAABBBgEARAYAAEYGAgBKBgwAWAYAAFoGAQBdBgAAXwYBAGIGAABkBgEAZwYAAGkGAQBsBgMAcwYAAHcGAQB7BgAAfgYAAIAGAACCBgMAhwYAAIoGCACUBgIAmQYEAJ8GAQCjBgAApQYAAKoGAgCuBgEAsQYAALMGAQC2BgAAuAYBALsGAAC9BgEAwAYAAMIGAQDFBgAAxwYAAMoGOwAMBwQAEwcJAB4HBAAkBwMAKQcEAC8HAAAxB18AkgdtAAEIfgCBCAAAhAhHANMIAgDXCAEA2ggCAN8IAADhCAAA4wgAAPkIAQD8CBcAGAkjAD4JBgBHCR4AbAlBALAJAADUCQsA4gkAAOQJAgDoCQEA6wkAAPAJBwD5CQAA/AkCAAEKAwAGCgAACAodACcKCQAyCg0AQQoeAGEKBwBqChoAhgoWAJ4KDACwCgAAsgoAALcKHQDXCgQA3QpRADALLQBfC0wArQsEALMLAQC2CwIAugsEAMALJADsCwIA8AsJAP4LBAAEDBcAHgwBACEMBAAnDA0ANgwFAD0MAAA/DBcAWAwBAF4MAgBjDAEAZwwJAHIMBAB4DAEAfQwAAH8MAgCDDAEAhgwAAIgMAQCODAQAlAwEAJoMEACsDAoAuAwAALoMAgC/DAUAxgwlAO0MBQD0DAkAAQ0AAAQNCwARDQYAHQ0VADUNEwBSDQEAVg0CAFoNAABcDQAAYQ0DAHMNAAB6DQAAfQ0BAIUNDACYDQEAng0AAKENAQCmDQIAqg0AALANAQCzDQAAuw0CAMMNAADGDQAAzQ0AANUNAgDZDQAA3Q0FAOoNBADyDQYA+w0KAAcOAAAMDgQAGQ4AABsOBgAtDgEAMQ4BADQOEABHDhoAZA4MAHIOAAB1DgUAfg4JAIoOAwCPDgsAnQ4NAK0OCQC4DhIAzQ4AANAOAgDUDhMA6Q4OAPkOAgD9DgoACQ8BAAwPAwARDwMAFg8JACEPBwAqDwEALQ8cAEsPKAB1DwYAgA8AAIIPAgCIDwIAjQ8AAJIPBwCiDw0AsQ8BALgPAwC9DwEAwQ8CAMYPAADIDyAA7A8MAPsPBQACEAcACxAWACQQDgA0EA4ARBAAAEYQAABIEAMATxAGAFkQDgBqEAEAbRARAIEQBACJEAUAkRAJAJwQAgChEAcAqhAOALoQAwC/EBcA2BAHAOEQBQDoEAEA6xAUAAMREQAWEQAAGBEGACERHQBBEQMARhEdAGURBwBuEQEAchEAAHcRIgCdEQMAohEIAK0RAQCwETMA5RECAOkRAADrEQAA7hEBAAcSAAAKEgcAGBIAABsSAwAjEgAAJRIGAC4SEABMEgAAUBIDAFUSAwBaEgAAXBIBAHYSAwB9EgQAhBIAAIcSBwCREgAAkxIBAJgSLgDPEgIA0xIMAOESAADjEgwA9BINAAQTBgAMEwAADhMdAC0TAAAvEwsAPBMAAD4TAQBHExIAWxMKAGgTFwCBEwAAgxMCAIcTAACJEwAAixMFAJITBACYEwUAohMEAKwTAACyEwIAuhMFAMETCQDOEwMA0xMAANcTAgDbEwMA4RMSAPgTAgD8EwIAAhQCAA8UAwAXFAAAGhQBAB0UIABBFAAAQxQBAEwUAQBPFAEAUhQAAFgUAQBbFAMAYxQEAHAUAwB1FAAAdxQAAHsUAQB+FAAAgBQAAIYUAACOFAMAlBQAAJgUDwCpFBMAvxQCAMMUAQDGFAAAyRQBAM8UAgDUFAAA1hQAANoUAgDhFAEA5BQAAOYUAQDpFAAA7xQAAPEUAwABFQEABBUPABUVBQAiFQAAJxUDACwVAAAvFQsAPBUAAD4VAABAFQQARhUaAGQVAgBpFQ8AehUBAH0VBACEFQMAihUIAJUVAACZFQEAnRUBAKMVAACnFRMAvBUCAMMVDgDTFQQA2xULAOgVBwD0FQAA+BUAAPoVAQD9FQIAARYDAAYWCQAYFgQAIBYAACIWAwAoFgEAKxYBAC8WAgA0FgAAORYCAD4WBABEFgkATxYEAFUWBAA="}],["polars_io",{"t":"KFFKKKNNECNNNNNNNNNNCCNNNNNNNNNONNNNNNNNCMMNNNNNNCONNNNCCCOCMMMOCCCCCCONNNNNNNNONNCNNMGFFGPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFIFNNNNNNNOHNNNNNNNNNNNNNNNNNONNNNNNNNNNHNNNNNNNNNNNHCONONNNNNNNNNNNNNNNNPPPGPPPPGPPPPPPPPFGPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCPPFGGFFFPPPGFPPNNNNNNNNNNNNNNNNNNNNNNNNCONNNNNNNNNNNNNNNOOHHONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNONNNNNOEONNNNNNNNNNNNNNNNNONOOONNNNNNOOOOOOOOOOCOONNNNNOONNNNNONNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPGPFPPFPPPPPPPPPPPPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNOOOFNNNNNNNNNNHNNNNHHNNNNNNNNNPFFFPPPGFNNNONNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNONONNNNNNNNNNOONNOOOONNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNJJFNNNNNNHNHNNNNNNNNNFGFFFFFFFFFPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFPGPFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPKPGNNNNNNNNNNNNNNNNNCHFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCCFIFNNNNNNNNNOONNNNHONNNNNNNNNNNNNOOOOOOONONNNNNNNNONNPFPPGFFFPPNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNPPPGNNHNNNNNNNHNHNNNNFPFPFPPGFFIPFPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONOONNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHJHHHHHHKFNNNNNNNNHNNMNNNNHNNHFFKKNNHNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNMNNNNNNNMNNNNNNNNNNNNNNNKKEMMMMNNNEJJJJSCCHHHCKPGGPFPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNMNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPGPPNNNNNNNNNHNNNNPPPGNNNNNNNNNHNNNNN","n":["ArrowReader","HiveOptions","RowIndex","SerReader","SerWriter","WriteDataFrameToFile","__clone_box","","async_glob","avro","borrow","","borrow_mut","","clone","","clone_into","","clone_to_uninit","","cloud","csv","default","deref","","deref_mut","","deserialize","","drop","","enabled","eq","","equivalent","","","","","","file_cache","finish","","fmt","","from","","hash","","hive","hive_start_idx","init","","into","","ipc","json","mmap","name","ndjson","new","","next_record_batch","offset","parquet","partition","path_utils","pl_async","predicates","prelude","schema","serialize","","to_owned","","try_from","","try_into","","try_parse_dates","type_id","","utils","vzip","","write_df_to_file","AvroCompression","AvroReader","AvroWriter","Compression","Deflate","","Snappy","","__clone_box","arrow_schema","borrow","","","borrow_mut","","","clone","clone_into","clone_to_uninit","deref","","","deref_mut","","","drop","","","eq","equivalent","","","finish","","fmt","from","","","hash","init","","","into","","","new","","schema","set_rechunk","to_owned","try_from","","","try_into","","","type_id","","","vzip","","","with_columns","with_compression","with_n_rows","with_name","with_projection","CloudLocation","CloudWriter","ObjectStorePath","PolarsObjectStore","__clone_box","borrow","","","borrow_mut","","","bucket","build_object_store","clone","clone_into","clone_to_uninit","default","deref","","","deref_mut","","","download","drop","","","","eq","execute","expansion","flush","fmt","","from","","","from_url","get","get_range","get_ranges","glob","head","init","","","into","","","new","","","new_with_object_store","object_path_from_str","options","prefix","queue","scheme","sync_update","to_owned","try_from","","","try_into","","","type_id","","","vzip","","","write","write_varint","AccessKey","AccessKeyId","AccountName","AmazonS3ConfigKey","ApplicationCredentials","AuthorityId","Aws","Azure","AzureConfigKey","Bucket","","Checksum","Client","","","ClientId","ClientSecret","CloudOptions","CloudType","ConditionalPut","ContainerCredentialsRelativeUri","ContainerName","CopyIfNotExists","DefaultRegion","DisableTagging","","Encryption","Endpoint","","FederatedTokenFile","File","Gcp","GoogleConfigKey","Hf","Http","ImdsV1Fallback","MetadataEndpoint","MsiEndpoint","MsiResourceId","ObjectId","Region","S3Express","SasKey","SecretAccessKey","ServiceAccount","ServiceAccountKey","SkipSignature","","Token","","UnsignedPayload","UseAzureCli","UseEmulator","UseFabricEndpoint","VirtualHostedStyleRequest","__clone_box","","","","as_ref","","","borrow","","","","","borrow_mut","","","","","build_aws","build_azure","build_gcp","build_http","clone","","","","clone_into","","","","clone_to_uninit","","","","default","deref","","","","","deref_mut","","","","","deserialize","","","","drop","","","","","eq","","","","","equivalent","","","","","","","","","","","","file_cache_ttl","fmt","","","","from","","","","","from_str","","","","from_untyped_config","hash","","","","init","","","","","into","","","","","max_retries","serialize","","","","to_owned","","","","try_from","","","","","try_into","","","","","type_id","","","","","vzip","","","","","with_aws","with_azure","with_gcp","with_max_retries","read","write","AllColumns","AllColumnsSingle","BatchedCsvReader","CommentPrefix","CsvEncoding","CsvParseOptions","CsvReadOptions","CsvReader","LossyUtf8","Multi","Named","NullValues","OwnedBatchedCsvReader","Single","Utf8","__clone_box","","","","","_with_predicate","batched","batched_borrowed","borrow","","","","","","","","borrow_mut","","","","","","","","buffer","chunk_size","clone","","","","","clone_into","","","","","clone_to_uninit","","","","","columns","comment_prefix","count_rows","count_rows_from_slice","decimal_comma","default","","","deref","","","","","","","","deref_mut","","","","","","","","deserialize","","","","","drop","","","","","","","","dtype_overwrite","encoding","eol_char","eq","","","","","equivalent","","","","","","","","","","","","","","","fields_to_cast","finish","fmt","","","","","from","","","","","","","","","get_parse_options","has_header","hash","","","","","ignore_errors","infer_file_schema","infer_schema_length","init","","","","","","","","into","","","","","","","","into_reader_with_file_handle","low_memory","map_parse_options","missing_is_null","n_rows","n_threads","new","new_from_str","new_multi","new_single","next_batches","","null_values","parse_options","path","projection","quote_char","raise_if_empty","rechunk","row_index","sample_size","schema","schema_inference","schema_overwrite","separator","serialize","","","","","skip_rows","skip_rows_after_header","to_owned","","","","","truncate_ragged_lines","try_from","","","","","","","","try_into","","","","","","","","try_into_reader_with_file_path","try_parse_dates","type_id","","","","","","","","update_with_inference_result","vzip","","","","","","","","with_chunk_size","with_columns","with_comment_prefix","with_decimal_comma","with_dtype_overwrite","with_encoding","with_eol_char","with_has_header","with_ignore_errors","with_infer_schema_length","with_low_memory","with_missing_is_null","with_n_rows","with_n_threads","with_null_values","with_parse_options","with_path","with_projection","with_quote_char","with_raise_if_empty","with_rechunk","with_row_index","with_sample_size","with_schema","with_schema_overwrite","with_separator","with_skip_rows","with_skip_rows_after_header","with_truncate_ragged_lines","with_try_parse_dates","Boolean","Buffer","Categorical","CategoricalField","Date","Datetime","DatetimeField","DecimalFloat32","DecimalFloat64","Float32","Float64","Int16","Int32","Int64","Int8","UInt16","UInt32","UInt64","UInt8","Utf8","Utf8Field","add","add_null","borrow","","","","borrow_mut","","","","deref","","","","deref_mut","","","","drop","","","","dtype","from","","","","init","","","","init_buffers","into","","","","into_series","try_from","","","","try_into","","","","type_id","","","","vzip","","","","buf","time_unit","time_zone","SchemaInferenceResult","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","finish_infer_field_schema","fmt","from","get_estimated_n_rows","get_inferred_schema","infer_field_schema","infer_file_schema","init","into","to_owned","try_from","try_from_reader_bytes_and_options","try_into","type_id","vzip","with_inferred_schema","Always","BatchedWriter","CsvWriter","CsvWriterOptions","Necessary","Never","NonNumeric","QuoteStyle","SerializeOptions","__clone_box","","","batch_size","batched","borrow","","","","","borrow_mut","","","","","clone","","","clone_into","","","clone_to_uninit","","","date_format","datetime_format","default","","","deref","","","","","deref_mut","","","","","deserialize","","","drop","","","","","eq","","","equivalent","","","","","","","","","finish","","float_precision","float_scientific","fmt","","","from","","","","","hash","","","include_bom","","include_header","","init","","","","","into","","","","","line_terminator","maintain_order","n_threads","new","null","quote_char","quote_style","separator","serialize","","","serialize_options","time_format","to_owned","","","try_from","","","","","try_into","","","","","type_id","","","","","vzip","","","","","with_batch_size","with_date_format","with_datetime_format","with_float_precision","with_float_scientific","with_line_terminator","with_null_value","with_quote_char","with_quote_style","with_separator","with_time_format","write_batch","FILE_CACHE","FILE_CACHE_PREFIX","FileCacheEntry","borrow","borrow_mut","deref","deref_mut","drop","from","get_env_file_cache_ttl","init","init_entries_from_uri_list","into","try_from","try_into","try_open_assume_latest","try_open_check_latest","type_id","update_ttl","uri","vzip","BatchedWriter","IpcCompression","IpcReadOptions","IpcReader","IpcReaderAsync","IpcScanOptions","IpcStreamReader","IpcStreamWriter","IpcStreamWriterOption","IpcWriter","IpcWriterOptions","LZ4","ZSTD","__clone_box","","","","arrow_schema","batched","batched_async","borrow","","","","","","","","","","","borrow_mut","","","","","","","","","","","clone","","","","clone_into","","","","clone_to_uninit","","","","compression","count_rows","data","default","","","","deref","","","","","","","","","","","deref_mut","","","","","","","","","","","deserialize","","","drop","","","","","","","","","","","eq","","","equivalent","","","","","","finish","","","","","finish_with_scan_ops","fmt","","","from","","","","","","","","","","","from_uri","hash","","","init","","","","","","","","","","","into","","","","","","","","","","","maintain_order","memory_mapped","metadata","new","","","","","new_async","schema","","serialize","","","set_rechunk","","to_owned","","","","to_writer","try_from","","","","","","","","","","","try_into","","","","","","","","","","","type_id","","","","","","","","","","","vzip","","","","","","","","","","","with_columns","","with_compat_level","","with_compression","","","with_extension","with_hive_partition_columns","with_include_file_path","with_n_rows","","with_predicate","with_projection","","","with_row_index","","","with_row_limit","write_batch","write_df_to_file","BatchedWriter","Json","JsonFormat","JsonLines","JsonReader","JsonWriter","JsonWriterOptions","__clone_box","borrow","","","","","borrow_mut","","","","","clone","clone_into","clone_to_uninit","default","deref","","","","","deref_mut","","","","","deserialize","drop","","","","","eq","equivalent","","","finish","","fmt","from","","","","","hash","infer_schema_len","init","","","","","into","","","","","maintain_order","new","","","remove_bom","serialize","set_rechunk","to_owned","try_from","","","","","try_into","","","","","type_id","","","","","vzip","","","","","with_batch_size","with_ignore_errors","with_json_format","","with_projection","with_schema","with_schema_overwrite","write_batch","Borrowed","Mapped","MmapBytesReader","Owned","ReaderBytes","borrow","borrow_mut","deref","","deref_mut","drop","from","","init","into","into_mem_slice","to_bytes","to_file","try_from","try_into","type_id","vzip","core","infer_schema","JsonLineReader","StructArray","__clone_box","_split_at_unchecked","arced","arr_from_iter","","arr_from_iter_with_dtype","","as_any","as_any_mut","borrow","","borrow_mut","","boxed","check_bound","clone","clone_into","clone_to_uninit","count","deref","","deref_mut","","drop","","dtype","eq","","fields","finish","fmt","from","","","","from_path","full_null","get_fields","infer_schema_len","init","","into","","into_data","into_iter","iter","len","low_memory","new","","new_empty","new_null","propagate_nulls","set_validity","slice","","slice_typed","slice_typed_unchecked","slice_unchecked","","sliced","sliced_unchecked","split_at_boxed","split_at_boxed_unchecked","take_validity","to_boxed","to_owned","tot_eq_kernel","tot_eq_kernel_broadcast","tot_ne_kernel","tot_ne_kernel_broadcast","try_arr_from_iter","","try_arr_from_iter_with_dtype","","try_from","","try_into","","try_new","type_id","","validity","","values","values_iter","vzip","","with_chunk_size","with_ignore_errors","with_n_rows","with_n_threads","with_path","with_predicate","with_projection","with_rechunk","with_row_index","with_schema","with_schema_overwrite","with_validity","","with_validity_typed","metadata","read","write","FileMetadata","FileMetadataRef","ParquetStatistics","__clone_box","borrow","","borrow_mut","","clone","clone_into","clone_to_uninit","column_order","column_orders","created_by","deref","","deref_mut","","deserialize","distinct_count","drop","","eq","fmt","","from","","","init","","into","","key_value_metadata","","max_row_group_height","max_value","min_value","null_count","num_rows","row_groups","schema","schema_descr","to_owned","try_from","","try_from_thrift","try_into","","type_id","","version","vzip","","Auto","BatchedParquetReader","Columns","None","ParallelStrategy","ParquetAsyncReader","ParquetOptions","ParquetReader","Prefiltered","RowGroups","__clone_box","","_internal","batched","","borrow","","","","","borrow_mut","","","","","check_schema","","clone","","clone_into","","clone_to_uninit","","default","deref","","","","","deref_mut","","","","","deserialize","","drop","","","","","eq","","equivalent","","","","","","finish","","finishes_this_batch","fmt","","from","","","","","from_uri","get_metadata","","hash","","init","","","","","into","","","","","is_finished","iter","low_memory","materialize_empty_df","new","","next_batches","num_rows","","parallel","read_parallel","","schema","","","serialize","","set_low_memory","set_rechunk","","to_owned","","try_from","","","","","try_into","","","","","type_id","","","","","use_statistics","","","vzip","","","","","with_columns","with_hive_partition_columns","","with_include_file_path","","with_predicate","","with_projection","","with_row_index","","with_slice","","Auto","Post","Pre","PrefilterMaskSetting","borrow","borrow_mut","calc_prefilter_cost","deref","deref_mut","drop","from","init","init_from_env","into","read_this_row_group","should_prefilter","to_deserializer","try_from","try_into","type_id","vzip","BatchedWriter","Brotli","BrotliLevel","Gzip","GzipLevel","Lz4Raw","Lzo","ParquetCompression","ParquetWriteOptions","ParquetWriter","RowGroupIterColumns","Snappy","StatisticsOptions","Uncompressed","Zstd","ZstdLevel","__clone_box","","","","","","batched","borrow","","","","","","","","borrow_mut","","","","","","","","clone","","","","","","clone_into","","","","","","clone_to_uninit","","","","","","compression","data_page_size","default","","","deref","","","","","","","","deref_mut","","","","","","","","deserialize","","","","","","distinct_count","drop","","","","","","","","empty","encode_and_compress","eq","","","","","","equivalent","","","","","","","","","","","","","","","","","","finish","","fmt","","","","","","from","","","","","","","","full","get_writer","hash","","","","","","init","","","","","","","","into","","","","","","","","is_empty","is_full","maintain_order","max_value","min_value","new","null_count","row_group_size","serialize","","","","","","set_parallel","statistics","to_owned","","","","","","to_writer","try_from","","","","","","","","try_into","","","","","","","","try_new","","","type_id","","","","","","","","vzip","","","","","","","","with_compression","with_data_page_size","with_row_group_size","with_statistics","write_batch","write_df_to_file","write_row_groups","write_partitioned_dataset","POLARS_TEMP_DIR_BASE_PATH","expand_paths","expand_paths_hive","expanded_from_single_directory","get_glob_start_idx","is_cloud_url","resolve_homedir","GetSize","RuntimeManager","block_on","block_on_potential_spawn","borrow","borrow_mut","deref","deref_mut","drop","from","get_runtime","init","into","size","spawn","spawn_blocking","try_from","try_into","tune_with_concurrency_budget","type_id","vzip","with_concurrency_budget","BatchStats","ColumnStats","PhysicalIoExpr","StatsEvaluator","__clone_box","","apply_predicate","as_stats_evaluator","borrow","","borrow_mut","","clone","","clone_into","","clone_to_uninit","","column_stats","deref","","deref_mut","","deserialize","","drop","","dtype","evaluate_io","field_name","fmt","","from","","from_column_literal","from_field","get_max_state","get_min_state","get_null_count_state","get_stats","init","","into","","live_variables","new","","null_count","num_rows","schema","serialize","","should_read","take_indices","to_max","to_min","to_min_max","to_owned","","try_from","","try_into","","type_id","","vzip","","with_schema","SerReader","SerWriter","cloud","finish","","new","","set_rechunk","","","write_partitioned_dataset","BOOLEAN_RE","FLOAT_RE","FLOAT_RE_DECIMAL","INTEGER_RE","URL_ENCODE_CHAR_SET","byte_source","compression","get_reader_bytes","materialize_projection","overwrite_schema","slice","ByteSource","Cloud","DynByteSource","DynByteSourceBuilder","MemSlice","MemSliceByteSource","Mmap","ObjectStore","ObjectStoreByteSource","__clone_box","borrow","","","","borrow_mut","","","","clone","clone_into","clone_to_uninit","default","deref","","","","deref_mut","","","","drop","","","","fmt","from","","","","","","","get_range","","","","get_ranges","","","","get_size","","","","init","","","","into","","","","to_owned","try_build_from_path","try_from","","","","try_into","","","","type_id","","","","variant_name","vzip","","","","GZIP","SupportedCompression","ZLIB","ZSTD","borrow","borrow_mut","check","deref","deref_mut","drop","from","init","into","maybe_decompress_bytes","try_from","try_into","type_id","vzip","After","Before","Overlapping","SplitSlicePosition","borrow","borrow_mut","deref","deref_mut","drop","fmt","from","init","into","split_slice_at_file","","try_from","try_into","type_id","vzip"],"q":[[0,"polars_io"],[86,"polars_io::avro"],[153,"polars_io::cloud"],[227,"polars_io::cloud::options"],[414,"polars_io::csv"],[416,"polars_io::csv::read"],[677,"polars_io::csv::read::buffer"],[751,"polars_io::csv::read::buffer::Buffer"],[754,"polars_io::csv::read::schema_inference"],[781,"polars_io::csv::write"],[926,"polars_io::file_cache"],[947,"polars_io::ipc"],[1186,"polars_io::json"],[1284,"polars_io::mmap"],[1306,"polars_io::ndjson"],[1308,"polars_io::ndjson::core"],[1412,"polars_io::parquet"],[1415,"polars_io::parquet::metadata"],[1468,"polars_io::parquet::read"],[1610,"polars_io::parquet::read::_internal"],[1631,"polars_io::parquet::write"],[1855,"polars_io::partition"],[1856,"polars_io::path_utils"],[1863,"polars_io::pl_async"],[1885,"polars_io::predicates"],[1953,"polars_io::prelude"],[1964,"polars_io::utils"],[1975,"polars_io::utils::byte_source"],[2056,"polars_io::utils::compression"],[2074,"polars_io::utils::slice"],[2093,"dyn_clone::sealed"],[2094,"polars_io::options"],[2095,"core::result"],[2096,"serde::de"],[2097,"polars_io::shared"],[2098,"polars_core::frame"],[2099,"polars_error"],[2100,"core::fmt"],[2101,"core::hash"],[2102,"std::io"],[2103,"polars_arrow::record_batch"],[2104,"core::option"],[2105,"serde::ser"],[2106,"core::any"],[2107,"polars_io::avro::read"],[2108,"polars_arrow::datatypes::schema"],[2109,"polars_io::avro::write"],[2110,"polars_core::schema"],[2111,"alloc::string"],[2112,"alloc::vec"],[2113,"polars_io::cloud::glob"],[2114,"object_store"],[2115,"alloc::sync"],[2116,"polars_io::cloud::polars_object_store"],[2117,"object_store::path"],[2118,"tokio::io::async_write"],[2119,"core::marker"],[2120,"polars_io::cloud::adaptors"],[2121,"std::io::error"],[2122,"crossterm::command"],[2123,"url"],[2124,"bytes::bytes"],[2125,"core::ops::range"],[2126,"core::ops::function"],[2127,"parquet_format_safe::thrift::varint::decode"],[2128,"object_store::aws::builder"],[2129,"object_store::azure::builder"],[2130,"object_store::gcp::builder"],[2131,"core::convert"],[2132,"core::iter::traits::collect"],[2133,"polars_io::csv::read::reader"],[2134,"alloc::boxed"],[2135,"polars_io::csv::read::read_impl::batched"],[2136,"polars_io::csv::read::options"],[2137,"std::path"],[2138,"polars_utils::pl_str"],[2139,"std::fs"],[2140,"polars_core::datatypes::dtype"],[2141,"polars_core::series"],[2142,"polars_utils::aliases"],[2143,"polars_io::csv::write::writer"],[2144,"polars_io::csv::write::options"],[2145,"core::num::nonzero"],[2146,"polars_io::file_cache::entry"],[2147,"polars_io::ipc::ipc_stream"],[2148,"polars_io::ipc::write"],[2149,"futures_io::if_std"],[2150,"polars_io::ipc::ipc_file"],[2151,"polars_io::ipc::ipc_reader_async"],[2152,"polars_arrow::io::ipc::read::file"],[2153,"polars_utils::mmap::private"],[2154,"polars_arrow::array::struct_"],[2155,"polars_arrow::array"],[2156,"polars_arrow::datatypes"],[2157,"polars_arrow::datatypes::field"],[2158,"polars_arrow::array::growable::structure"],[2159,"polars_arrow::array::struct_::mutable"],[2160,"polars_arrow::bitmap::immutable"],[2161,"polars_arrow::scalar"],[2162,"polars_arrow::array::struct_::iterator"],[2163,"polars_arrow::bitmap::utils::iterator"],[2164,"polars_arrow::bitmap::utils::zip_validity"],[2165,"polars_parquet::parquet::metadata::file_metadata"],[2166,"polars_parquet::parquet::metadata::column_order"],[2167,"polars_parquet::parquet::metadata::column_chunk_metadata"],[2168,"core::iter::traits::exact_size"],[2169,"polars_parquet::arrow::read::statistics"],[2170,"parquet_format_safe::parquet_format"],[2171,"polars_parquet::parquet::metadata::schema_descriptor"],[2172,"polars_parquet::parquet::error"],[2173,"polars_io::parquet::read::reader"],[2174,"polars_io::parquet::read::read_impl"],[2175,"polars_io::parquet::read::options"],[2176,"polars_parquet::parquet::metadata::row_metadata"],[2177,"polars_parquet::arrow::read::deserialize::utils::filter"],[2178,"polars_io::parquet::write::writer"],[2179,"polars_io::parquet::write::batched_writer"],[2180,"polars_io::parquet::write::options"],[2181,"polars_parquet::arrow::write"],[2182,"polars_parquet::parquet::write"],[2183,"core::iter::traits::iterator"],[2184,"polars_parquet::arrow::write::file"],[2185,"std::sync::mutex"],[2186,"core::future::future"],[2187,"tokio::runtime::task::join"],[2188,"polars_core::datatypes::field"],[2189,"avro_schema::file"],[2190,"polars_io::cloud::object_store_setup"],[2191,"polars_io::csv::read::parser"],[2192,"polars_io::file_cache::cache"],[2193,"polars_io::file_cache::utils"],[2194,"polars_io::parquet::read::utils"],[2195,"polars_io::parquet::read::predicates"],[2196,"polars_io::parquet::read::mmap"],[2197,"polars_io::utils::other"]],"i":"``````jl``1010101010``010101010010111000`AfAl323232`23232```3`10Bh4``````343434343343`43Cb````Cj0000Cd0Cl2102222102102102222210210221021021011210210210210210101````EbEjDj21020`2220102102211020101021020222`21021021021``0101210210210210211GfGd1`Gh2Gj0`21223133``2232223223300`00223332232112323233322Dh4234230142301420000304230423042030142301423042301423014233300044422203042301423142030423014230142030423042301423014230142301420000``Ij0``````IfIh2``01IbId324Hd00I`Hn24365710243657`443657436574365743``34361024365710243657436571024365743343657444333666555777424365710243655744436574`410243657102436574443442555103444344444`43436574443657310243657102436574310243657410243657443343344443443444344444434433Jj`0`00`0000000000000`00AGdAGfAGh32103210321032103321032103`210332103210321032103AGj00`Jf000000000`0000``000000000Kj```000``KfKh21Kb0Kd324103243243243242232410324103243241032432433322244410223241032432413131032410324231122223243232410324103241032410324111111111110```L`00000`0`000000000```````````Mb0LlLnM`3LbLd0MlMd3MnMj4Lf987:4362150987:987:987:987:733187:4362150987:4362150987:97:4362150987:97:777:::46250497:4362150987:397:4362150987:4362150987:7434621554697:46987:74362150987:4362150987:4362150987:4362150987:4625215144468468468807`Nl`0```Nd1NfNjNh342103333342103421033421033333203421033042103421033210`3034210342103421034210300200001K`0`0`00000000000Hh01111````Ob00000000Oj10111111001010111110101110110010111110011111111111111111111111111010110111110100000000000111``````A@nAAb1011111110101`0010010010101111000111110110101101ABj`00````00ABh1`ABbABfABd21340213421343434402134021343402134343334442103402134121340213402134003`020213210213422134021340213402134213021342212121212121AC`00`00`0000000`0`0000`ACl`0`00````0`00`ACj1ACnAD`ADbADdACfACh16754320167543267543267543267543266672016754320167543267543220167543220675432666777555444333222016754320167543220675432016754320167543222622126675432166754326016754320167543254301675432016754321111060``````````AEd0000000`00AEh1111`11`````AEnAF``Hf21212121211212121212022121222221212102121121AEl233332323232322```AfAl10111`````````````AFh``0`AFf0`0AFjAFl321032222310321032103221033332AFn21402140214214321433321432143214342143AG``00000000000`0000AGb00`000000000`00000","f":"``````{{bd}f}0``{b{{b{c}}}{}}0{{{b{h}}}{{b{hc}}}{}}0{{{b{j}}}j}{{{b{l}}}l}{{b{b{hc}}}f{}}0{bf}0``{{}l}{n{{b{c}}}{}}0{n{{b{hc}}}{}}0{c{{A`{j}}}Ab}{c{{A`{l}}}Ab}{nf}0`{{{b{j}}{b{j}}}Ad}{{{b{l}}{b{l}}}Ad}{{b{b{c}}}Ad{}}00000`{Af{{Aj{Ah}}}}{{{b{hAl}}{b{hAh}}}{{Aj{f}}}}{{{b{j}}{b{hAn}}}B`}{{{b{l}}{b{hAn}}}B`}{cc{}}0{{{b{j}}{b{hc}}}fBb}{{{b{l}}{b{hc}}}fBb}``{{}n}0{{}c{}}0`````{cAfBd}{cAlBf}{{{b{hBh}}}{{Aj{{Bl{Bj}}}}}}````````{{{b{j}}c}A`Bn}{{{b{l}}c}A`Bn}{bc{}}0{c{{A`{e}}}{}{}}0{{}{{A`{c}}}{}}0`{bC`}0`99{{{b{Cb}}Ahc}{{Aj{f}}}Bf}````````{{bd}f}{{{b{h{Cd{c}}}}}{{Aj{Cf}}}{BdCh}}{b{{b{c}}}{}}00{{{b{h}}}{{b{hc}}}{}}00{{{b{Cj}}}Cj}{{b{b{hc}}}f{}}{bf}{n{{b{c}}}{}}00{n{{b{hc}}}{}}00{nf}00{{{b{Cj}}{b{Cj}}}Ad}{{b{b{c}}}Ad{}}00{{{Cd{c}}}{{Aj{Ah}}}{BdCh}}{{{b{h{Cl{c}}}}{b{hAh}}}{{Aj{f}}}Bf}{{{b{Cj}}{b{hAn}}}{{A`{fCn}}}}{cc{}}00{{{b{Cj}}{b{hc}}}fBb}{{}n}00{{}c{}}00{c{{Cd{c}}}{BdCh}}{c{{Cl{c}}}Bf}{{{b{h{Cd{c}}}}}{{Aj{D`}}}{BdCh}}{{{Cd{c}}Ad}{{Cd{c}}}{BdCh}}{bc{}}{c{{A`{e}}}{}{}}00{{}{{A`{c}}}{}}00{bC`}00888{{{Cd{c}}{Bl{{Dd{Db}}}}}{{Cd{c}}}{BdCh}}{{{Cl{c}}{Bl{Cj}}}{{Cl{c}}}Bf}{{{Cd{c}}{Bl{n}}}{{Cd{c}}}{BdCh}}{{{Cl{c}}Db}{{Cl{c}}}Bf}{{{Cd{c}}{Bl{{Dd{n}}}}}{{Cd{c}}}{BdCh}}````{{bd}f}{b{{b{c}}}{}}00{{{b{h}}}{{b{hc}}}{}}00`{{{b{Df}}{Bl{{b{Dh}}}}Ad}{{Aj{{E`{Dj{Dn{Dl}}}}}}}}{{{b{Eb}}}Eb}{{b{b{hc}}}f{}}{bf}{{}Dj}{n{{b{c}}}{}}00{n{{b{hc}}}{}}00{{{b{Eb}}{b{Ed}}{b{hc}}}{{Aj{f}}}{EfEh}}{{{b{hEj}}}f}{nf}00{{{b{Dj}}{b{Dj}}}Ad}{{{b{h}}c}{{A`{{b{he}}El}}}En{}}`{{{b{hEj}}}{{F`{f}}}}{{{b{Dj}}{b{hAn}}}B`}{{{b{Eb}}{b{hAn}}}B`}{cc{}}00{{{b{Fb}}Ad}{{Aj{Dj}}}}{{{b{Eb}}{b{Ed}}}{{Aj{Fd}}}}{{{b{Eb}}{b{Ed}}{Ff{n}}}{{Aj{Fd}}}}{{{b{Eb}}{b{Ed}}{b{{Fh{{Ff{n}}}}}}}{{Aj{{Dd{Fd}}}}}}{{{b{Df}}{Bl{{b{Dh}}}}}{{Aj{{Dd{Db}}}}}}{{{b{Eb}}{b{Ed}}}{{Aj{Fj}}}}{{}n}00{{}c{}}00{{{b{Df}}{Bl{{b{Dh}}}}}{{Aj{Ej}}}}{{{b{Df}}Ad}{{Aj{Dj}}}}{{{Dn{Dl}}}Eb}{{{Dn{Dl}}Ed}{{Aj{Ej}}}}{{{b{Df}}}{{Aj{Ed}}}}``{{{b{h}}c}{{A`{{b{he}}El}}}En{}}`{{{b{h}}g}{{A`{eEl}}}{}{}{{Fn{{b{hc}}}{{Fl{e}}}}}}{bc{}}{c{{A`{e}}}{}{}}00{{}{{A`{c}}}{}}00{bC`}00;;;{{{b{hEj}}{b{{Fh{G`}}}}}{{F`{n}}}}{{{b{h}}c}{{A`{nEl}}}Gb}```````````````````````````````````````````````````````{{bd}f}000{{{b{Gd}}}{{b{Df}}}}{{{b{Gf}}}{{b{Df}}}}{{{b{Gh}}}{{b{Df}}}}{b{{b{c}}}{}}0000{{{b{h}}}{{b{hc}}}{}}0000{{{b{Dh}}{b{Df}}}{{Aj{{`{Dl}}}}}}000{{{b{Gd}}}Gd}{{{b{Dh}}}Dh}{{{b{Gf}}}Gf}{{{b{Gh}}}Gh}{{b{b{hc}}}f{}}000{bf}000{{}Dh}{n{{b{c}}}{}}0000{n{{b{hc}}}{}}0000{c{{A`{Gd}}}Ab}{c{{A`{Dh}}}Ab}{c{{A`{Gf}}}Ab}{c{{A`{Gh}}}Ab}{nf}0000{{{b{Gd}}{b{Gd}}}Ad}{{{b{Dh}}{b{Dh}}}Ad}{{{b{Gj}}{b{Gj}}}Ad}{{{b{Gf}}{b{Gf}}}Ad}{{{b{Gh}}{b{Gh}}}Ad}{{b{b{c}}}Ad{}}00000000000`{{{b{Gd}}{b{hAn}}}{{A`{fCn}}}}{{{b{Dh}}{b{hAn}}}B`}{{{b{Gf}}{b{hAn}}}{{A`{fCn}}}}{{{b{Gh}}{b{hAn}}}{{A`{fCn}}}}{cc{}}0000{{{b{Df}}}{{A`{Gd}}}}{{{b{Df}}}{{A`{Gjc}}}{}}{{{b{Df}}}{{A`{Gf}}}}{{{b{Df}}}{{A`{Gh}}}}{{{b{Df}}g}{{Aj{Dh}}}{{Gl{Df}}}{{Gn{Db}}}{{Hb{}{{H`{{E`{ce}}}}}}}}{{{b{Gd}}{b{hc}}}fBb}{{{b{Dh}}{b{hc}}}fBb}{{{b{Gf}}{b{hc}}}fBb}{{{b{Gh}}{b{hc}}}fBb}{{}n}0000{{}c{}}0000`{{{b{Gd}}c}A`Bn}{{{b{Dh}}c}A`Bn}{{{b{Gf}}c}A`Bn}{{{b{Gh}}c}A`Bn}{bc{}}000{c{{A`{e}}}{}{}}0000{{}{{A`{c}}}{}}0000{bC`}000088888{{Dhe}Dh{{Gn{Db}}}{{Hb{}{{H`{{E`{Gdc}}}}}}}}{{Dhe}Dh{{Gn{Db}}}{{Hb{}{{H`{{E`{Gfc}}}}}}}}{{Dhe}Dh{{Gn{Db}}}{{Hb{}{{H`{{E`{Ghc}}}}}}}}{{Dhn}Dh}`````````````````{{bd}f}0000{{{Hd{c}}{Bl{{Dn{Hf}}}}}{{Hd{c}}}Hh}{{{Hd{{Hj{Hh}}}}{Bl{Hl}}}{{Aj{Hn}}}}{{{b{h{Hd{c}}}}}{{Aj{I`}}}Hh}{b{{b{c}}}{}}0000000{{{b{h}}}{{b{hc}}}{}}0000000``{{{b{Ib}}}Ib}{{{b{Id}}}Id}{{{b{If}}}If}{{{b{Ih}}}Ih}{{{b{Ij}}}Ij}{{b{b{hc}}}f{}}0000{bf}0000``{{{b{Il}}G`{Bl{G`}}{Bl{{b{Ih}}}}G`Ad}{{Aj{n}}}}{{{b{{Fh{G`}}}}G`{Bl{G`}}{Bl{{b{Ih}}}}G`Ad}{{Aj{n}}}}`{{}Ib}{{}Id}{{}If}{n{{b{c}}}{}}0000000{n{{b{hc}}}{}}0000000{c{{A`{Ib}}}Ab}{c{{A`{Id}}}Ab}{c{{A`{If}}}Ab}{c{{A`{Ih}}}Ab}{c{{A`{Ij}}}Ab}{nf}0000000```{{{b{Ib}}{b{Ib}}}Ad}{{{b{Id}}{b{Id}}}Ad}{{{b{If}}{b{If}}}Ad}{{{b{Ih}}{b{Ih}}}Ad}{{{b{Ij}}{b{Ij}}}Ad}{{b{b{c}}}Ad{}}00000000000000`{{{Hd{c}}}{{Aj{Ah}}}Hh}{{{b{Ib}}{b{hAn}}}B`}{{{b{Id}}{b{hAn}}}B`}{{{b{If}}{b{hAn}}}B`}{{{b{Ih}}{b{hAn}}}B`}{{{b{Ij}}{b{hAn}}}B`}{cc{}}000000{{{b{Df}}}Ih}1{{{b{Ib}}}{{Dn{Id}}}}`{{{b{Ib}}{b{hc}}}fBb}{{{b{Id}}{b{hc}}}fBb}{{{b{If}}{b{hc}}}fBb}{{{b{Ih}}{b{hc}}}fBb}{{{b{Ij}}{b{hc}}}fBb}```{{}n}0000000{{}c{}}0000000{{Ibc}{{Hd{c}}}Hh}`{{Ibc}Ib{{In{Id}{{Fl{Id}}}}}}```{c{{Hd{c}}}Hh};{J`Ih}{G`Ih}{{{b{hI`}}n}{{Aj{{Bl{{Dd{Ah}}}}}}}}{{{b{hHn}}n}{{Aj{{Bl{{Dd{Ah}}}}}}}}`````````````{{{b{Ib}}c}A`Bn}{{{b{Id}}c}A`Bn}{{{b{If}}c}A`Bn}{{{b{Ih}}c}A`Bn}{{{b{Ij}}c}A`Bn}``{bc{}}0000`{c{{A`{e}}}{}{}}0000000{{}{{A`{c}}}{}}0000000{{Ib{Bl{Jb}}}{{Aj{{Hd{Jd}}}}}}`{bC`}0000000{{{b{hIb}}{b{Jf}}}f}{{}c{}}0000000{{Ibn}Ib}{{Ib{Bl{{Dn{{Fh{J`}}}}}}}Ib}{{Id{Bl{c}}}Id{{Gn{Ih}}}}{{IdAd}Id}{{Ib{Bl{{Dn{{Dd{Jh}}}}}}}Ib}{{IdIf}Id}{{IdG`}Id}{{IbAd}Ib}0{{Ib{Bl{n}}}Ib}1500{{Id{Bl{Ij}}}Id}{{IbId}Ib}{{Ib{Bl{c}}}Ib{{Gn{Jb}}}}{{Ib{Bl{{Dn{{Dd{n}}}}}}}Ib}{{Id{Bl{G`}}}Id}66{{Ib{Bl{j}}}Ib}>{{Ib{Bl{Hl}}}Ib}09??<<`````````````````````{{{b{hJj}}{b{{Fh{G`}}}}AdAdAd}{{Aj{f}}}}{{{b{hJj}}Ad}f}{b{{b{c}}}{}}000{{{b{h}}}{{b{hc}}}{}}000{n{{b{c}}}{}}000{n{{b{hc}}}{}}000{nf}000{{{b{Jj}}}Jh}{cc{}}000{{}n}000{{{b{{Fh{n}}}}n{b{D`}}{Bl{G`}}IfAd}{{Aj{{Dd{Jj}}}}}}{{}c{}}000{Jj{{Aj{Jl}}}}{c{{A`{e}}}{}{}}000{{}{{A`{c}}}{}}000{bC`}0004444````{{bd}f}>={{{b{Jf}}}Jf}{{b{b{hc}}}f{}}{bf}{{}Jf}{n{{b{c}}}{}}{n{{b{hc}}}{}}{nf}{{{b{{Jn{Jh}}}}}Jh}{{{b{Jf}}{b{hAn}}}B`}{cc{}}{{{b{Jf}}}n}{{{b{Jf}}}Hl}{{{b{Df}}AdAd}Jh}{{{b{K`}}G`{Bl{n}}Ad{Bl{{b{D`}}}}nn{Bl{{b{Ih}}}}{Bl{G`}}G`{Bl{{b{Ij}}}}AdAd{b{h{Bl{n}}}}Ad}{{Aj{{E`{D`nn}}}}}}{{}n}{{}c{}}{bc{}}{c{{A`{e}}}{}{}}{{{b{K`}}{b{Ib}}}{{Aj{Jf}}}}{{}{{A`{c}}}{}}{bC`}5{{JfHl}Jf}`````````{{bd}f}00`{{{Kb{c}}{b{D`}}}{{Aj{{Kd{c}}}}}Bf}{b{{b{c}}}{}}0000{{{b{h}}}{{b{hc}}}{}}0000{{{b{Kf}}}Kf}{{{b{Kh}}}Kh}{{{b{Kj}}}Kj}{{b{b{hc}}}f{}}00{bf}00``{{}Kf}{{}Kh}{{}Kj}{n{{b{c}}}{}}0000{n{{b{hc}}}{}}0000{c{{A`{Kf}}}Ab}{c{{A`{Kh}}}Ab}{c{{A`{Kj}}}Ab}{nf}0000{{{b{Kf}}{b{Kf}}}Ad}{{{b{Kh}}{b{Kh}}}Ad}{{{b{Kj}}{b{Kj}}}Ad}{{b{b{c}}}Ad{}}00000000{{{b{h{Kb{c}}}}{b{hAh}}}{{Aj{f}}}Bf}{{{b{h{Kd{c}}}}}{{Aj{f}}}Bf}``{{{b{Kf}}{b{hAn}}}B`}{{{b{Kh}}{b{hAn}}}B`}{{{b{Kj}}{b{hAn}}}B`}{cc{}}0000{{{b{Kf}}{b{hc}}}fBb}{{{b{Kh}}{b{hc}}}fBb}{{{b{Kj}}{b{hc}}}fBb}{{{Kb{c}}Ad}{{Kb{c}}}Bf}`0`{{}n}0000{{}c{}}0000``{{{Kb{c}}n}{{Kb{c}}}Bf}{c{{Kb{c}}}Bf}````{{{b{Kf}}c}A`Bn}{{{b{Kh}}c}A`Bn}{{{b{Kj}}c}A`Bn}``{bc{}}00{c{{A`{e}}}{}{}}0000{{}{{A`{c}}}{}}0000{bC`}000099999{{{Kb{c}}Kl}{{Kb{c}}}Bf}{{{Kb{c}}{Bl{Db}}}{{Kb{c}}}Bf}0{{{Kb{c}}{Bl{n}}}{{Kb{c}}}Bf}{{{Kb{c}}{Bl{Ad}}}{{Kb{c}}}Bf}{{{Kb{c}}Db}{{Kb{c}}}Bf}0{{{Kb{c}}G`}{{Kb{c}}}Bf}{{{Kb{c}}Kj}{{Kb{c}}}Bf}15{{{b{h{Kd{c}}}}{b{Ah}}}{{Aj{f}}}Bf}```{b{{b{c}}}{}}{{{b{h}}}{{b{hc}}}{}}{n{{b{c}}}{}}{n{{b{hc}}}{}}{nf}{cc{}}{{}Kn}{{}n}{{{b{{Fh{{Dn{Df}}}}}}{Bl{{b{Dh}}}}}{{Aj{{Dd{{Dn{L`}}}}}}}}{{}c{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{{{b{L`}}}{{Aj{Jd}}}}0{bC`}{{{b{L`}}Kn}f}{{{b{L`}}}{{b{{Dn{Df}}}}}}6`````````````{{bd}f}000{{{b{h{Lb{c}}}}}{{Aj{Cf}}}Bd}{{{Ld{c}}{b{D`}}}{{Aj{{Lf{c}}}}}Bf}{{{Ld{c}}{b{D`}}}{{Aj{{`{c}}}}}{LhEhLj}}{b{{b{c}}}{}}0000000000{{{b{h}}}{{b{hc}}}{}}0000000000{{{b{Ll}}}Ll}{{{b{Ln}}}Ln}{{{b{M`}}}M`}{{{b{Mb}}}Mb}{{b{b{hc}}}f{}}000{bf}000`{{{b{Md}}{Bl{{b{Mf}}}}}{{Aj{Mh}}}}{{{b{Md}}{Bl{{b{Mf}}}}LnAd}{{Aj{Ah}}}}{{}Mj}{{}Ln}{{}M`}{{}Mb}{n{{b{c}}}{}}0000000000{n{{b{hc}}}{}}0000000000{c{{A`{Ll}}}Ab}{c{{A`{M`}}}Ab}{c{{A`{Mb}}}Ab}{nf}0000000000{{{b{Ll}}{b{Ll}}}Ad}{{{b{M`}}{b{M`}}}Ad}{{{b{Mb}}{b{Mb}}}Ad}{{b{b{c}}}Ad{}}00000{{{Ml{c}}}{{Aj{Ah}}}Hh}{{{Lb{c}}}{{Aj{Ah}}}Bd}{{{b{h{Mn{c}}}}{b{hAh}}}{{Aj{f}}}Bf}{{{b{h{Ld{c}}}}{b{hAh}}}{{Aj{f}}}Bf}{{{b{h{Lf{c}}}}}{{Aj{f}}}Bf}{{{Ml{c}}{Bl{{Dn{Hf}}}}Ad}{{Aj{Ah}}}Hh}{{{b{Ll}}{b{hAn}}}B`}{{{b{M`}}{b{hAn}}}B`}{{{b{Mb}}{b{hAn}}}B`}{cc{}}0000000000{{{b{Df}}{Bl{{b{Dh}}}}}{{Aj{Md}}}}{{{b{Ll}}{b{hc}}}fBb}{{{b{M`}}{b{hc}}}fBb}{{{b{Mb}}{b{hc}}}fBb}{{}n}0000000000{{}c{}}0000000000`{{{Ml{c}}{Bl{Jb}}}{{Ml{c}}}Hh}{{{b{Md}}}{{Aj{Mf}}}}{c{{Ml{c}}}Hh}{c{{Lb{c}}}Bd}{c{{Mn{c}}}Bf}{{}Mj}{c{{Ld{c}}}Bf}{c{{Ld{c}}}{LhEhLj}}{{{b{h{Ml{c}}}}}{{Aj{N`}}}Hh}{{{b{h{Lb{c}}}}}{{Aj{D`}}}Bd}{{{b{Ll}}c}A`Bn}{{{b{M`}}c}A`Bn}{{{b{Mb}}c}A`Bn}{{{Ml{c}}Ad}{{Ml{c}}}Hh}{{{Lb{c}}Ad}{{Lb{c}}}Bd}{bc{}}000{{{b{M`}}c}{{Ld{c}}}Bf}{c{{A`{e}}}{}{}}0000000000{{}{{A`{c}}}{}}0000000000{bC`}0000000000{{}c{}}0000000000{{{Ml{c}}{Bl{{Dd{Db}}}}}{{Ml{c}}}Hh}{{{Lb{c}}{Bl{{Dd{Db}}}}}{{Lb{c}}}Bd}{{{Mn{c}}Nb}{{Mn{c}}}{}}{{{Ld{c}}Nb}{{Ld{c}}}Bf}{{{Mn{c}}{Bl{Mb}}}{{Mn{c}}}{}}{{Mj{Bl{Mb}}}Mj}{{{Ld{c}}{Bl{Mb}}}{{Ld{c}}}Bf}{{MjJb}Mj}{{{Ml{c}}{Bl{{Dd{Jl}}}}}{{Ml{c}}}Hh}{{{Ml{c}}{Bl{{E`{J`{Dn{Df}}}}}}}{{Ml{c}}}Hh}{{{Ml{c}}{Bl{n}}}{{Ml{c}}}Hh}{{{Lb{c}}{Bl{n}}}{{Lb{c}}}Bd}{{Lnc}Ln{{Gn{{Bl{{Dn{Hf}}}}}}}}{{{Ml{c}}{Bl{{Dd{n}}}}}{{Ml{c}}}Hh}{{{Lb{c}}{Bl{{Dd{n}}}}}{{Lb{c}}}Bd}{{Ln{Bl{{Dn{{Fh{J`}}}}}}}Ln}{{{Ml{c}}{Bl{j}}}{{Ml{c}}}Hh}{{{Lb{c}}{Bl{j}}}{{Lb{c}}}Bd}{{Lnc}Ln{{Gn{{Bl{j}}}}}}{{Lnc}Ln{{Gn{{Bl{n}}}}}}{{{b{h{Lf{c}}}}{b{Ah}}}{{Aj{f}}}Bf}{{{b{M`}}Ahc}{{Aj{f}}}Bf}```````{{bd}f}{b{{b{c}}}{}}0000{{{b{h}}}{{b{hc}}}{}}0000{{{b{Nd}}}Nd}{{b{b{hc}}}f{}}{bf}{{}Nd}{n{{b{c}}}{}}0000{n{{b{hc}}}{}}0000{c{{A`{Nd}}}Ab}{nf}0000{{{b{Nd}}{b{Nd}}}Ad}{{b{b{c}}}Ad{}}00{{{b{h{Nf{c}}}}{b{hAh}}}{{Aj{f}}}Bf}{{{Nh{c}}}{{Aj{Ah}}}Hh}{{{b{Nd}}{b{hAn}}}B`}{cc{}}0000{{{b{Nd}}{b{hc}}}fBb}{{{Nh{c}}{Bl{Kl}}}{{Nh{c}}}Hh}{{}n}0000{{}c{}}0000`{c{{Nf{c}}}Bf}{c{{Nj{c}}}Bf}{c{{Nh{c}}}Hh}{{{b{{Fh{G`}}}}}{{Aj{{b{{Fh{G`}}}}}}}}{{{b{Nd}}c}A`Bn}{{{Nh{c}}Ad}{{Nh{c}}}Hh}{bc{}}{c{{A`{e}}}{}{}}0000{{}{{A`{c}}}{}}0000{bC`}0000:::::{{{Nh{c}}Kl}{{Nh{c}}}Hh}5{{{Nf{c}}Nl}{{Nf{c}}}Bf}{{{Nh{c}}Nl}{{Nh{c}}}Hh}{{{Nh{c}}{Bl{{Dd{J`}}}}}{{Nh{c}}}Hh}{{{Nh{c}}Hl}{{Nh{c}}}Hh}{{{Nh{c}}{b{D`}}}{{Nh{c}}}Hh}{{{b{h{Nj{c}}}}{b{Ah}}}{{Aj{f}}}Bf}`````{b{{b{c}}}{}}{{{b{h}}}{{b{hc}}}{}}{{{b{K`}}}{{b{{Fh{G`}}}}}}{n{{b{c}}}{}}{n{{b{hc}}}{}}{nf}{cc{}}{{{b{hc}}}K`Hh}{{}n}{{}c{}}{K`Nn}{{{b{Hh}}}{{Bl{{b{{Fh{G`}}}}}}}}{{{b{Hh}}}{{Bl{{b{Jd}}}}}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{bC`}6`{{{b{hc}}{Bl{Kl}}}{{Aj{D`}}}O`}``{{bd}f}{{{b{Ob}}n}{{E`{ObOb}}}}{Ob{{Dn{Od}}}}{cOb{{Hb{}{{H`{{Bl{f}}}}}}}}{cOb{{Hb{}{{H`{f}}}}}}{{Ofc}Ob{{Hb{}{{H`{{Bl{f}}}}}}}}{{Ofc}Ob{{Hb{}{{H`{f}}}}}}{{{b{Ob}}}{{b{Oh}}}}{{{b{hOb}}}{{b{hOh}}}}{b{{b{c}}}{}}0{{{b{h}}}{{b{hc}}}{}}0{Ob{{Hj{Od}}}}{{{b{Ob}}n}Ad}{{{b{Ob}}}Ob}{{b{b{hc}}}f{}}{bf}{{{Oj{c}}}{{Aj{n}}}Hh}{n{{b{c}}}{}}0{n{{b{hc}}}{}}0{nf}0{{{b{Ob}}}{{b{Of}}}}{{{b{Ob}}{b{{b{Od}}}}}Ad}{{{b{Ob}}{b{Ob}}}Ad}{{{b{Ob}}}{{b{{Fh{Ol}}}}}}{{{Oj{c}}}{{Aj{Ah}}}Hh}{{{b{Ob}}{b{hAn}}}{{A`{fCn}}}}{cc{}}{OnOb}{A@`Ob}2{c{{Aj{{Oj{Jd}}}}}{{Gn{Jb}}}}{{nOf}Ob}{{{b{Of}}}{{b{{Fh{Ol}}}}}}{{{Oj{c}}{Bl{Kl}}}{{Oj{c}}}Hh}{{}n}0{{}c{}}0{Ob{{E`{{Dd{Ol}}{Dd{{Hj{Od}}}}{Bl{A@b}}}}}}{{{b{Ob}}}}{{{b{Ob}}}{{A@j{{Dd{{Hj{A@d}}}}A@fA@h}}}}{{{b{Ob}}}n}{{{Oj{c}}Ad}{{Oj{c}}}Hh}{c{{Oj{c}}}Hh}{{Of{Dd{{Hj{Od}}}}{Bl{A@b}}}Ob}{OfOb}{{Ofn}Ob}{{{b{Ob}}}Ob}{{{b{hOb}}{Bl{A@b}}}f}{{{b{hOb}}nn}f}0{{bnn}c{}}011{{Obnn}Ob}0{{{b{Ob}}n}{{E`{{Hj{Od}}{Hj{Od}}}}}}0{{{b{hOb}}}{{Bl{A@b}}}}{{{b{Ob}}}{{Hj{Od}}}}{bc{}}{{{b{Ob}}{b{Ob}}}A@b}{{{b{Ob}}b}A@b}10{e{{A`{Obc}}}{}{{Hb{}{{H`{{A`{fc}}}}}}}}{e{{A`{Obc}}}{}{{Hb{}{{H`{{A`{{Bl{f}}c}}}}}}}}{{Ofe}{{A`{Obc}}}{}{{Hb{}{{H`{{A`{{Bl{f}}c}}}}}}}}{{Ofe}{{A`{Obc}}}{}{{Hb{}{{H`{{A`{fc}}}}}}}}{c{{A`{e}}}{}{}}0{{}{{A`{c}}}{}}0{{Of{Dd{{Hj{Od}}}}{Bl{A@b}}}{{A`{ObA@l}}}}{bC`}0{{{b{Ob}}}{{Bl{{b{A@b}}}}}}0{{{b{Ob}}}{{b{{Fh{{Hj{Od}}}}}}}}{{{b{Ob}}}A@f}{{}c{}}0{{{Oj{c}}{Bl{Kl}}}{{Oj{c}}}Hh}{{{Oj{c}}Ad}{{Oj{c}}}Hh}{{{Oj{c}}{Bl{n}}}{{Oj{c}}}Hh}0{{{Oj{c}}{Bl{e}}}{{Oj{c}}}Hh{{Gn{Jb}}}}{{{Oj{c}}{Bl{{Dn{Hf}}}}}{{Oj{c}}}Hh}{{{Oj{c}}{Bl{{Dn{{Fh{J`}}}}}}}{{Oj{c}}}Hh}4{{{Oj{c}}{Bl{{b{hj}}}}}{{Oj{c}}}Hh}{{{Oj{c}}Hl}{{Oj{c}}}Hh}{{{Oj{c}}{b{D`}}}{{Oj{c}}}Hh}{{Ob{Bl{A@b}}}Ob}{{{b{Ob}}{Bl{A@b}}}{{Hj{Od}}}}1``````{{bd}f}{b{{b{c}}}{}}0{{{b{h}}}{{b{hc}}}{}}0{{{b{A@n}}}A@n}{{b{b{hc}}}f{}}{bf}{{{b{A@n}}n}AA`}``{n{{b{c}}}{}}0{n{{b{hc}}}{}}0{{{b{Ol}}c}{{A`{AAbA@l}}}{{AAf{}{{H`{{b{AAd}}}}}}}}`{nf}0{{{b{AAb}}{b{AAb}}}Ad}{{{b{AAb}}{b{hAn}}}{{A`{fCn}}}}{{{b{A@n}}{b{hAn}}}{{A`{fCn}}}}{cc{}}{AAhAAb}1{{}n}0{{}c{}}0{{{b{A@n}}}{{b{{Bl{{Dd{AAj}}}}}}}}```````{{{b{A@n}}}{{b{AAl}}}}`{bc{}}{c{{A`{e}}}{}{}}0{AAn{{A`{A@nAB`}}}}{{}{{A`{c}}}{}}0{bC`}0`77``````````{{bd}f}0`{{{ABb{c}}n}{{Aj{ABd}}}Hh}{{ABfn}{{Aj{ABd}}}}{b{{b{c}}}{}}0000{{{b{h}}}{{b{hc}}}{}}0000{{{ABb{c}}{b{Cf}}}{{Aj{{ABb{c}}}}}Hh}{{ABf{b{Cf}}}{{Aj{ABf}}}}{{{b{ABh}}}ABh}{{{b{ABj}}}ABj}{{b{b{hc}}}f{}}0{bf}0{{}ABj}{n{{b{c}}}{}}0000{n{{b{hc}}}{}}0000{c{{A`{ABh}}}Ab}{c{{A`{ABj}}}Ab}{nf}0000{{{b{ABh}}{b{ABh}}}Ad}{{{b{ABj}}{b{ABj}}}Ad}{{b{b{c}}}Ad{}}00000{{{ABb{c}}}{{Aj{Ah}}}Hh}{ABf{{Aj{Ah}}}}{{{b{ABd}}n}Ad}{{{b{ABh}}{b{hAn}}}B`}{{{b{ABj}}{b{hAn}}}B`}{cc{}}0000{{{b{Df}}{Bl{{b{Dh}}}}{Bl{ABl}}}{{Aj{ABf}}}}{{{b{h{ABb{c}}}}}{{Aj{{b{ABl}}}}}Hh}{{{b{hABf}}}{{Aj{{b{ABl}}}}}}{{{b{ABh}}{b{hc}}}fBb}{{{b{ABj}}{b{hc}}}fBb}{{}n}0000{{}c{}}0000{{{b{ABd}}}Ad}``{{{Bl{{b{{Fh{n}}}}}}{b{Cf}}{Bl{{b{{Fh{Jl}}}}}}{Bl{{b{j}}}}}Ah}`{c{{ABb{c}}}Hh}{{{b{hABd}}n}{{Aj{{Bl{{Dd{Ah}}}}}}}}{{{b{h{ABb{c}}}}}{{Aj{n}}}Hh}{{{b{hABf}}}{{Aj{n}}}}`{{{ABb{c}}ABj}{{ABb{c}}}Hh}{{ABfABj}ABf}{{{b{ABd}}}{{b{N`}}}}{{{b{h{ABb{c}}}}}{{Aj{N`}}}Hh}{{{b{hABf}}}{{Aj{N`}}}}{{{b{ABh}}c}A`Bn}{{{b{ABj}}c}A`Bn}{{{ABb{c}}Ad}{{ABb{c}}}Hh}0{{ABfAd}ABf}{bc{}}0{c{{A`{e}}}{}{}}0000{{}{{A`{c}}}{}}0000{bC`}000054`{{}c{}}0000{{{ABb{c}}{Bl{{Dd{Db}}}}}{{ABb{c}}}Hh}{{{ABb{c}}{Bl{{Dd{Jl}}}}}{{ABb{c}}}Hh}{{ABf{Bl{{Dd{Jl}}}}}ABf}{{{ABb{c}}{Bl{{E`{J`{Dn{Df}}}}}}}{{ABb{c}}}Hh}{{ABf{Bl{{E`{J`{Dn{Df}}}}}}}ABf}{{{ABb{c}}{Bl{{Dn{Hf}}}}}{{ABb{c}}}Hh}{{ABf{Bl{{Dn{Hf}}}}}ABf}{{{ABb{c}}{Bl{{Dd{n}}}}}{{ABb{c}}}Hh}{{ABf{Bl{{Dd{n}}}}}ABf}{{{ABb{c}}{Bl{j}}}{{ABb{c}}}Hh}{{ABf{Bl{j}}}ABf}{{{ABb{c}}{Bl{{E`{nn}}}}}{{ABb{c}}}Hh}{{ABf{Bl{{E`{nn}}}}}ABf}````{b{{b{c}}}{}}{{{b{h}}}{{b{hc}}}{}}{{{b{A@b}}}ABn}{n{{b{c}}}{}}{n{{b{hc}}}{}}{nf}{cc{}}{{}n}{{}AC`}{{}c{}}{{{Bl{{b{Hf}}}}{b{ACb}}{b{Cf}}}{{Aj{Ad}}}}{{{b{AC`}}ABn{b{Of}}}Ad}{{{Dd{{E`{{b{AAd}}Nn}}}}Ol{Bl{ACd}}}{{Aj{{Hj{Od}}}}}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{bC`}6````````````````{{bd}f}00000{{{ACf{c}}{b{D`}}}{{Aj{{ACh{c}}}}}Bf}{b{{b{c}}}{}}0000000{{{b{h}}}{{b{hc}}}{}}0000000{{{b{ACj}}}ACj}{{{b{ACl}}}ACl}{{{b{ACn}}}ACn}{{{b{AD`}}}AD`}{{{b{ADb}}}ADb}{{{b{ADd}}}ADd}{{b{b{hc}}}f{}}00000{bf}00000``{{}ACj}{{}ACl}{{}ADd}{n{{b{c}}}{}}0000000{n{{b{hc}}}{}}0000000{c{{A`{ACj}}}Ab}{c{{A`{ACl}}}Ab}{c{{A`{ACn}}}Ab}{c{{A`{AD`}}}Ab}{c{{A`{ADb}}}Ab}{c{{A`{ADd}}}Ab}`{nf}00000009{{{b{{ACh{c}}}}{b{Ah}}}{{`{{ADh{}{{H`{{Aj{{ADf{A@l}}}}}}}}}}}Bf}{{{b{ACj}}{b{ACj}}}Ad}{{{b{ACl}}{b{ACl}}}Ad}{{{b{ACn}}{b{ACn}}}Ad}{{{b{AD`}}{b{AD`}}}Ad}{{{b{ADb}}{b{ADb}}}Ad}{{{b{ADd}}{b{ADd}}}Ad}{{b{b{c}}}Ad{}}00000000000000000{{{b{{ACh{c}}}}}{{Aj{Kn}}}Bf}{{{ACf{c}}{b{hAh}}}{{Aj{Kn}}}Bf}{{{b{ACj}}{b{hAn}}}B`}{{{b{ACl}}{b{hAn}}}B`}{{{b{ACn}}{b{hAn}}}B`}{{{b{AD`}}{b{hAn}}}B`}{{{b{ADb}}{b{hAn}}}B`}{{{b{ADd}}{b{hAn}}}{{A`{fCn}}}}{cc{}}0000000{{}ADd}{{{b{{ACh{c}}}}}{{b{{ADl{{ADj{c}}}}}}}Bf}{{{b{ACj}}{b{hc}}}fBb}{{{b{ACl}}{b{hc}}}fBb}{{{b{ACn}}{b{hc}}}fBb}{{{b{AD`}}{b{hc}}}fBb}{{{b{ADb}}{b{hc}}}fBb}{{{b{ADd}}{b{hc}}}fBb}{{}n}0000000{{}c{}}0000000{{{b{ADd}}}Ad}0```{c{{ACf{c}}}{BfBf}}``{{{b{ACj}}c}A`Bn}{{{b{ACl}}c}A`Bn}{{{b{ACn}}c}A`Bn}{{{b{AD`}}c}A`Bn}{{{b{ADb}}c}A`Bn}{{{b{ADd}}c}A`Bn}{{{ACf{c}}Ad}{{ACf{c}}}Bf}`{bc{}}00000{{{b{ACj}}c}{{ACf{c}}}Bf}{c{{A`{e}}}{}{}}0000000{{}{{A`{c}}}{}}0000000{G`{{Aj{ACn}}}}{ADn{{Aj{AD`}}}}{AE`{{Aj{ADb}}}}{bC`}0000000{{}c{}}0000000{{{ACf{c}}ACl}{{ACf{c}}}Bf}{{{ACf{c}}{Bl{n}}}{{ACf{c}}}Bf}0{{{ACf{c}}ADd}{{ACf{c}}}Bf}{{{b{h{ACh{c}}}}{b{Ah}}}{{Aj{f}}}Bf}{{{b{ACj}}Ahc}{{Aj{f}}}Bf}{{{b{{ACh{c}}}}{Dd{{ADf{A@l}}}}}{{Aj{f}}}Bf}{{{b{hAh}}{b{Il}}e{b{g}}n}{{Aj{f}}}{{Gn{J`}}}{{Hb{}{{H`{c}}}}}{CbLjAEb}}`{{{b{{Fh{Jb}}}}Ad{Bl{{b{Dh}}}}}{{Aj{{Dn{{Fh{Jb}}}}}}}}{{{b{{Fh{Jb}}}}Ad{Bl{{b{Dh}}}}Ad}{{Aj{{E`{{Dn{{Fh{Jb}}}}n}}}}}}{{{b{{Fh{c}}}}{b{{Fh{c}}}}}Ad{{Gl{Il}}}}{{{b{{Fh{G`}}}}}{{Bl{n}}}}{cAd{{Gl{Il}}}}{{{b{Il}}}Jb}``{{{b{AEd}}c}{}AEf}{{{b{AEd}}c}{}{AEfLj}}{b{{b{c}}}{}}{{{b{h}}}{{b{hc}}}{}}{n{{b{c}}}{}}{n{{b{hc}}}{}}{nf}{cc{}}{{}{{b{AEd}}}}{{}n}{{}c{}}{{{b{AEh}}}Kn}{{{b{AEd}}c}AEj{AEfLj}}{{{b{AEd}}e}{{AEj{c}}}Lj{{Fn{}{{Fl{c}}}}Lj}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{{ADne}{}AEf{{Fn{}{{Fl{c}}}}}}{bC`}71````{{bd}f}0{{{b{hAh}}{Bl{{b{Hf}}}}Ad}{{Aj{f}}}}{{{b{Hf}}}{{Bl{{b{AEl}}}}}}{b{{b{c}}}{}}0{{{b{h}}}{{b{hc}}}{}}0{{{b{AEn}}}AEn}{{{b{AF`}}}AF`}{{b{b{hc}}}f{}}0{bf}0{{{b{AF`}}}{{b{{Fh{AEn}}}}}}{n{{b{c}}}{}}0{n{{b{hc}}}{}}0{c{{A`{AEn}}}Ab}{c{{A`{AF`}}}Ab}{nf}0{{{b{AEn}}}{{b{Jh}}}}{{{b{Hf}}{b{Ah}}}{{Aj{Jl}}}}{{{b{AEn}}}{{b{J`}}}}{{{b{AEn}}{b{hAn}}}B`}{{{b{AF`}}{b{hAn}}}B`}{cc{}}0{JlAEn}{AFbAEn}{{{b{AEn}}}{{Bl{{b{Jl}}}}}}00{{{b{AF`}}{b{Df}}}{{Aj{{b{AEn}}}}}}{{}n}0{{}c{}}0{{{b{Hf}}}{{Bl{{Dd{J`}}}}}}{{AFb{Bl{Jl}}{Bl{Jl}}{Bl{Jl}}}AEn}{{Hl{Dd{AEn}}{Bl{n}}}AF`}{{{b{AEn}}}{{Bl{n}}}}{{{b{AF`}}}{{Bl{n}}}}{{{b{AF`}}}{{b{Hl}}}}{{{b{AEn}}c}A`Bn}{{{b{AF`}}c}A`Bn}{{{b{AEl}}{b{AF`}}}{{Aj{Ad}}}}{{{b{hAF`}}{b{{Fh{n}}}}}f}=={{{b{AEn}}}{{Bl{Jl}}}}{bc{}}0{c{{A`{e}}}{}{}}0{{}{{A`{c}}}{}}0{bC`}0??{{{b{hAF`}}Hl}f}```{Af{{Aj{Ah}}}}{{{b{hAl}}{b{hAh}}}{{Aj{f}}}}{cAfBd}{cAlBf}{{AfAd}Af}00````````{{{b{hc}}}{{Aj{K`}}}{BdHhAFd}}{{{Bl{{b{{Fh{J`}}}}}}{b{D`}}{Bl{{b{{Fh{Jl}}}}}}Ad}{{Bl{{Dd{n}}}}}}{{{b{hD`}}{b{D`}}}{{Aj{f}}}}``````````{{bd}f}{b{{b{c}}}{}}000{{{b{h}}}{{b{hc}}}{}}000{{{b{AFf}}}AFf}{{b{b{hc}}}f{}}{bf}{{}AFh}{n{{b{c}}}{}}000{n{{b{hc}}}{}}000{nf}000{{{b{AFf}}{b{hAn}}}B`}{cc{}}00{AFjAFh}{AFlAFh}{NnAFh}3{{{b{AFn}}{Ff{n}}}{{Aj{Nn}}}}{{{b{AFj}}{Ff{n}}}{{Aj{Nn}}}}{{{b{AFl}}{Ff{n}}}{{Aj{Nn}}}}{{{b{AFh}}{Ff{n}}}{{Aj{Nn}}}}{{{b{AFn}}{b{{Fh{{Ff{n}}}}}}}{{Aj{{Dd{Nn}}}}}}{{{b{AFj}}{b{{Fh{{Ff{n}}}}}}}{{Aj{{Dd{Nn}}}}}}{{{b{AFl}}{b{{Fh{{Ff{n}}}}}}}{{Aj{{Dd{Nn}}}}}}{{{b{AFh}}{b{{Fh{{Ff{n}}}}}}}{{Aj{{Dd{Nn}}}}}}{{{b{AFn}}}{{Aj{n}}}}{{{b{AFj}}}{{Aj{n}}}}{{{b{AFl}}}{{Aj{n}}}}{{{b{AFh}}}{{Aj{n}}}}{{}n}000{{}c{}}000{bc{}}{{{b{AFf}}{b{Df}}{Bl{{b{Dh}}}}}{{Aj{AFh}}}}{c{{A`{e}}}{}{}}000{{}{{A`{c}}}{}}000{bC`}000{{{b{AFh}}}{{b{Df}}}}6666````{b{{b{c}}}{}}{{{b{h}}}{{b{hc}}}{}}{{{b{{Fh{G`}}}}}{{Bl{AG`}}}}{n{{b{c}}}{}}{n{{b{hc}}}{}}{nf}{cc{}}>={{{b{{Fh{G`}}}}{b{h{Dd{G`}}}}}{{Aj{{b{{Fh{G`}}}}}}}};:9>````76432{{{b{AGb}}{b{hAn}}}B`}2{{}n}{{}c{}}{{{b{hn}}nnn}{{E`{nn}}}}{{nn{Ff{n}}}AGb}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{bC`}5","D":"COn","p":[[1,"reference"],[5,"Private",2093],[1,"unit"],[0,"mut"],[5,"RowIndex",0,2094],[5,"HiveOptions",0,2094],[1,"usize"],[6,"Result",2095],[10,"Deserializer",2096],[1,"bool"],[10,"SerReader",1953,2097],[5,"DataFrame",2098],[8,"PolarsResult",2099],[10,"SerWriter",1953,2097],[5,"Formatter",2100],[8,"Result",2100],[10,"Hasher",2101],[10,"Read",2102],[10,"Write",2102],[10,"ArrowReader",0,2097],[8,"RecordBatch",2103],[6,"Option",2104],[10,"Serializer",2105],[5,"TypeId",2106],[10,"WriteDataFrameToFile",0,2097],[5,"AvroReader",86,2107],[8,"ArrowSchema",2108],[10,"Seek",2102],[6,"AvroCompression",86],[5,"AvroWriter",86,2109],[5,"Error",2100],[8,"Schema",2110],[5,"String",2111],[5,"Vec",2112],[1,"str"],[5,"CloudOptions",227],[5,"CloudLocation",153,2113],[10,"ObjectStore",2114],[5,"Arc",2115],[1,"tuple"],[5,"PolarsObjectStore",153,2116],[5,"Path",2117],[10,"AsyncWrite",2118],[10,"Unpin",2119],[5,"CloudWriter",153,2120],[5,"Error",2121],[10,"Command",2122],[8,"Result",2121],[5,"Url",2123],[5,"Bytes",2124],[5,"Range",2125],[1,"slice"],[5,"ObjectMeta",2114],[17,"Output"],[10,"FnOnce",2126],[1,"u8"],[10,"VarInt",2127],[6,"AmazonS3ConfigKey",227,2128],[6,"AzureConfigKey",227,2129],[6,"GoogleConfigKey",227,2130],[6,"CloudType",227],[10,"AsRef",2131],[10,"Into",2131],[17,"Item"],[10,"IntoIterator",2132],[5,"CsvReader",416,2133],[10,"PhysicalIoExpr",1885],[10,"MmapBytesReader",1284],[5,"Box",2134],[8,"SchemaRef",2110],[5,"OwnedBatchedCsvReader",416,2135],[5,"BatchedCsvReader",416,2135],[5,"CsvReadOptions",416,2136],[5,"CsvParseOptions",416,2136],[6,"CsvEncoding",416,2136],[6,"CommentPrefix",416,2136],[6,"NullValues",416,2136],[5,"Path",2137],[10,"Fn",2126],[5,"PlSmallStr",2138],[5,"PathBuf",2137],[5,"File",2139],[5,"SchemaInferenceResult",754],[6,"DataType",2140],[6,"Buffer",677],[5,"Series",2141],[8,"PlHashSet",2142],[6,"ReaderBytes",1284],[5,"CsvWriter",781,2143],[5,"BatchedWriter",781,2143],[5,"CsvWriterOptions",781,2144],[5,"SerializeOptions",781,2144],[6,"QuoteStyle",781,2144],[8,"NonZeroUsize",2145],[1,"u64"],[5,"FileCacheEntry",926,2146],[5,"IpcStreamReader",947,2147],[5,"IpcWriter",947,2148],[5,"BatchedWriter",947,2148],[10,"AsyncWrite",2149],[10,"Send",2119],[5,"IpcScanOptions",947,2150],[5,"IpcReadOptions",947,2151],[5,"IpcWriterOptions",947,2148],[6,"IpcCompression",947,2148],[5,"IpcReaderAsync",947,2151],[5,"FileMetadata",2152],[1,"i64"],[5,"IpcStreamWriterOption",947,2147],[5,"IpcReader",947,2150],[5,"IpcStreamWriter",947,2147],[8,"ArrowSchemaRef",2108],[5,"CompatLevel",2140],[5,"JsonWriterOptions",1186],[5,"JsonWriter",1186],[5,"JsonReader",1186],[5,"BatchedWriter",1186],[6,"JsonFormat",1186],[5,"MemSlice",2153],[10,"BufRead",2102],[5,"StructArray",1308,2154],[10,"Array",2155],[6,"ArrowDataType",2156],[10,"Any",2106],[5,"JsonLineReader",1308],[5,"Field",2157],[5,"GrowableStruct",2158],[5,"MutableStructArray",2159],[5,"Bitmap",2160],[10,"Scalar",2161],[5,"StructValueIter",2162],[5,"BitmapIter",2163],[6,"ZipValidity",2164],[6,"PolarsError",2099],[5,"FileMetadata",1415,2165],[6,"ColumnOrder",2166],[5,"ParquetStatistics",1415],[5,"ColumnChunkMetadata",2167],[10,"ExactSizeIterator",2168],[5,"MutableStatistics",2169],[5,"KeyValue",2170],[5,"SchemaDescriptor",2171],[5,"FileMetaData",2170],[6,"ParquetError",2172],[5,"ParquetReader",1468,2173],[5,"BatchedParquetReader",1468,2174],[5,"ParquetAsyncReader",1468,2173],[5,"ParquetOptions",1468,2175],[6,"ParallelStrategy",1468,2175],[8,"FileMetadataRef",1415],[1,"f64"],[6,"PrefilterMaskSetting",1610,2174],[5,"RowGroupMetadata",2176],[6,"Filter",2177],[5,"ParquetWriter",1631,2178],[5,"BatchedWriter",1631,2179],[5,"ParquetWriteOptions",1631,2180],[6,"ParquetCompression",1631,2180],[5,"GzipLevel",1631,2180],[5,"BrotliLevel",1631,2180],[5,"ZstdLevel",1631,2180],[5,"StatisticsOptions",1631,2181],[8,"RowGroupIterColumns",1631,2182],[10,"Iterator",2183],[5,"FileWriter",2184],[5,"Mutex",2185],[1,"u32"],[1,"i32"],[10,"Sync",2119],[5,"RuntimeManager",1863],[10,"Future",2186],[10,"GetSize",1863],[5,"JoinHandle",2187],[10,"StatsEvaluator",1885],[5,"ColumnStats",1885],[5,"BatchStats",1885],[5,"Field",2188],[10,"Sized",2119],[6,"DynByteSourceBuilder",1975],[6,"DynByteSource",1975],[5,"MemSliceByteSource",1975],[5,"ObjectStoreByteSource",1975],[10,"ByteSource",1975],[6,"SupportedCompression",2056],[6,"SplitSlicePosition",2074],[5,"Utf8Field",677],[5,"CategoricalField",677],[5,"DatetimeField",677],[15,"Datetime",751]],"r":[[0,2097],[1,2094],[2,2094],[3,2097],[4,2097],[5,2097],[87,2107],[88,2109],[89,2189],[153,2113],[154,2120],[155,2116],[156,2116],[165,2190],[194,2113],[206,2190],[230,2128],[235,2129],[259,2130],[418,2135],[419,2136],[420,2136],[421,2136],[422,2136],[423,2133],[427,2136],[428,2135],[474,2191],[475,2191],[556,754],[782,2143],[783,2143],[784,2144],[788,2144],[789,2144],[926,2192],[927,2193],[928,2146],[935,2192],[937,2193],[947,2148],[948,2148],[949,2151],[950,2150],[951,2151],[952,2150],[953,2147],[954,2147],[955,2147],[956,2148],[957,2148],[1309,2154],[1415,2165],[1433,2169],[1469,2174],[1472,2175],[1473,2173],[1474,2175],[1475,2173],[1555,2194],[1613,2174],[1616,2174],[1624,2195],[1626,2196],[1631,2179],[1633,2180],[1635,2180],[1638,2180],[1639,2180],[1640,2178],[1641,2182],[1643,2181],[1646,2180],[1953,2097],[1954,2097],[1955,0],[1963,1855],[1964,2197],[1965,2197],[1966,2197],[1967,2197],[1971,2197],[1972,2197],[1973,2197]],"b":[[1313,"impl-ArrayFromIter%3COption%3C()%3E%3E-for-StructArray"],[1314,"impl-ArrayFromIter%3C()%3E-for-StructArray"],[1315,"impl-ArrayFromIterDtype%3COption%3C()%3E%3E-for-StructArray"],[1316,"impl-ArrayFromIterDtype%3C()%3E-for-StructArray"],[1336,"impl-PartialEq%3C%26dyn+Array%3E-for-StructArray"],[1337,"impl-PartialEq-for-StructArray"],[1342,"impl-From%3CGrowableStruct%3C\'a%3E%3E-for-StructArray"],[1343,"impl-From%3CMutableStructArray%3E-for-StructArray"],[1364,"impl-StructArray"],[1365,"impl-Array-for-StructArray"],[1368,"impl-StructArray"],[1369,"impl-Array-for-StructArray"],[1381,"impl-ArrayFromIter%3C()%3E-for-StructArray"],[1382,"impl-ArrayFromIter%3COption%3C()%3E%3E-for-StructArray"],[1383,"impl-ArrayFromIterDtype%3COption%3C()%3E%3E-for-StructArray"],[1384,"impl-ArrayFromIterDtype%3C()%3E-for-StructArray"],[1392,"impl-Array-for-StructArray"],[1393,"impl-StructArray"],[1409,"impl-StructArray"],[1410,"impl-Array-for-StructArray"],[2013,"impl-From%3CMemSliceByteSource%3E-for-DynByteSource"],[2014,"impl-From%3CObjectStoreByteSource%3E-for-DynByteSource"],[2015,"impl-From%3CMemSlice%3E-for-DynByteSource"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAC4GuQAAAAEAAwARABcACAAhAAgAKwACADAABQA4AAAAOgACAD4AAgBDABMAXwAAAGEAGAB9AAMAhAABAIcADQCYAAAAnAAAAJ4ABgCnAA8AuQACAL8AAwDFAAIAzQAAANAAAADVAA4A6gABAPYAAAACAQEABQEBABsBEAAvATYAawEDAHABCAB+ARwAowEEAKwBAQCwASoA3QE4ABcCBAAjAgAAJQIRAEACAABCAgIASQIrAHYCCACAAgcAmAIAAKYCEgC6AhcA1gIEAN8CIAABAwEABQMAAAcDBgAPAwAAFwMXADEDIQBUAwAAVgMCAF4DAgBiAwAAZAMFAHADAgB3AwMAfAMWAJ8DBwCoAwIArAMBALADBAC2AwAAuQMAALwDAAC+AwAAwQMDAMYDIwDrAzYAIwQDADIEDgBOBAYAVwQ1AI8EAQCVBAEAmQQAAJwEAACfBAEAogQBAKkEJADPBAAA1QQAANcEBADjBBkA/wQBAAUFAQAIBQcAEQUBABQFCQAfBQEAIgUJAC0FDQA8BQEAPwUBAEMFAABFBQIASwUAAE0FAABWBQIAWgUAAF0FAQBgBQ0AbwUCAHUFAQB5BQgAgwUBAIkFAACLBQcAlgUDAJwFBACiBQAApAUBALIFAgC2BQMAuwUBAL4FAADBBQAAwwUAAMcFDgDXBSUAAgYJABEGAAATBgIAFwYAABkGAQAcBgEAHwYCACMGEgA4BgUAPwYFAEYGAABIBgEASwYJAFYGAQBZBggAYwYAAGUGAQBoBgAAagYBAG0GAQBwBigAmwY7ANkGBQDnBg8A/wYBAAIHAQAFBwAABwcFAA8HKQA+BwEAQQcAAEgHAgBMBwQAUgcBAFUHAABXBwYAYAcEAGYHCQBxBwcAewcCAIYHAQCQBwMAlwcNAKYHAACoBwAArAcNALsHAQC+BwAAwAcaAN4HAgDjBw4A9gcTAAsIAwAQCAIAFAgAABcIDQAmCAAAKQgEAA=="}],["polars_lazy",{"t":"CQCCCPPPGPPPPPPPPPPPPPFPPPPPPPPKPGPPPPGFPPPFFPPPKPKPPPPPPPPPPPPPPPPPPFPPPPPPPPPFPPPPPPPPPGPPPPGKFPPPPPPPFIPPPPPPPPPGKPPPPPIPPPPPPPPPPPPPPKPPPPPPPPPPPPPPPFPPPPPPPPPPPFKPPPPPPPPPPPPPPFPPPPPPPPPPPPPPPPPPGPPPPPPGPPPPPPPPPPGPPPPPPPPPPPKPPPPPPPPPPFPPPPPPPPGPPPPPPPPPPPFPPPPPPPGPPPPPPFPGFPPPPPPPGPFPPPPPPPPPPPPPPPPPPPKPPFPPFPPPPFPPGGPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNHOONNNNHNNHNNNHNHNNNNNNNNNNNNNNHNHNONNNHHNCNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHOMNMMNHNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHHHHHNNNNNNNNHNHNNNHNNNNHHHHOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNHHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHOOHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOCNCNNNNNNNNMMNNMNNNNNNNNNNNNNNNNNNNNNNNNNNOONOHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNHNHNNNNNNNNNHNNHNNNHNNNNNNNNNHNNNNNNNNNNHNNHNNNNNNHNNNHHNNHHNNNNOOOHNNNHOOONONNNNNONNONNNNNNNNNNNNHNHNOONNNNNNNNNHNNNNNNCNNHNNNHNNNHNNNNNONNNNNNHHNNNNNNNNNNNNNNNNNNNNNNOONNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNONCNNNNNHNNNHNNNNNNHNNHOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNONNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHNNONNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOFNNNNNNNNNNNNNNNNNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPPPPPPPPPPPPPPPPGPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPPGPPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPCCCCCOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOGPPPGPPPPPGPPPPNNNNNNNNNNNNNNNNNNNNNNNNNPPPPGPPPNNNNNNNNNNNNNNNNNNNNNNNNNPPPPPPPPPPPPPPPGNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFHHOHHHHHHHHHHHHHHHHHHHHHHHHHHOOHHHHHOOHHHHHHHHHOOOHOOOOHHHHHHHOOHHHHOOOOOJJFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFOOOOOITTTTTTFKFFKFFFTFTTTTTTFFFTNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNOONOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNOONONNNNNNNMNNOOOONNNNNNNNNNNOCNNMNNOONNNNNMNNOOONNNNNNNONNNNNNNNNNNNNNNONNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNMNNNMNNNNNNNNNNNNNNMNNNNNNNHHKFFPPPPPPPFPPPPPPGFPFPPPPPPPPPPPPPPPPPFPFGGFPKGPPPPPSFPPPPPFKPPGFPFPPPPPPPPPPPPPPPFNNNNNNNNNNNNNNNNNNNNNNMONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONONOONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNONMNNNNNNNNNNNNNNNOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOMNNNOOOONONNNONNNNNNNOOOONONOOOHOMOMNONNNNNNNNNNNNNNNNONOOOONONNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNONNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO","n":["dsl","fallible","frame","physical_plan","prelude","Abs","Add","Agg","AggExpr","AggGroups","Alias","All","AllHorizontal","And","AnonymousFunction","Any","AnyHorizontal","ApproxNUnique","ArgUnique","ArgWhere","Array","ArrayExpr","ArrayNameSpace","AsStruct","Atan2","BackwardFill","Base64Decode","Base64Encode","BaseUtcOffset","BinaryExpr","","BinaryUdfOutputField","Boolean","BooleanFunction","Business","Cast","CastTimeUnit","Categorical","CategoricalFunction","CategoricalNameSpace","Cbrt","Ceil","Century","ChainedThen","ChainedWhen","Clip","Coalesce","Column","ColumnBinaryUdf","Columns","ColumnsUdf","Combine","ConcatExpr","ConcatHorizontal","ConcatVertical","Contains","ConvertTimeZone","Correlation","Count","CountMatches","CumCount","CumMax","CumMin","CumProd","CumSum","Cut","DSTOffset","Date","Datetime","DatetimeArgs","DatetimeFunction","Day","Diff","Divide","DropNans","DropNulls","Dtype","DtypeColumn","Duration","DurationArgs","EndsWith","Entropy","Eq","EqValidity","EwmMean","EwmMeanBy","EwmStd","EwmVar","Exclude","Excluded","ExclusiveOr","Exp","Explode","","Expr","ExprEvalExtension","ExprNameNameSpace","ExtendConstant","Extract","ExtractAll","ExtractGroups","Field","FieldByIndex","FieldByName","FieldsMapper","FieldsNameMapper","FillNull","FillNullWithStrategy","Filter","Find","First","Floor","FloorDivide","ForwardFill","Function","FunctionExpr","FunctionOutputField","Fused","Gather","GatherEvery","Generic","GetCategories","GetOutput","GroupsToRows","Gt","GtEq","Hash","Head","HexDecode","HexEncode","Hist","Hour","Implode","IndexColumn","InterSect","Interpolate","InterpolateBy","IntoListNameSpace","IsBetween","IsDuplicated","IsFinite","IsFirstDistinct","IsIn","IsInfinite","IsLastDistinct","IsLeapYear","IsNan","IsNotNan","IsNotNull","IsNull","IsUnique","IsoYear","Join","JoinOptions","JsonDecode","JsonEncode","JsonPathMatch","KeepName","Kurtosis","Last","Len","LenBytes","LenChars","List","ListExpr","ListNameSpace","ListNameSpaceExtension","Literal","Log","Log1p","LogicalAnd","LogicalOr","LowerBound","Lowercase","Lt","LtEq","Max","MaxHorizontal","Mean","MeanHorizontal","Median","MetaNameSpace","Microsecond","Millennium","Millisecond","Min","MinHorizontal","Minus","Minute","Mode","Modulus","Month","MonthEnd","MonthStart","MultipleFields","Multiply","NUnique","Name","Nanosecond","Negate","NestedType","Not","NotEq","NotEqValidity","Nth","NullCount","OffsetBy","Operator","Or","OrdinalDay","Over","PadEnd","PadStart","PctChange","PeakMax","PeakMin","Plus","Pow","PowFunction","PrefixFields","QCut","Quantile","Quarter","RLE","RLEID","Random","Range","Rank","Reinterpret","RenameAlias","RenameAliasFn","RenameFields","RepeatBy","Replace","","ReplaceStrict","ReplaceTimeZone","Reshape","Reverse","","Rolling","RollingCovOptions","RollingExpr","RollingExprBy","Root","Round","","RoundSF","SearchSorted","Second","Selector","","SetSortedFlag","Shift","ShiftAndFill","ShrinkType","Sign","Skew","Slice","","Sort","SortBy","SpecialEq","Split","SplitExact","SplitN","Sqrt","StartsWith","Std","StringExpr","StringFunction","StripChars","StripCharsEnd","StripCharsStart","StripPrefix","StripSuffix","Strptime","StrptimeOptions","StructExpr","StructFunction","StructNameSpace","Sub","SubPlan","SuffixFields","Sum","SumHorizontal","Tail","TemporalExpr","TemporalFunction","Ternary","Then","Time","TimeStamp","Titlecase","ToDecimal","ToInteger","ToPhysical","ToString","TopK","TopKBy","TotalDays","TotalHours","TotalMicroseconds","TotalMilliseconds","TotalMinutes","TotalNanoseconds","TotalSeconds","Trigonometry","TrueDivide","Truncate","UdfSchema","Unique","UniqueCounts","UnpivotArgsDSL","UpperBound","Uppercase","UserDefinedFunction","ValueCounts","Var","Week","WeekDay","When","Wildcard","Window","WindowMapping","WindowType","WithFields","WithTimeUnit","Xor","Year","ZFill","__clone_box","","","","","","","","","","","","","","","","","","","","","","","","","","","_into_selector","_rename_fields_impl","_selector_add","_selector_and","_selector_sub","_selector_xor","abs","add","","agg_groups","alias","all","","","","all_horizontal","allow_parallel","ambiguous","and","any","","","any_horizontal","append","apply","apply_binary","apply_children","apply_many","apply_many_private","apply_multiple","approx_n_unique","arange","arccos","arccosh","arcsin","arcsinh","arctan","arctan2","arctanh","arg_max","","","arg_min","","","arg_sort","arg_sort_by","arg_unique","arg_where","args","","arr","as_any","as_ref","as_struct","avg","backward_fill","binary","","binary_expr","bitand","bitxor","borrow","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","borrow_mut","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bottom_k","bottom_k_by","business_day_count","cache","call","","call_udf","","call_unchecked","cast","","cast_with_options","cat","","cbrt","ceil","clip","clip_max","clip_min","clone","","","","","","","","","","","","","","","","","","","","","","","","","","","clone_into","","","","","","","","","","","","","","","","","","","","","","","","","","","clone_to_uninit","","","","","","","","","","","","","","","","","","","","","","","","","","","coalesce","col","cols","concat_expr","concat_list","concat_str","contains","","cos","cosh","cot","count","count_matches","","cov","cum_count","cum_fold_exprs","cum_max","cum_min","cum_prod","cum_reduce_exprs","cum_sum","cumulative_eval","","cut","date_ranges","datetime","datetime_range","datetime_ranges","day","days","ddof","default","","","","","","","","","","","degrees","deref","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","deref_mut","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","deserialize","","","","","","","","","","","","","","","","","","","","","","","","diff","","div","dot","drop","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","drop_nans","drop_nulls","","dt","","dtype_col","dtype_cols","duration","entropy","eq","","","","","","","","","","","","","","","","","","","","","","eq_missing","equivalent","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","eval","","ewm_mean","ewm_mean_by","ewm_std","ewm_var","exact","exclude","exclude_dtype","exp","explode","extend_constant","field_by_index","field_by_name","field_by_names","fill_nan","fill_null","fill_null_with_strategy","filter","first","","","flatten","float_type","floor","floor_div","fmt","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fold_exprs","force_parallel","format","format_str","forward_fill","from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","from_type","fun","function_expr","function_with_options","functions","gather","","gather_every","","get","","","get_categories","get_field","","get_fields_lens","get_output","get_schema","gt","gt_eq","has_multiple_outputs","hash","","","","","","","","","","","","","","","","","","","","head","","hist","hour","hours","implode","index","index_cols","init","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","input_fields","int_range","int_ranges","interpolate","interpolate_by","into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","into_iter","into_list_name_space","","into_tree_formatter","is_arithmetic","is_between","is_column","is_column_selection","is_comparison","is_duplicated","is_finite","is_first_distinct","is_in","is_infinite","is_last_distinct","is_nan","is_not_nan","is_not_null","","is_null","","is_regex_projection","is_simple_projection","is_unique","join","","json_encode","keep","kurtosis","last","","","len","","","list","lit","log","log1p","logical_and","logical_or","lower_bound","lt","lt_eq","map","","map_binary","map_children","map_datetime_dtype_timezone","map_dtype","","map_dtypes","map_expr","map_field","map_fields","","map_list","map_list_multiple","map_many","map_many_private","map_multiple","map_numeric_to_float_dtype","map_python","map_to_float_dtype","map_to_list_and_array_inner_dtype","map_to_list_supertype","map_to_supertype","max","","","","max_horizontal","mean","","","mean_horizontal","median","","","","meta","microsecond","microseconds","milliseconds","min","","","","min_horizontal","min_periods","minute","minutes","mode","month","mul","n_unique","","","name","","nan_max","nan_min","nanoseconds","neg","neq","neq_missing","nested_sum_type","new","","","","","","nodes","nodes_owned","not","","nth","null_count","on","options","or","otherwise","","output_name","over","over_with_options","pct_change","peak_max","peak_min","pearson_corr","pi","pop","pow","prefix","prefix_fields","product","python_udf","qcut","qcut_uniform","quantile","","radians","rank","reduce_exprs","reinterpret","rem","rename_fields","repeat","repeat_by","replace","replace_dtype","replace_strict","reshape","return_type","reverse","","","rle","rle_id","rolling","rolling_corr","rolling_cov","rolling_map","rolling_map_float","rolling_max","rolling_max_by","rolling_mean","rolling_mean_by","rolling_median","rolling_median_by","rolling_min","rolling_min_by","rolling_quantile","rolling_quantile_by","rolling_skew","rolling_std","rolling_std_by","rolling_sum","rolling_sum_by","rolling_var","rolling_var_by","root_names","round","round_sig_figs","rows_left","rows_right","same_type","sample_frac","sample_fraction","sample_n","","search_sorted","second","seconds","serialize","","","","","","","","","","","","","","","","","","","","","","","","set_difference","set_intersection","set_sorted_flag","set_symmetric_difference","shift","","","shift_and_fill","shrink_dtype","shuffle","sign","sin","sinh","skew","slice","","sort","","","sort_by","spearman_rank_corr","sqrt","std","","","str","strict","strict_cast","string","struct_","sub","","suffix","suffix_fields","sum","","","","sum_horizontal","super_type","swap_operands","tail","","tan","tanh","ternary_expr","then","","time_ranges","time_unit","","time_zone","to_array","to_field","to_list","to_lowercase","to_owned","","","","","","","","","","","","","","","","","","","","","","","","","","","to_physical","to_physical_type","to_string","","","","","","","","","to_struct","","to_uppercase","top_k","top_k_by","try_from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","try_into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","try_map_dtype","try_map_dtypes","try_map_expr","try_map_field","try_serialize","","","try_to_compact_string","","","","","","","","","type_id","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","udf","undo_aliases","union","unique","","","unique_counts","unique_stable","","","upper_bound","value_counts","value_name","var","","","variable_name","vzip","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","weeks","when","","","window_size","with_ambiguous","with_day","with_days","with_dtype","with_fields","with_fractional_seconds","with_hms","","with_hour","with_hours","with_microsecond","with_microseconds","with_milliseconds","with_minute","with_minutes","with_month","with_nanoseconds","with_opt_dtype","with_same_dtype","with_second","with_seconds","with_time_unit","with_time_zone","with_weeks","with_year","xor","year","expr","input","","interpol","propagate_nans","","quantile","closed","ignore_nulls","","by","","dtype","expr","","","","","falsy","function","","","","idx","input","","","","left","length","offset","op","options","","","","","order_by","output_type","partition_by","predicate","returns_scalar","right","sort_options","truthy","allow_duplicates","base","","bin_count","breaks","ddof","decimals","descending","","digits","half_life","has_max","has_min","include_breakpoint","include_breaks","","include_category","labels","","left_closed","","limit","","method","","n","name","normalize","","offset","options","","","","parallel","probs","return_dtype","reverse","","","","","seed","","sort","delimiter","","dtype","","fill_char","","ignore_nulls","","inclusive","infer_schema_len","length","","literal","","","n","","pat","strict","","time_unit","time_zone","BinaryNameSpace","base64_decode","base64_encode","borrow","borrow_mut","contains_literal","deref","deref_mut","drop","ends_with","from","hex_decode","hex_encode","init","into","size_bytes","starts_with","try_from","try_into","type_id","vzip","CategoricalNameSpace","DateLikeNameSpace","add_business_days","base_utc_offset","borrow","borrow_mut","cast_time_unit","century","combine","convert_time_zone","date","datetime","day","deref","deref_mut","drop","dst_offset","from","hour","init","into","is_leap_year","iso_year","microsecond","millennium","millisecond","minute","month","month_end","month_start","nanosecond","offset_by","ordinal_day","quarter","replace_time_zone","round","second","strftime","time","timestamp","to_string","total_days","total_hours","total_microseconds","total_milliseconds","total_minutes","total_nanoseconds","total_seconds","truncate","try_from","try_into","type_id","vzip","week","weekday","with_time_unit","year","Abs","All","AllHorizontal","Any","AnyHorizontal","ApproxNUnique","ArgUnique","ArgWhere","ArrayExpr","AsStruct","Atan2","BackwardFill","Base64Decode","Base64Encode","BaseUtcOffset","BinaryExpr","Boolean","BooleanFunction","Business","CastTimeUnit","Categorical","CategoricalFunction","Cbrt","Ceil","Century","Clip","Coalesce","Combine","ConcatExpr","ConcatHorizontal","ConcatVertical","Contains","ConvertTimeZone","Correlation","CountMatches","CumCount","CumMax","CumMin","CumProd","CumSum","Cut","DSTOffset","Date","Datetime","DatetimeFunction","Day","Diff","DropNans","DropNulls","Duration","EndsWith","Entropy","EwmMean","EwmMeanBy","EwmStd","EwmVar","Exp","ExtendConstant","Extract","ExtractAll","ExtractGroups","FieldByIndex","FieldByName","FillNull","FillNullWithStrategy","Find","Floor","ForwardFill","FunctionExpr","Fused","GatherEvery","Generic","GetCategories","Hash","Head","HexDecode","HexEncode","Hist","Hour","Interpolate","InterpolateBy","IsBetween","IsDuplicated","IsFinite","IsFirstDistinct","IsIn","IsInfinite","IsLastDistinct","IsLeapYear","IsNan","IsNotNan","IsNotNull","IsNull","IsUnique","IsoYear","JsonDecode","JsonEncode","JsonPathMatch","Kurtosis","LenBytes","LenChars","ListExpr","Log","Log1p","LowerBound","Lowercase","MaxHorizontal","MeanHorizontal","Microsecond","Millennium","Millisecond","MinHorizontal","Minute","Mode","Month","MonthEnd","MonthStart","MultipleFields","Nanosecond","Negate","Not","NullCount","OffsetBy","OrdinalDay","PadEnd","PadStart","PctChange","PeakMax","PeakMin","Pow","PowFunction","PrefixFields","QCut","Quarter","RLE","RLEID","Random","Range","Rank","Reinterpret","RenameFields","RepeatBy","Replace","","ReplaceStrict","ReplaceTimeZone","Reshape","Reverse","","RollingExpr","RollingExprBy","Round","","RoundSF","SearchSorted","Second","SetSortedFlag","Shift","ShiftAndFill","ShrinkType","Sign","Skew","Slice","Split","SplitExact","SplitN","Sqrt","StartsWith","StringExpr","StringFunction","StripChars","StripCharsEnd","StripCharsStart","StripPrefix","StripSuffix","Strptime","StructExpr","StructFunction","SuffixFields","SumHorizontal","Tail","TemporalExpr","TemporalFunction","Time","TimeStamp","Titlecase","ToDecimal","ToInteger","ToPhysical","ToString","TopK","TopKBy","TotalDays","TotalHours","TotalMicroseconds","TotalMilliseconds","TotalMinutes","TotalNanoseconds","TotalSeconds","Trigonometry","Truncate","Unique","UniqueCounts","UpperBound","Uppercase","ValueCounts","Week","WeekDay","WithFields","WithTimeUnit","Year","ZFill","cat","pow","rolling","rolling_by","trigonometry","closed","ignore_nulls","","allow_duplicates","base","","bin_count","breaks","ddof","decimals","descending","","digits","half_life","has_max","has_min","include_breakpoint","include_breaks","","include_category","labels","","left_closed","","limit","","method","","n","name","normalize","","offset","options","","","","parallel","probs","return_dtype","reverse","","","","","seed","","sort","delimiter","","dtype","","fill_char","","ignore_nulls","","inclusive","infer_schema_len","length","","literal","","","n","","pat","strict","","time_unit","time_zone","CategoricalFunction","GetCategories","Cbrt","Generic","PowFunction","Sqrt","Max","Mean","Min","Quantile","RollingFunction","Skew","Std","Sum","Var","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","deserialize","drop","eq","fmt","","from","hash","init","into","serialize","to_owned","to_string","try_from","try_into","try_to_compact_string","type_id","vzip","MaxBy","MeanBy","MinBy","QuantileBy","RollingFunctionBy","StdBy","SumBy","VarBy","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","deserialize","drop","eq","fmt","","from","hash","init","into","serialize","to_owned","to_string","try_from","try_into","try_to_compact_string","type_id","vzip","ArcCos","ArcCosh","ArcSin","ArcSinh","ArcTan","ArcTanh","Cos","Cosh","Cot","Degrees","Radians","Sin","Sinh","Tan","Tanh","TrigonometricFunction","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","deserialize","drop","eq","equivalent","","","fmt","","from","hash","init","into","serialize","to_owned","to_string","try_from","try_into","try_to_compact_string","type_id","vzip","DatetimeArgs","DurationArgs","all","all_horizontal","ambiguous","any_horizontal","apply_binary","arange","arg_sort_by","arg_where","as_struct","avg","cast","coalesce","col","collect_all","cols","concat","concat_expr","concat_lf_diagonal","concat_lf_horizontal","concat_list","concat_str","cov","cum_fold_exprs","cum_reduce_exprs","date_range","date_ranges","datetime","datetime_range","datetime_ranges","day","days","dtype_col","dtype_cols","duration","fold_exprs","format_str","hour","hours","index_cols","int_range","int_ranges","is_not_null","is_null","map_binary","max","mean","median","microsecond","microseconds","milliseconds","min","minute","minutes","month","nanoseconds","not","pearson_corr","quantile","reduce_exprs","repeat","rolling_corr","rolling_cov","second","seconds","spearman_rank_corr","sum","time_range","time_ranges","time_unit","","time_zone","weeks","year","CALL_COLUMNS_UDF_PYTHON","CALL_DF_UDF_PYTHON","PythonFunction","PythonGetOutput","PythonUdfExpression","__clone_box","borrow","","","borrow_mut","","","call_udf","","clone","clone_into","clone_to_uninit","deref","","","deref_mut","","","deserialize","drop","","","eq","equivalent","","","fmt","from","","","","get_field","get_output","init","","","into","","","new","","serialize","to_owned","try_from","","","try_into","","","try_serialize","","type_id","","","vzip","","","StringNameSpace","base64_decode","base64_encode","borrow","borrow_mut","contains","contains_literal","count_matches","deref","deref_mut","drop","ends_with","extract","extract_all","extract_groups","find","find_literal","from","head","hex_decode","hex_encode","init","into","join","json_decode","json_path_match","len_bytes","len_chars","pad_end","pad_start","replace","replace_all","replace_n","reverse","slice","split","split_exact","split_exact_inclusive","split_inclusive","splitn","starts_with","strip_chars","strip_chars_end","strip_chars_start","strip_prefix","strip_suffix","strptime","tail","to_date","to_datetime","to_decimal","to_integer","to_lowercase","to_time","to_titlecase","to_uppercase","try_from","try_into","type_id","vzip","zfill","UserDefinedFunction","fun","input_fields","name","options","return_type","AllowedOptimizations","CLUSTER_WITH_COLUMNS","COMM_SUBEXPR_ELIM","COMM_SUBPLAN_ELIM","EAGER","FAST_PROJECTION","FILE_CACHING","InProcessQuery","IntoLazy","JoinBuilder","LazyCsvReader","LazyFileListReader","LazyFrame","LazyGroupBy","LazyJsonLineReader","NEW_STREAMING","OptFlags","PREDICATE_PUSHDOWN","PROJECTION_PUSHDOWN","ROW_ESTIMATE","SIMPLIFY_EXPR","SLICE_PUSHDOWN","STREAMING","ScanArgsAnonymous","ScanArgsIpc","ScanArgsParquet","TYPE_COERCION","__clone_box","","","","","","","","","_collect_post_opt","_with_eager","agg","all","allow_parallel","anonymous_scan","anti_join","apply","bitand","bitand_assign","bitor","bitor_assign","bits","","bitxor","bitxor_assign","borrow","","","","","","","","","","borrow_mut","","","","","","","","","","bottom_k","cache","","","cancel","cast","cast_all","clone","","","","","","","","","clone_into","","","","","","","","","clone_to_uninit","","","","","","","","","cloud_options","","","","","","coalesce","collect","collect_concurrently","collect_schema","complement","concat_impl","","","contains","count","cross_join","default","","","","","deref","","","","","","","","","","deref_mut","","","","","","","","","","describe_optimized_plan","describe_optimized_plan_tree","describe_plan","describe_plan_tree","difference","drop","","","","","","","","","","","","drop_no_validate","drop_nulls","empty","explain","explode","extend","fetch","","fetch_blocking","fill_nan","fill_null","filter","finish","","","","","finish_no_glob","","","first","fmt","","","","","force_parallel","from","","","","","","","","","","","","from_bits","from_bits_retain","","from_bits_truncate","from_iter","from_name","full_join","get_current_optimizations","glob","","","","group_by","group_by_dynamic","group_by_stable","head","hive_options","","how","include_file_paths","","infer_schema_length","init","","","","","","","","","","inner_join","insert","intersection","intersects","into","","","","","","","","","","into_iter","is_all","is_empty","iter","iter_names","join","join_builder","join_nulls","join_where","last","lazy","","left_join","left_on","limit","logical_plan","","low_memory","","map","map_python","max","mean","median","merge_sorted","min","n_rows","","","","","","name","new","","","new_paths","","new_with_sources","","not","null_count","on","optimize","parallel","pivot","profile","quantile","rechunk","","","","","remove","rename","reverse","right_on","rolling","row_index","","","","","","scan_from_python_function","scan_ipc","scan_ipc_files","scan_ipc_sources","scan_parquet","scan_parquet_files","scan_parquet_sources","schema","schema_only","schema_with_arenas","select","select_seq","semi_join","set","set_cached_arena","shift","shift_and_fill","sink_csv","sink_ipc","sink_ipc_cloud","sink_json","sink_parquet","sink_parquet_cloud","skip_rows","slice","sort","sort_by_exprs","sources","","","std","sub","sub_assign","suffix","sum","symmetric_difference","tail","","to_alp","to_alp_optimized","to_dot","to_owned","","","","","","","","","toggle","top_k","try_from","","","","","","","","","","try_into","","","","","","","","","","type_id","","","","","","","","","","union","unique","unique_generic","unique_stable","unique_stable_generic","unnest","unpivot","use_statistics","validate","var","vzip","","","","","","","","","","with","with_batch_size","with_cache","with_cloud_options","","with_cluster_with_columns","with_column","with_columns","with_columns_seq","with_comm_subexpr_elim","with_comm_subplan_elim","with_comment_prefix","with_context","with_decimal_comma","with_dtype_overwrite","with_encoding","with_eol_char","with_glob","with_has_header","with_ignore_errors","","with_include_file_paths","","with_infer_schema_length","","with_low_memory","with_missing_is_null","with_n_rows","","","","","with_new_streaming","with_null_values","with_optimizations","with_paths","","with_predicate_pushdown","with_projection_pushdown","with_quote_char","with_raise_if_empty","with_rechunk","","","with_row_estimate","with_row_index","","","","","","with_schema","","with_schema_modify","with_schema_overwrite","with_separator","with_simplify_expr","with_skip_rows","with_skip_rows_after_header","with_slice_pushdown","with_sources","","","with_streaming","with_truncate_ragged_lines","with_try_parse_dates","with_type_coercion","without_optimizations","pivot","pivot_stable","AnonymousScan","AnonymousScanArgs","AnonymousScanOptions","Anti","AsOf","Average","Binary","Boolean","Cache","Cross","CsvWriterOptions","DataFrameScan","Date","DateTime","Decimal","Dense","Distinct","DslPlan","Duration","","DynamicGroupOptions","ExtContext","Filter","Float","Float32","Float64","Full","GroupBy","HConcat","HStack","IEJoin","IR","Inner","Int","Int16","Int32","Int64","Int8","IpcWriterOptions","Join","JoinArgs","JoinType","JoinValidation","JsonWriterOptions","Left","Literal","LiteralValue","ManyToMany","ManyToOne","MapFunction","Max","Min","NULL","Null","","OneToMany","OneToOne","Ordinal","OtherScalar","ParquetWriteOptions","PolarsTemporalGroupby","PythonScan","Range","RankMethod","RankOptions","Right","RollingGroupOptions","Scan","Select","Semi","Series","Sink","Slice","Sort","StrCat","String","Time","UInt16","UInt32","UInt64","UInt8","Union","UnionArgs","__clone_box","","","","","","","","","","","","","","","","add_ms","add_ns","add_us","allows_predicate_pushdown","allows_projection_pushdown","allows_slice_pushdown","as_any","batch_size","borrow","","","","","","","","","","","","","","","","","","borrow_mut","","","","","","","","","","","","","","","","","","clone","","","","","","","","","","","","","","","","clone_into","","","","","","","","","","","","","","","","clone_to_uninit","","","","","","","","","","","","","","","","closed_window","","cmp","coalesce","compare","compression","","compute_schema","data_page_size","days","days_only","default","","","","","","","","","","","","deref","","","","","","","","","","","","","","","","","","deref_mut","","","","","","","","","","","","","","","","","","descending","describe","describe_tree_format","deserialize","","","","","","","","","","","","","","","","diagonal","display","drop","","","","","","","","","","","","","","","","","","eq","","","","","","","","","","","","","","","equivalent","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","every","fmt","","","","","","","","","","","","","","","","","","","fmt_str","from","","","","","","","","","","","","","","","","","","","from_partitioned_ds","get_datatype","group_by_dynamic","hash","","","","","","","","","","","","","","","how","include_bom","include_boundaries","include_header","index_column","","init","","","","","","","","","","","","","","","","","","into","","","","","","","","","","","","","","","","","","into_iter","is_asof","is_constant_duration","is_full_days","is_scalar","is_valid_join","is_zero","join_nulls","label","lit","","","","maintain_order","","","","materialize","method","months","months_only","mul","n_rows","nanoseconds","needs_checks","neg","negative","new","","next_batch","offset","","output_schema","parallel","parse","parsed_int","partial_cmp","period","","predicate","prepare_cloud_plan","rechunk","rolling","row_group_size","scan","schema","","serialize","","","","","","","","","","","","","","","","serialize_options","should_coalesce","skip_rows","slice","start_by","statistics","suffix","","to_alp","to_any_value","to_owned","","","","","","","","","","","","","","","","to_string","","","to_supertypes","to_writer","","truncate_impl","truncate_ms","truncate_ns","truncate_us","try_from","","","","","","","","","","","","","","","","","","","try_into","","","","","","","","","","","","","","","","","","try_to_compact_string","","","type_id","","","","","","","","","","","","","","","","","","validation","vzip","","","","","","","","","","","","","","","","","","weeks","weeks_only","with_coalesce","with_columns","with_suffix","write_df_to_file","","aggs","apply","args","by_column","contexts","df","dsl","expr","exprs","file_info","file_options","function","id","input","","","","","","","","","","","input_left","input_right","inputs","","keys","left_on","len","maintain_order","node","offset","options","","","","","","","payload","predicate","predicates","right_on","scan_type","schema","slice","sort_options","sources","version","dtype","high","low"],"q":[[0,"polars_lazy"],[5,"polars_lazy::dsl"],[1621,"polars_lazy::dsl::AggExpr"],[1628,"polars_lazy::dsl::BooleanFunction"],[1631,"polars_lazy::dsl::Expr"],[1666,"polars_lazy::dsl::FunctionExpr"],[1711,"polars_lazy::dsl::StringFunction"],[1731,"polars_lazy::dsl::TemporalFunction"],[1733,"polars_lazy::dsl::binary"],[1754,"polars_lazy::dsl::cat"],[1755,"polars_lazy::dsl::dt"],[1811,"polars_lazy::dsl::function_expr"],[2028,"polars_lazy::dsl::function_expr::BooleanFunction"],[2031,"polars_lazy::dsl::function_expr::FunctionExpr"],[2076,"polars_lazy::dsl::function_expr::StringFunction"],[2096,"polars_lazy::dsl::function_expr::TemporalFunction"],[2098,"polars_lazy::dsl::function_expr::cat"],[2100,"polars_lazy::dsl::function_expr::pow"],[2104,"polars_lazy::dsl::function_expr::rolling"],[2138,"polars_lazy::dsl::function_expr::rolling_by"],[2171,"polars_lazy::dsl::function_expr::trigonometry"],[2215,"polars_lazy::dsl::functions"],[2290,"polars_lazy::dsl::python_udf"],[2352,"polars_lazy::dsl::string"],[2413,"polars_lazy::dsl::udf"],[2419,"polars_lazy::frame"],[2903,"polars_lazy::frame::pivot"],[2905,"polars_lazy::prelude"],[3528,"polars_lazy::prelude::DslPlan"],[3579,"polars_lazy::prelude::LiteralValue"],[3582,"dyn_clone::sealed"],[3583,"polars_plan::dsl::meta"],[3584,"polars_plan::dsl::expr"],[3585,"polars_plan::dsl::struct_"],[3586,"polars_utils::pl_str"],[3587,"alloc::sync"],[3588,"polars_error"],[3589,"core::result"],[3590,"polars_plan::dsl::selector"],[3591,"core::convert"],[3592,"polars_plan::dsl::array"],[3593,"polars_plan::dsl::list"],[3594,"polars_plan::dsl::expr_dyn_fn"],[3595,"polars_core::frame::column"],[3596,"core::option"],[3597,"core::ops::function"],[3598,"core::marker"],[3599,"polars_plan::plans::visitor"],[3600,"polars_plan::dsl::function_expr"],[3601,"polars_core::datatypes::dtype"],[3602,"polars_core::chunked_array::ops::sort::options"],[3603,"polars_plan::dsl::function_expr::schema"],[3604,"polars_core::datatypes::field"],[3605,"core::any"],[3606,"alloc::vec"],[3607,"polars_plan::dsl::binary"],[3608,"core::clone"],[3609,"polars_plan::dsl::udf"],[3610,"polars_core::chunked_array::cast"],[3611,"polars_plan::dsl::cat"],[3612,"polars_plan::dsl::arity"],[3613,"polars_plan::dsl::function_expr::boolean"],[3614,"polars_plan::dsl::function_expr::cat"],[3615,"polars_plan::dsl::function_expr::datetime"],[3616,"polars_plan::dsl::function_expr::pow"],[3617,"polars_plan::dsl::function_expr::strings"],[3618,"polars_plan::dsl::function_expr::struct_"],[3619,"polars_plan::dsl::functions::temporal"],[3620,"polars_plan::dsl::options"],[3621,"core::iter::traits::collect"],[3622,"polars_lazy::dsl::eval"],[3623,"polars_core::utils"],[3624,"polars_time::windows::duration"],[3625,"polars_time::windows::group_by"],[3626,"polars_core::datatypes::time_unit"],[3627,"serde::de"],[3628,"polars_plan::plans"],[3629,"polars_core::series"],[3630,"polars_core::series::ops"],[3631,"polars_plan::dsl::dt"],[3632,"polars_lazy::dsl::list"],[3633,"polars_arrow::legacy::kernels::ewm"],[3634,"polars_core::chunked_array::ops"],[3635,"core::fmt"],[3636,"polars_plan::plans::apply"],[3637,"polars_ops::frame::join::iejoin"],[3638,"polars_plan::dsl::function_expr::business"],[3639,"polars_plan::dsl::function_expr::range"],[3640,"polars_plan::dsl::function_expr::list"],[3641,"polars_plan::dsl::function_expr::array"],[3642,"polars_plan::dsl::function_expr::binary"],[3643,"alloc::string"],[3644,"polars_plan::plans::options"],[3645,"polars_schema::schema"],[3646,"core::hash"],[3647,"polars_ops::series::ops::interpolation::interpolate"],[3648,"polars_ops::series::ops::is_between"],[3649,"polars_plan::dsl::name"],[3650,"polars_plan::plans::lit"],[3651,"polars_core::utils::supertype"],[3652,"polars_plan::dsl::python_udf"],[3653,"polars_utils::idx_vec"],[3654,"polars_arrow::legacy::kernels::rolling::no_nulls"],[3655,"polars_ops::series::ops::rank"],[3656,"polars_time::group_by::dynamic"],[3657,"polars_core::chunked_array::ops::rolling_window"],[3658,"polars_core::datatypes"],[3659,"polars_core::chunked_array"],[3660,"polars_time::chunkedarray::rolling_window"],[3661,"polars_core::chunked_array::ops::search_sorted"],[3662,"serde::ser"],[3663,"polars_core::series::series_trait"],[3664,"polars_plan::dsl::string"],[3665,"polars_ops::chunked_array::list::to_struct"],[3666,"compact_str"],[3667,"polars_ops::series::ops::business"],[3668,"polars_arrow::legacy::kernels::time"],[3669,"polars_plan::dsl::function_expr::rolling"],[3670,"polars_plan::dsl::function_expr::rolling_by"],[3671,"polars_plan::dsl::function_expr::trigonometry"],[3672,"polars_core::frame"],[3673,"rayon::iter"],[3674,"pyo3::types::any"],[3675,"pyo3::instance"],[3676,"polars_utils::arena"],[3677,"polars_plan::plans::ir"],[3678,"polars_plan::plans::aexpr"],[3679,"polars_plan::frame::opt_state"],[3680,"polars_plan::plans::anonymous_scan"],[3681,"polars_lazy::scan::anonymous_scan"],[3682,"polars_core::schema"],[3683,"polars_utils::index"],[3684,"polars_lazy::frame::exitable"],[3685,"polars_utils::aliases"],[3686,"polars_lazy::scan::csv"],[3687,"polars_lazy::scan::ipc"],[3688,"polars_lazy::scan::ndjson"],[3689,"polars_lazy::scan::parquet"],[3690,"polars_lazy::scan::file_list_reader"],[3691,"polars_io::cloud::options"],[3692,"polars_ops::frame::join::args"],[3693,"bitflags::iter"],[3694,"std::path"],[3695,"polars_plan::plans::ir::scan_sources"],[3696,"polars_io::options"],[3697,"polars_io::csv::write::options"],[3698,"polars_io::ipc::write"],[3699,"polars_io::json"],[3700,"polars_io::parquet::write::options"],[3701,"core::num::nonzero"],[3702,"polars_io::csv::read::options"],[3703,"chrono_tz::timezones"],[3704,"core::cmp"],[3705,"polars_core::frame::group_by::proxy"],[3706,"polars_core::datatypes::any_value"],[3707,"std::io"],[3708,"polars_io::parquet::write::writer"],[3709,"chrono::naive::datetime"],[3710,"polars_plan::dsl::functions::selectors"],[3711,"polars_plan::dsl::functions::horizontal"],[3712,"polars_plan::dsl::functions::arity"],[3713,"polars_plan::dsl"],[3714,"polars_plan::dsl::functions::range"],[3715,"polars_plan::dsl::functions::index"],[3716,"polars_plan::dsl::functions::coerce"],[3717,"polars_plan::dsl::functions::syntactic_sugar"],[3718,"polars_plan::dsl::functions::business"],[3719,"polars_plan::dsl::functions::concat"],[3720,"polars_plan::dsl::functions::correlation"],[3721,"polars_plan::dsl::functions::repeat"],[3722,"polars_plan::client"]],"i":"`````CjAhj`Dl1Gb0Ef311555Hl6`666Gj0Gf68`8`8608``Gh91``997`7`192221962999999111`119499G`82`3:55::::8`9:8Hj```;4449Gl0``<<:59<7<:``<:<3Gd`288=666=5:;<==`999999959999952`616;=:;667=``;==88=688:=:=:`555:=85=855518:35=`988;=5`85Hh77>>>9>`2>;6>>>>>><`2>7>>6>7>0`>>=6>>>6`<>>>>>><7<<`77757;>`777777`>``=<2;>7>`<`66777>6>>6666666>96`>>`>7`>;66`<<``26967FhFjFlFn?j9>BfGb8=<>9CjGnH`HbHdHf=HjHlHnAhF`hl1111??3??`AlAnj`:>0210`00`000`0`00000002102100`0`Dd;1DhDl``3`3`99Ff6358Nf8FhFjFlFn69G`EfBfGbGdGfGhGjGlCjGnH`HbHdHfHhHjHlHnAhF`FfAlDdAnhNflFhFjFlFnDljG`EfBfGbGdGfGhGjGlCjGnH`HbHdHfHhHjHlHnAhF`j0`8En2DhFb4`33`333333FhFjFlFnDl8G`EfBfGbGdGfGhGjGlCjGnH`HbHdHfHhHjHlHnAhF`FhFjFlFnDljG`EfBfGbGdGfGhGjGlCjGnH`HbHdHfHhHjHlHnAhF`FhFjFlFnDljG`EfBfGbGdGfGhGjGlCjGnH`HbHdHfHhHjHlHnAhF```````AlAnj00021`0`000`0If01````>=<1Bf00?><;:972Ff5Dd5hNflFhFjFlFnDl<G`Ef<<GbGdGfGhGjGlCjGnH`HbHdHfHhHjHlHnAhF`FfAlDdAnhNflFhFjFlFnDljG`EfBfGbGdGfGhGjGlCjGnH`HbHdHfHhHjHlHnAhF`DljG`EfBf0000GbGdGfGhGjGlCjHbHdHfHhHjHlHnAhAnj00FfAlDd4hNflFhFjFlFnDl;G`EfBfGbGdGfGhGjGlCjGnH`HbHdHfHhHjHlHnAhF`jAn1`1```1Dl22G`EfBf0GbGdGfGhGjGlCjHbHdHfHhHjHlHnAhj000G`00Ef00Gb00Gd00Gf00Gh00Gj00Gl00Hb00Hd00Hf00Hh00Hj00Hl00Hn00Ah00Kb0j000800000l001111`An22Bf33DhFbEnKl77G`Ef06Gb0Gd0Gf0Gh0Gj0Gl0Cj0GnH`HbHdHfHhHjHlHnAhF``67`jFfAlDdAnhNflFhFjFlFnDl<<<<<<<<<<<<<<G`Ef0Bf00000000000GbGdGfGhGjGlCj0000GnH`HbHdHfHh0HjHlHnAh0000F`Bf1`j`An101Al12FfJdBdDdDhKl88hDl::G`EfGbGdGfGhGjGlCjHbHdHfHhHjHlHnAhAnj0GnH`25`FfAlDd6hNflFhFjFlFnDl=G`EfBfGbGdGfGhGjGlCjGnH`HbHdHfHhHjHlHnAhF`0``j0FfAlDdAnhNflFhFjFlFnDl<G`EfBfGbGdGfGhGjGlCjGnH`HbHdHfHhHjHlHnAhF`jN`AnhEf411044444444`4`4114Al3lNf7`57`577`777777707`7Dd0Bf090209`99`191111`479``79``4799GnH`0`69;`Hb21<2<7:<<=<<1<<<44321>=<<`<`<?=<FjFn;>>>>>`>;>77>`>>`>>>`>>8`>>6>>?9<>>>>``>>>>>>>>>>>>>>>>>>>;>>Hf06?==??54DljG`>99999GbGdGfGhGjGlCj=Hd;HhHjHlHnAhAn0?0Al1j0000000201200`0120080`003Nf0`231`BfEf5333`FhFl`GnH`197863Fj3FnDl:G`89GbGdGfGhGjGlCj<;HbHdHfHhHjHlHnAhF`jDd1EfGbGdGfGhGjGlCjAlAnNf<<Ff3<2h2lFhFjFlFnDljG`EfBfGbGdGfGhGjGlCjGnH`HbHdHfHhHjHlHnAhF`FfAlDdAnhNflFhFjFlFnDljG`EfBfGbGdGfGhGjGlCjGnH`HbHdHfHhHjHlHnAhF`Dd0j1DhEnBd3EfGbGdGfGhGjGlCjFfAl>AnhNflFhFjFlFnDljG`EfBfGbGdGfGhGjGlCjGnH`HbHdHfHhHjHlHnAhF``hAnAl1j01200061206Ff2Dd45NflFhFjFlFnDl9G`EfBfGbGdGfGhGjGlCjGnH`HbHdHfHhHjHlHnAhF`9`FjFn:<<;Ddl=>=>=>==>=>=11>=>>=>j?AJdAJfAJh2102AJjAJlAJnAK`AKbAKd0AKfAKh4AKjAKlAKnAL`3ALb528ALd1ALf11098432323570;5ALhALjALlALnAM`AMbAMdAMfAMhAMjAMlAMn087;87;7;AN`ANb8ANdANfANh0?1ANjANlANnAO`4ALhAObAOdAOfAOhAOjAOl:=;AOnB@`B@bB@dB@fB@h54B@j321B@lB@nBA`03721BAb0`Ed0000000000000000000``Jn000000000000000000000000000000000000000000000000000000CjGb0001111111Gj0Gf33`303`Gh41441422214244444411111444124444444222Gl055355`551Gd644463665555555355555341464466664663336363331365633446666`16366666616466364666366636666664444246`4444446`1646`33444636633333336366646331334`````AJjAJlAJnALhALjALlALnAM`AMbAMdAMfAMhAMjAMlAMn087;87;7;AN`ANb8ANdANfANh0?1ANjANlANnAO`4ALhAObAOdAOfAOhAOjAOl:=;AOnB@`B@bB@dB@fB@h54B@j321B@lB@nBA`03721BAb0`GdGh0`0AAh000`00000000000000000000000000000AAj000`0000000000000000000000000000AAl00000000000000`0000000000000000000000000000````Gn``````````````````````````0H``````10`````````100`1010```````10````10101`````ABhNnABn210212222102102210222222102201102102102210210210102102`A@j00000000000000000000000000000000000000000000000000000000000`F`0000`ACl00000````````0`000000```0ADhABbACjADbADlADnAE`AEb86658ACn77699999999087654321908765432197731877876543219876543219876543219AEd053421888:005:888642:198765432:198765432:8888:19988765432:88:88:989888100530538:::::119888765432:::::::8800528887421426198765432:8:::198765432::::::88118AFd99299843999999916475372646464;9293`9916453;992916475399999997;9999;99999999979991649;;29;98999:9876543;;92:9876543;2:9876543;2:9876543;;9999993292:9876543;24664999999696666666464646616644969119966164919664464646966916496699`````AEl0AHjAHl0Jh3`011120``1`00111300030311111`0````3``AH`0133``20032``12``4`114211122222221`AEjOhInAFb84AGdAGfAGh:OfAGj;AHnABf<888AD`0007;:9AIh9AEl>9AIf98AHj87AHl76JhAEjOhIn8AFb8AH`AGd9AGfAGh:OfAGj;AHnABf<;:98AEl8765?43>21=<;:908765?43>21=<;:908765?43>21=<;:9:63=3::<;987654321=<;:AIh:198AIf87AHj76AHl65JhAEjOhIn7AFb9AH`AGd9AGfAGh:OfAGj;AHnABf<3<<;:98AEl8765?43>21=1=<;:AIh:198AIf87AHj76AHl65JhAEjOhInAFb9AH`AGdAGfAGh:OfAGj;AHnABf;;;:::999888AEl00888777666555333222111<<;::AD`:1199876AHj65AHl545?>=AIh==4<;AIf;:398276Jh73AIbAEjOhInAFb;AH`AGdAGfAGh=OfAGj>AHnABf86;6;:;:9?8AEl87?65AHj54AHl43Jh?>=AIh=4<;AIf;:498376225??3=?>AEjNhIn36?>=;6<00040AH`111AFbAD`5Oh8=444608`=AIbAGj33:8264>5AGdAGfAGhAHjOf5AHlAHnABfJh8=2=AEj:>>140<In?AElAH`<;:98=76542105;=22223?2AIhAFb32>AIf>=<;AGj;;:987Oh74365AGd3AGfAGhAHjOf6AHlAHnABfJhInAElAH`AEj=3AIhAFb43>AIf>=<;AGj;:9824Oh84376AGd3AGfAGhAHjOf6AHlAHnABfJhIn0=>=8;BAd0BAfBAhBAjBAlBAnBB`BBbBBd0BBfBBhBBj15;4BBl:BBn4:BC`BCb0>BCdBAd240<4BCf<13;624733:>BAh0;>BCh00","f":"```````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{bd}f}00000000000000000000000000{hj}{{l{Ab{{A`{n}}}}}j}{{hj}{{Af{jAd}}}}000{jj}{{jj}}{{AhAh}}2{{jc}j{{Aj{n}}}}{{}j}{Alj}{Anj}{{jB`}j}{c{{Af{jAd}}}{{Bb{{A`{j}}}}}}``{{jc}j{{Aj{j}}}}4321{{jcB`}j{{Aj{j}}}}{{jc{Bf{{Ab{Bd}}}}}j{{Bn{Bh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}}{{jjc{Bf{{Ab{Bd}}}}}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}}{{{b{j}}{b{Cdc}}b}{{Af{CfAd}}}{{Ch{{b{j}}b}{{Bj{{Af{CfAd}}}}}}}}{{jc{b{{A`{j}}}}{Bf{{Ab{Bd}}}}}j{{Bn{{b{Cd{A`{Bh}}}}}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}}{{jCj{b{{A`{j}}}}B`B`}j}{{ce{Bf{{Ab{Bd}}}}B`}j{{Bn{{b{Cd{A`{Bh}}}}}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}{{Bb{{A`{j}}}}}}{jj}{{jjClCn}j}11111{{jj}j}2>=2>=2{{jD`}j}{{cDb}j{{Bb{{A`{j}}}}}}4{cj{{Aj{j}}}}{{{b{Dd}}}{{b{{A`{Df}}}}}}`{jAl}{{{b{Dh}}}{{b{Dj}}}}{{{b{Dl}}}{{b{j}}}}{{{Dn{j}}}j}{{{b{E`}}}j}{{j{Bl{Eb}}}j}`{jEd}{{jEfj}j}{{AhAh}}0{b{{b{c}}}{}}000000000000000000000000000000000{{{b{Cd}}}{{b{Cdc}}}{}}000000000000000000000000000000000?{{jcg{Dn{B`}}}j{{Aj{j}}}{{Aj{j}}Eh}{{Bb{{A`{e}}}}}}{{jj{Ej{B`}}{Dn{El}}}j}`{{{b{En}}{b{n}}}{{Af{nAd}}}}{{F`{Dn{j}}}{{Af{jAd}}}}{{{b{Dh}}{b{Cd{A`{Bh}}}}}{{Af{{Bl{Bh}}Ad}}}}{{{b{Fb}}BhBh}{{Af{BhAd}}}}{{F`{Dn{j}}}j}{{jCn}j}0{{jCnFd}j}`{jFf}{jj}0{{jjj}j}{{jj}j}0{{{b{Fh}}}Fh}{{{b{Fj}}}Fj}{{{b{Fl}}}Fl}{{{b{Fn}}}Fn}{{{b{Dl}}}Dl}{{{b{j}}}j}{{{b{G`}}}G`}{{{b{Ef}}}Ef}{{{b{{Bf{c}}}}}{{Bf{c}}}Eh}{{{b{Gb}}}Gb}{{{b{Gd}}}Gd}{{{b{Gf}}}Gf}{{{b{Gh}}}Gh}{{{b{Gj}}}Gj}{{{b{Gl}}}Gl}{{{b{Cj}}}Cj}{{{b{Gn}}}Gn}{{{b{H`}}}H`}{{{b{Hb}}}Hb}{{{b{Hd}}}Hd}{{{b{Hf}}}Hf}{{{b{Hh}}}Hh}{{{b{Hj}}}Hj}{{{b{Hl}}}Hl}{{{b{Hn}}}Hn}{{{b{Ah}}}Ah}{{{b{F`}}}F`}{{b{b{Cdc}}}f{}}00000000000000000000000000{bf}00000000000000000000000000{{{b{{A`{j}}}}}j}{cj{{Aj{n}}}}{ej{{Aj{n}}}{{Ib{}{{I`{c}}}}}}{{eB`}{{Af{jAd}}}{{Aj{j}}Eh}{{Bb{{A`{c}}}}}}{e{{Af{jAd}}}{{Aj{j}}Eh}{{Bb{{A`{c}}}}}}{{c{b{E`}}B`}j{{Bb{{A`{j}}}}}}{{Alc}j{{Aj{j}}}}{{Anc}j{{Aj{j}}}}{jj}00021{{jjId}j}{{jB`}j}{{jceB`}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`CbEh}{{Bb{{A`{j}}}}}}111{{ce}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`CbEh}{{Bb{{A`{j}}}}}}2{{IfjIhB`}j}0{{j{Dn{Ij}}{Bl{c}}B`B`}j{{Il{n}}}}{{jjInJ`}j}{Gnj}{{jjInJ`{Bl{Jb}}{Bl{n}}}j}0```{{}j}{{}{{Bf{{Ab{Jd}}}}}}{{}{{Bf{{Ab{Bd}}}}}}{{}{{Bf{{Ab{Fb}}}}}}{{}Gn}{{}H`}{{}Hd}{{}Hf}{{}Hh}{{}Hj}{{}Hn}{jj}{Ih{{b{c}}}{}}000000000000000{{{b{{Bf{c}}}}}b{}}111111111111111111{Ih{{b{Cdc}}}{}}000000000000000000000000000000000{c{{Af{Dl}}}Jf}{c{{Af{j}}}Jf}{c{{Af{G`}}}Jf}{c{{Af{Ef}}}Jf}{c{{Af{{Bf{{Ab{Bd}}}}}}}Jf}{c{{Af{{Bf{{Ab{Jh}}}}}}}Jf}{c{{Af{{Bf{{Ab{En}}}}}}}Jf}{c{{Af{{Bf{Jj}}}}}Jf}{c{{Af{{Bf{{Ab{Dh}}}}}}}Jf}{c{{Af{Gb}}}Jf}{c{{Af{Gd}}}Jf}{c{{Af{Gf}}}Jf}{c{{Af{Gh}}}Jf}{c{{Af{Gj}}}Jf}{c{{Af{Gl}}}Jf}{c{{Af{Cj}}}Jf}{c{{Af{Hb}}}Jf}{c{{Af{Hd}}}Jf}{c{{Af{Hf}}}Jf}{c{{Af{Hh}}}Jf}{c{{Af{Hj}}}Jf}{c{{Af{Hl}}}Jf}{c{{Af{Hn}}}Jf}{c{{Af{Ah}}}Jf}{{AnClJl}j}{{jClJl}j}{{jj}}{{jc}j{{Aj{j}}}}{Ihf}000000000000000000000000000000000{jj}{Anj}1`{jJn}{{{b{Cn}}}j}{cj{{Bb{{A`{Cn}}}}}}{H`j}{{jIjB`}j}{{{b{Dl}}{b{Dl}}}B`}9{{{b{j}}{b{j}}}B`}{{{b{G`}}{b{G`}}}B`}{{{b{Ef}}{b{Ef}}}B`}{{{b{{Bf{{Ab{c}}}}}}{b{{Bf{{Ab{c}}}}}}}B`K`}{{{b{{Bf{Jj}}}}{b{{Bf{Jj}}}}}B`}{{{b{Gb}}{b{Gb}}}B`}{{{b{Gd}}{b{Gd}}}B`}{{{b{Gf}}{b{Gf}}}B`}{{{b{Gh}}{b{Gh}}}B`}{{{b{Gj}}{b{Gj}}}B`}{{{b{Gl}}{b{Gl}}}B`}{{{b{Cj}}{b{Cj}}}B`}{{{b{Hb}}{b{Hb}}}B`}{{{b{Hd}}{b{Hd}}}B`}{{{b{Hf}}{b{Hf}}}B`}{{{b{Hh}}{b{Hh}}}B`}{{{b{Hj}}{b{Hj}}}B`}{{{b{Hl}}{b{Hl}}}B`}{{{b{Hn}}{b{Hn}}}B`}{{{b{Ah}}{b{Ah}}}B`}{{jc}j{{Aj{j}}}}{{b{b{c}}}B`{}}00000000000000000000000000000000000000000000000000{{KbjB`}j}0{{jKd}j}{{jjIn}j}11`{{jc}j{{Il{n}}}}{{jc}j{{Bb{{A`{Cn}}}}}}{jj}0{{jjj}j}{{lCl}j}{{l{b{E`}}}j}{{le}j{{Aj{n}}}{{Ib{}{{I`{c}}}}}};;{{jKf}j}<{{}j}{Anj}77{{}{{Bf{{Ab{Bd}}}}}}8{{jj}j}{{{b{Dh}}{b{CdKh}}}{{Af{fKj}}}}{{{b{Fb}}{b{CdKh}}}{{Af{fKj}}}}{{{b{En}}{b{CdKh}}}{{Af{fKj}}}}{{{b{Kl}}{b{CdKh}}}{{Af{fKj}}}}{{{b{j}}{b{CdKh}}}{{Af{fKj}}}}0{{{b{G`}}{b{CdKh}}}{{Af{fKj}}}}{{{b{Ef}}{b{CdKh}}}{{Af{fKj}}}}0{{{b{{Bf{c}}}}{b{CdKh}}}{{Af{fKj}}}{}}{{{b{Gb}}{b{CdKh}}}{{Af{fKj}}}}0{{{b{Gd}}{b{CdKh}}}{{Af{fKj}}}}0{{{b{Gf}}{b{CdKh}}}{{Af{fKj}}}}0{{{b{Gh}}{b{CdKh}}}{{Af{fKj}}}}0{{{b{Gj}}{b{CdKh}}}{{Af{fKj}}}}0{{{b{Gl}}{b{CdKh}}}{{Af{fKj}}}}0{{{b{Cj}}{b{CdKh}}}{{Af{fKj}}}}0{{{b{Gn}}{b{CdKh}}}{{Af{fKj}}}}{{{b{H`}}{b{CdKh}}}{{Af{fKj}}}}{{{b{Hb}}{b{CdKh}}}{{Af{fKj}}}}{{{b{Hd}}{b{CdKh}}}{{Af{fKj}}}}{{{b{Hf}}{b{CdKh}}}{{Af{fKj}}}}{{{b{Hh}}{b{CdKh}}}{{Af{fKj}}}}{{{b{Hj}}{b{CdKh}}}{{Af{fKj}}}}{{{b{Hl}}{b{CdKh}}}{{Af{fKj}}}}{{{b{Hn}}{b{CdKh}}}{{Af{fKj}}}}{{{b{Ah}}{b{CdKh}}}{{Af{fKj}}}}{{{b{F`}}{b{CdKh}}}{{Af{fKj}}}}{{jce}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`CbEh}{{Bb{{A`{j}}}}}}``{{{b{E`}}c}{{Af{jAd}}}{{Bb{{A`{j}}}}}}{{j{Bl{Eb}}}j}{cc{}}00000000000{{{b{E`}}}j}{Idj}{Knj}3{L`j}{Lbj}{Ldj}{B`j}{Ijj}{Elj}{Clj}{Lfj}{Ebj}{Dlj}=={LhEf}{Lj{{Bf{{Ab{Dh}}}}}}{Gb{{Bf{{Ab{Dh}}}}}}{Gf{{Bf{{Ab{Dh}}}}}}{Gl{{Bf{{Ab{Dh}}}}}}{Gj{{Bf{{Ab{Dh}}}}}}{Ll{{Bf{{Ab{Dh}}}}}}{Ln{{Bf{{Ab{Dh}}}}}}{M`{{Bf{{Ab{Dh}}}}}}{Gd{{Bf{{Ab{Dh}}}}}}{cc{}}{Mb{{Bf{{Ab{Dh}}}}}}{Cj{{Bf{{Ab{Dh}}}}}}222222{GbCj}{GjCj}{GdCj}{MbCj}6666666{HjHh}777{{{b{E`}}}Ah}8{jAh}{nAh}{MdAh};{Cn{{Bf{{Ab{Bd}}}}}}``{{jc{Bf{{Ab{Bd}}}}Mf}j{{Bn{Bh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}}`{{AnjB`}j}{{jc}j{{Aj{j}}}}{{Anjj}j}{{jIhIh}j}{{AljB`}j}43{Ffj}{{{b{Jd}}{b{{Mh{Cn}}}}Mj{b{Df}}{b{Df}}}{{Bl{Df}}}}{{{b{Bd}}{b{{Mh{Cn}}}}Mj{b{{A`{Df}}}}}{{Af{DfAd}}}}{{{b{Dd}}}Ih}{{{b{Dh}}}{{Bl{{Bf{{Ab{Bd}}}}}}}}{{{b{Kl}}{b{{Mh{Cn}}}}}{{Af{{Ab{{Mh{Cn}}}}Ad}}}}99{{{b{h}}}B`}{{{b{Dl}}{b{Cdc}}}fMl}{{jEbEbEbEb}j}{{{b{j}}{b{Cdc}}}fMl}{{{b{G`}}{b{Cdc}}}fMl}{{{b{Ef}}{b{Cdc}}}fMl}{{{b{Gb}}{b{Cdc}}}fMl}{{{b{Gd}}{b{Cdc}}}fMl}{{{b{Gf}}{b{Cdc}}}fMl}{{{b{Gh}}{b{Cdc}}}fMl}{{{b{Gj}}{b{Cdc}}}fMl}{{{b{Gl}}{b{Cdc}}}fMl}{{{b{Cj}}{b{Cdc}}}fMl}{{{b{Hb}}{b{Cdc}}}fMl}{{{b{Hd}}{b{Cdc}}}fMl}{{{b{Hf}}{b{Cdc}}}fMl}{{{b{Hh}}{b{Cdc}}}fMl}{{{b{Hj}}{b{Cdc}}}fMl}{{{b{Hl}}{b{Cdc}}}fMl}{{{b{Hn}}{b{Cdc}}}fMl}{{{b{Ah}}{b{Cdc}}}fMl}{{Anj}j}{{j{Bl{Ih}}}j}{{j{Bl{j}}{Bl{Ih}}B`B`}j}``{jj}`{cj{{Bb{{A`{Cl}}}}}}{{}Ih}000000000000000000000000000000000`{{jjClCn}j}{{jjj}j}{{jMn}j}{{jj}j}{{}c{}}000000000000000000000000000000000{{{b{j}}}}{N`An}{AnAn}{h{{Af{{`{Nb}}Ad}}}}{{{b{Ef}}}B`}{{jccNd}j{{Aj{j}}}}{{{b{h}}}B`}{{{b{h}}B`}B`}3???{{jc}j{{Aj{j}}}}{jj}0000000330{{AljB`}j}{{AnjB`}j}{lj}{Nfj}{{jB`B`}j}{{}j}{Anj}7107{jAn}{cjNh}{{jIj}j}:;;:;;{{Nfc}j{{Bn{{b{n}}}{{Bj{{Af{nAd}}}}}}C`Cb}}{{jc{Bf{{Ab{Bd}}}}}j{{Bn{Bh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}}{{jjc{Bf{{Ab{Bd}}}}}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}}{{j{b{Cdc}}{b{Cd}}}{{Af{jAd}}}{{Ch{j{b{Cd}}}{{Bj{{Af{jAd}}}}}}}}{{{b{Dd}}{Bl{{b{n}}}}}{{Af{DfAd}}}}{{{b{Dd}}c}{{Af{DfAd}}}{{Nj{{b{Cn}}}{{Bj{Cn}}}}}}{c{{Bf{{Ab{Bd}}}}}{{Bn{{b{Cn}}}{{Bj{{Af{CnAd}}}}}}C`Cb}}{c{{Bf{{Ab{Bd}}}}}{{Bn{{b{{A`{{b{Cn}}}}}}}{{Bj{{Af{CnAd}}}}}}C`Cb}}{{jc}j{{Ch{j}{{Bj{j}}}}}}{c{{Bf{{Ab{Bd}}}}}{{Bn{{b{Df}}}{{Bj{{Af{DfAd}}}}}}C`Cb}}{{Nf{Ab{Bn}}}j}{c{{Bf{{Ab{Bd}}}}}{{Bn{{b{{A`{Df}}}}}{{Bj{{Af{DfAd}}}}}}C`Cb}}:{{ce{Bf{{Ab{Bd}}}}}j{{Bn{{b{Cd{A`{Bh}}}}}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}{{Bb{{A`{j}}}}}}{{jc{b{{A`{j}}}}{Bf{{Ab{Bd}}}}}j{{Bn{{b{Cd{A`{Bh}}}}}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}}{{jCj{b{{A`{j}}}}B`{Bl{Nl}}}j}2{{{b{Dd}}}{{Af{DfAd}}}}{{jNnB`}j}1111{{{b{E`}}}j}{Alj}{Anj}{jj}{c{{Af{jAd}}}{{Bb{{A`{j}}}}}}42104321{jh}```54321```2`{{jj}}543{jNf}`44`{j}{{jc}j{{Aj{j}}}}0;{{{b{{A`{Df}}}}}Dd}{c{{Bf{c}}}{}}{{jjj}Gn}{{}H`}{jAh}{{n{Dn{Df}}{Bf{{Ab{Bd}}}}c}F`Dh}{{{b{j}}{b{Cd{O`{{b{j}}}}}}}f}{{j{b{Cd{O`{j}}}}}f}>>{Clj}?``9{{Fjc}j{{Aj{j}}}}{{Fnc}j{{Aj{j}}}}{{{b{h}}}{{Af{nAd}}}}{{je}j{{Aj{j}}Eh}{{Bb{{A`{c}}}}}}{{je{Bl{{Ob{eD`}}}}Hj}j{{Aj{j}}Eh}{{Bb{{A`{c}}}}}}{{jj}j}{jj}0{{jjId}j}{{}j}{h{{Af{{Dn{j}}Ad}}}}{{jc}j{{Aj{j}}}}{{Nf{b{E`}}}j}05`{{j{Dn{Ij}}{Bl{c}}B`B`B`}j{{Il{n}}}}{{jIh{Bl{c}}B`B`B`}j{{Il{n}}}}{{{b{E`}}jOd}j}{{jjOd}j}9{{jOf{Bl{Eb}}}j}{{ce}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`CbEh}{{Bb{{A`{j}}}}}}{{jB`}j}{{jj}}{{le}j{{Aj{n}}}{{Ib{}{{I`{c}}}}}}{{cj}j{{Aj{j}}}};{{jcc}j{{Aj{j}}}}{{{b{Dd}}{Bl{Cn}}}{{Af{DfAd}}}}{{jcc{Bl{c}}{Bl{Cn}}}j{{Aj{j}}}}{{j{b{{A`{Cl}}}}Hl}j}`{Alj}{Anj}{jj}00{{jOh}j}{{jjHb}j}0{{j{Ab{Bn}}{Bf{{Ab{Bd}}}}Oj}j}{{jIhc}j{{Ch{{b{Cd{On{Ol}}}}}{{Bj{{Bl{Ij}}}}}}C`CbA@`}}{{jOj}j}{{jjA@b}j}101010{{jOdIjOj}j}{{jjOdIjA@b}j}{{jIhB`}j}434343{{{b{h}}}{{Dn{n}}}}{{jLd}j}{{jEl}j}``{{}{{Bf{{Ab{Bd}}}}}}{{jjB`B`{Bl{Eb}}}j}{{AnjB`B`{Bl{Eb}}}j}01{{jcA@d}j{{Aj{j}}}}``{{{b{Dl}}c}AfA@f}{{{b{j}}c}AfA@f}{{{b{G`}}c}AfA@f}{{{b{Ef}}c}AfA@f}{{{b{{Bf{{Ab{En}}}}}}c}AfA@f}{{{b{{Bf{Jj}}}}c}AfA@f}{{{b{{Bf{{Ab{Dh}}}}}}c}AfA@f}{{{b{{Bf{{Ab{Bd}}}}}}c}AfA@f}{{{b{{Bf{{Ab{Jh}}}}}}c}AfA@f}{{{b{Gb}}c}AfA@f}{{{b{Gd}}c}AfA@f}{{{b{Gf}}c}AfA@f}{{{b{Gh}}c}AfA@f}{{{b{Gj}}c}AfA@f}{{{b{Gl}}c}AfA@f}{{{b{Cj}}c}AfA@f}{{{b{Hb}}c}AfA@f}{{{b{Hd}}c}AfA@f}{{{b{Hf}}c}AfA@f}{{{b{Hh}}c}AfA@f}{{{b{Hj}}c}AfA@f}{{{b{Hl}}c}AfA@f}{{{b{Hn}}c}AfA@f}{{{b{Ah}}c}AfA@f}{{Anc}j{{Aj{j}}}}0{{jA@h}j}1{{Alj}j}{{Anj}j}{{jj}j}{{jce}j{{Aj{j}}}{{Aj{j}}}}{jj}{{j{Bl{Eb}}}j}111{{jB`}j}{{Anjj}j}4{{AlD`}j}{{AnD`}j}{{jD`}j}{{jeDb}j{{Aj{j}}Eh}{{Bb{{A`{c}}}}}}{{jjIdB`}j}8{{AlId}j}{{AnId}j}{{jId}j}{jA@j}`{{jCn}j}`{jl}{{jj}}{{AhAh}}{{Nf{b{E`}}}j}0{{{b{E`}}}j}{Alj}{Anj}{jj}{c{{Af{jAd}}}{{Bb{{A`{j}}}}}}{{}{{Bf{{Ab{Bd}}}}}}{EfEf}{{Anj}j}{{j{Bl{Ih}}}j}55{{jjj}j}{{Fhc}Fj{{Aj{j}}}}{{Flc}Fn{{Aj{j}}}}{{jjInJ`}j}```{{AnIh}j}{{{b{j}}{b{{Mh{Cn}}}}Mj}{{Af{DfAd}}}}={Nfj}{bc{}}00000000000000000000000000={{{b{Dd}}}{{Af{DfAd}}}}{bMd}00000000{{Al{Bl{{Ab{Bn}}}}}j}{{AnA@l{Bl{{Ab{Bn}}}}Ih}j}5{{jj}j}{{jcg{Dn{B`}}}j{{Aj{j}}}{{Aj{j}}Eh}{{Bb{{A`{e}}}}}}{c{{Af{e}}}{}{}}000000000000000000000000000000000{{}{{Af{c}}}{}}000000000000000000000000000000000{{{b{Dd}}c}{{Af{DfAd}}}{{Nj{{b{Cn}}}{{Bj{{Af{CnAd}}}}}}}}{{{b{Dd}}c}{{Af{DfAd}}}{{Nj{{b{{A`{{b{Cn}}}}}}}{{Bj{{Af{CnAd}}}}}}}}{{jc}{{Af{jAd}}}{{Ch{j}{{Bj{{Af{jAd}}}}}}}}{{{b{Dd}}c}{{Af{DfAd}}}{{Nj{{b{Df}}}{{Bj{{Af{DfAd}}}}}}}}{{{b{Dh}}{b{Cd{Dn{Id}}}}}{{Af{fAd}}}}{{{b{En}}{b{Cd{Dn{Id}}}}}{{Af{fAd}}}}{{{b{Bd}}{b{Cd{Dn{Id}}}}}{{Af{fAd}}}}{b{{Af{A@nAA`}}}}00000000{bAAb}000000000000000000000000000000000`{hj}{{Anc}j{{Aj{j}}}}{Alj}{Anj}{jj}02100{{jB`B`{b{E`}}B`}j}`{{AlId}j}{{AnId}j}{{jId}j}`{{}c{}}000000000000000000000000000000000`{cFh{{Aj{j}}}}{{Fjc}Fl{{Aj{j}}}}{{Fnc}Fl{{Aj{j}}}}`{{Gnj}Gn}0{{H`j}H`}{{{b{Dd}}Cn}{{Af{DfAd}}}}{{l{Dn{j}}}{{Af{jAd}}}}{{H`jjj}H`}{{Gnjjj}Gn}1545445454{{{b{Dd}}{Bl{Cn}}}{{Af{DfAd}}}}{{{b{Dd}}}{{Af{DfAd}}}}76{{GnJb}Gn}{{Gn{Bl{n}}}Gn}89{{jc}j{{Aj{j}}}}``````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{EdB`}j}{Edj}{b{{b{c}}}{}}{{{b{Cd}}}{{b{Cdc}}}{}}{{Edj}j}{Ih{{b{c}}}{}}{Ih{{b{Cdc}}}{}}{Ihf}3{cc{}}87{{}Ih}{{}c{}}96{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{bAAb}3``{{Jnj{Ej{B`}}{Dn{El}}AAd}j}{Jnj}=<{{JnJb}j}1{{JnjJb}j}{{Jnn}j}333=<;3:3983333333333{{Jnj}j}44{{Jn{Bl{n}}jAAf}j}15{{Jn{b{E`}}}j}65066666662:98;6656``````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{bd}f}{b{{b{c}}}{}}{{{b{Cd}}}{{b{Cdc}}}{}}{{{b{AAh}}}AAh}{{b{b{Cdc}}}f{}}{bf}{Ih{{b{c}}}{}}{Ih{{b{Cdc}}}{}}{c{{Af{AAh}}}Jf}{Ihf}{{{b{AAh}}{b{AAh}}}B`}{{{b{AAh}}{b{CdKh}}}{{Af{fKj}}}}0{cc{}}{{{b{AAh}}{b{Cdc}}}fMl}{{}Ih}{{}c{}}{{{b{AAh}}c}AfA@f}{bc{}}{bMd}{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{b{{Af{A@nAA`}}}}{bAAb}7````````{{bd}f}{b{{b{c}}}{}}{{{b{Cd}}}{{b{Cdc}}}{}}{{{b{AAj}}}AAj}{{b{b{Cdc}}}f{}}{bf}{Ih{{b{c}}}{}}{Ih{{b{Cdc}}}{}}{c{{Af{AAj}}}Jf}{Ihf}{{{b{AAj}}{b{AAj}}}B`}{{{b{AAj}}{b{CdKh}}}{{Af{fKj}}}}0{cc{}}{{{b{AAj}}{b{Cdc}}}fMl}{{}Ih}{{}c{}}{{{b{AAj}}c}AfA@f}{bc{}}{bMd}{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{b{{Af{A@nAA`}}}}{bAAb}7````````````````{{bd}f}{b{{b{c}}}{}}{{{b{Cd}}}{{b{Cdc}}}{}}{{{b{AAl}}}AAl}{{b{b{Cdc}}}f{}}{bf}{Ih{{b{c}}}{}}{Ih{{b{Cdc}}}{}}{c{{Af{AAl}}}Jf}{Ihf}{{{b{AAl}}{b{AAl}}}B`}{{b{b{c}}}B`{}}00{{{b{AAl}}{b{CdKh}}}{{Af{fKj}}}}0{cc{}}{{{b{AAl}}{b{Cdc}}}fMl}{{}Ih}{{}c{}}{{{b{AAl}}c}AfA@f}{bc{}}{bMd}{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{b{{Af{A@nAA`}}}}{bAAb}7``{{}j}{c{{Af{jAd}}}{{Bb{{A`{j}}}}}}`0{{jjc{Bf{{Ab{Bd}}}}}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}}{{jjClCn}j}{{cDb}j{{Bb{{A`{j}}}}}}{cj{{Aj{j}}}}{{{Dn{j}}}j}{{{b{E`}}}j}{{jCn}j}{{{b{{A`{j}}}}}j}{cj{{Aj{n}}}}{c{{AB`{{Dn{AAn}}}}}{{ABd{}{{I`{ABb}}}}}}{ej{{Aj{n}}}{{Ib{}{{I`{c}}}}}}{{cABf}{{AB`{ABb}}}{{Bb{{A`{ABb}}}}}}{{eB`}{{Af{jAd}}}{{Aj{j}}Eh}{{Bb{{A`{c}}}}}}11{e{{Af{jAd}}}{{Aj{j}}Eh}{{Bb{{A`{c}}}}}}{{c{b{E`}}B`}j{{Bb{{A`{j}}}}}}{{jjId}j}{{jceB`}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`CbEh}{{Bb{{A`{j}}}}}}{{ce}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`CbEh}{{Bb{{A`{j}}}}}}{{jjInJ`}j}0{Gnj}{{jjInJ`{Bl{Jb}}{Bl{n}}}j}0``{{{b{Cn}}}j}{cj{{Bb{{A`{Cn}}}}}}{H`j}{{jce}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`CbEh}{{Bb{{A`{j}}}}}}{{{b{E`}}c}{{Af{jAd}}}{{Bb{{A`{j}}}}}}``{cj{{Bb{{A`{Cl}}}}}}{{jjClCn}j}{{jjj}j}{jj}0{{jjc{Bf{{Ab{Bd}}}}}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}}{{{b{E`}}}j}00```0````2{{jjId}j}{{{b{E`}}jOd}j}{{ce}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`CbEh}{{Bb{{A`{j}}}}}}{{cj}j{{Aj{j}}}}{{jjHb}j}0``{{jjIdB`}j}6{{jjInJ`}j}0``````````{{bd}f}{b{{b{c}}}{}}00{{{b{Cd}}}{{b{Cdc}}}{}}00{{{b{Nn}}{b{Cd{A`{Bh}}}}}{{Af{{Bl{Bh}}Ad}}}}{{{b{ABh}}AAn}{{Af{AAnAd}}}}{{{b{ABh}}}ABh}{{b{b{Cdc}}}f{}}{bf}{Ih{{b{c}}}{}}00{Ih{{b{Cdc}}}{}}00{c{{Af{ABh}}}Jf}{Ihf}00{{{b{ABh}}{b{ABh}}}B`}{{b{b{c}}}B`{}}00{{{b{ABh}}{b{CdKh}}}{{Af{fKj}}}}{cc{}}00{{{ABl{ABj}}}ABh}{{{b{ABn}}{b{{Mh{Cn}}}}Mj{b{{A`{Df}}}}}{{Af{DfAd}}}}{{{b{Nn}}}{{Bl{{Bf{{Ab{Bd}}}}}}}}{{}Ih}00{{}c{}}00{{{ABl{ABj}}{Bl{Cn}}B`B`}Nn}{{{Bl{Cn}}}ABn}{{{b{ABh}}c}AfA@f}{bc{}}{c{{Af{e}}}{}{}}00{{}{{Af{c}}}{}}00{{{b{Nn}}{b{Cd{Dn{Id}}}}}{{Af{fAd}}}}{{{b{ABn}}{b{Cd{Dn{Id}}}}}{{Af{fAd}}}}{bAAb}00999`{{A@jB`}j}{A@jj}{b{{b{c}}}{}}{{{b{Cd}}}{{b{Cdc}}}{}}{{A@jjB`}j}{{A@jj}j}1{Ih{{b{c}}}{}}{Ih{{b{Cdc}}}{}}{Ihf}3{{A@jjIh}j}4{{A@j{b{E`}}}{{Af{jAd}}}}65{cc{}}6;:{{}Ih}{{}c{}}{{A@j{b{E`}}B`}j}{{A@j{Bl{Cn}}{Bl{Ih}}}j}:>>{{A@jIhAC`}j}0{{A@jjjB`}j}0{{A@jjjB`Cl}j}{A@jj}{{A@jjj}j}?;;?;??????{{A@jCnHdj}j}{{A@jj}j}{{A@jHd}j}{{A@j{Bl{Jb}}{Bl{n}}Hdj}j}{{A@jIh}j}{{A@jjB`}j}7377{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{bAAb}{{}c{}}8`````````````````````````````````{{bd}f}00000000{{ABbc}{{AB`{AAn}}}{{Bn{ACb{b{Cd{ACf{ACd}}}}{b{Cd{ACf{ACh}}}}}{{Bj{{AB`{f}}}}}}}}{{ABbB`}ABb}{{ACjc}ABb{{Bb{{A`{j}}}}}}{{}ACl}{{ACnB`}ACn}{{{Ab{AD`}}ADb}{{AB`{ABb}}}}{{ABbABbcc}ABb{{Aj{j}}}}{{ACjcADd}ABb{{Bn{AAn}{{Bj{{AB`{AAn}}}}}}C`Cb}}{{AClACl}ACl}{{{b{CdACl}}ACl}f}10{{{b{ACl}}}Ld}021{b{{b{c}}}{}}000000000{{{b{Cd}}}{{b{Cdc}}}{}}000000000{{ABbADfcDb}ABb{{Bb{{A`{j}}}}}}{ABbABb}``{{{b{ADh}}}f}{{ABb{ADj{{b{E`}}Cn}}B`}ABb}{{ABbCnB`}ABb}{{{b{ADh}}}ADh}{{{b{ABb}}}ABb}{{{b{ACj}}}ACj}{{{b{ADb}}}ADb}{{{b{ADl}}}ADl}{{{b{ADn}}}ADn}{{{b{AE`}}}AE`}{{{b{AEb}}}AEb}{{{b{ACl}}}ACl}{{b{b{Cdc}}}f{}}00000000{bf}00000000{{{b{AEd}}}{{Bl{{b{AEf}}}}}}0{{{b{ADl}}}{{Bl{{b{AEf}}}}}}{{{b{AE`}}}{{Bl{{b{AEf}}}}}}``{{ACnAEh}ACn}{ABb{{AB`{AAn}}}}{ABb{{AB`{ADh}}}}{{{b{CdABb}}}{{AB`{ADd}}}}{AClACl}{{{b{AEd}}{Dn{ABb}}}{{AB`{ABb}}}}0{{{b{ADl}}{Dn{ABb}}}{{AB`{ABb}}}}{{{b{ACl}}ACl}B`}{ABbABb}{{ABbABb{Bl{n}}}ABb}{{}ABb}{{}ADb}{{}ADn}{{}AEb}{{}ACl}{Ih{{b{c}}}{}}000000000{Ih{{b{Cdc}}}{}}000000000{{{b{ABb}}}{{AB`{Md}}}}000{{AClACl}ACl}{Ihf}{{{b{CdADh}}}f}11{{ABbe}ABb{{Aj{Ah}}}{{Ib{}{{I`{c}}}}}}22222220{{ABb{Bl{{Dn{j}}}}}ABb}8{{{b{ABb}}B`}{{AB`{Md}}}}{{ABbe}ABb{{Aj{Ah}}Eh}{{Bb{{A`{c}}}}}}{{{b{CdACl}}c}f{{Ib{}{{I`{ACl}}}}}}{{{b{ADh}}}{{Bl{{AB`{AAn}}}}}}{{ABbIh}{{AB`{AAn}}}}{{{b{ADh}}}{{AB`{AAn}}}}{{ABbc}ABb{{Aj{j}}}}0{{ABbj}ABb}{ACnABb}{AEd{{AB`{ABb}}}}0{ADl{{AB`{ABb}}}}{AE`{{AB`{ABb}}}}210{ABbABb}{{{b{ACl}}{b{CdKh}}}{{Af{fKj}}}}0000{{ACnB`}ACn}{cc{}}0{JhABb}1{ACjABb}2222222{Ld{{Bl{ACl}}}}{LdACl}00{cACl{{Ib{}{{I`{ACl}}}}}}{{{b{E`}}}{{Bl{ACl}}}}{{ABbABbcc}ABb{{Aj{j}}}}{{{b{ABb}}}ACl}{{{b{AEd}}}B`}0{{{b{ADl}}}B`}`{{ABbe}ACj{{Aj{j}}Eh}{{Bb{{A`{c}}}}}}{{ABbjcAEj}ACj{{Bb{{A`{j}}}}}}1{{ACj{Bl{Ih}}}ABb}``{{ACnAEl}ACn}```{{}Ih}0000000008{{{b{CdACl}}ACl}f}{{AClACl}ACl}{{{b{ACl}}ACl}B`}{{}c{}}000000000{ACl}{{{b{ACl}}}B`}0{{{b{ACl}}}{{AEn{ACl}}}}{{{b{ACl}}}{{AF`{ACl}}}}{{ABbABbccAFb}ABb{{Bb{{A`{j}}}}}}{ABbACn}{{ACnB`}ACn}{{ACn{Dn{j}}}ABb}{ABbABb}{AFdABb}1{{ABbABbcc}ABb{{Aj{j}}}}{{ACnc}ACn{{Bb{{A`{j}}}}}}{{ABbADf}ABb}``{{AE`B`}AE`}`{{ABbcAFf{Bl{{Ab{Kl}}}}{Bl{{b{E`}}}}}ABb{{Bn{AAn}{{Bj{{AB`{AAn}}}}}}C`Cb}}{{ABbABhAFf{Bl{ADd}}B`}ABb}777{{ABbABbc}{{AB`{ABb}}}{{Aj{n}}}}8{{{b{AEd}}}{{Bl{Ih}}}}{{{b{ADl}}}{{Bl{Ih}}}}{{{b{AE`}}}{{Bl{Ih}}}}````>{cADl{{Bb{AFh}}}}{cAE`{{Bb{AFh}}}}{{{Ab{{A`{AFj}}}}}ADl}{{{Ab{{A`{AFj}}}}}AE`}{AFlADl}{AFlAE`}{AClACl}{ABbABb}{{ACnc}ACn{{Bb{{A`{j}}}}}}{{ABb{b{Cd{ACf{ACd}}}}{b{Cd{ACf{ACh}}}}}{{AB`{ACb}}}}``{ABb{{AB`{{Ob{AAnAAn}}}}}}{{ABbjOd}ABb}{{{b{AEd}}}B`}{{{b{ADl}}}B`}{{{b{AE`}}}B`}``{{{b{CdACl}}ACl}f}{{ABbei}ABb{{Bb{E`}}}{{Ib{}{{I`{c}}}}}{{Bb{E`}}}{{Ib{}{{I`{g}}}}}}98{{ABbjcOh}ACj{{Bb{{A`{j}}}}}}{{{b{AEd}}}{{Bl{{b{AFn}}}}}}{{{b{ADl}}}{{Bl{{b{AFn}}}}}}{{{b{AE`}}}{{Bl{{b{AFn}}}}}}```{{AG`AGbB`}ABb}{{cADn}{{AB`{ABb}}}{{Bb{AFh}}}}{{{Ab{{A`{AFj}}}}ADn}{{AB`{ABb}}}}{{AFlADn}{{AB`{ABb}}}}{{cAEb}{{AB`{ABb}}}{{Bb{AFh}}}}{{{Ab{{A`{AFj}}}}AEb}{{AB`{ABb}}}}{{AFlAEb}{{AB`{ABb}}}}`{{}ACl}{{{b{CdABb}}{b{Cd{ACf{ACd}}}}{b{Cd{ACf{ACh}}}}}{{AB`{ADd}}}}{{ABbc}ABb{{Bb{{A`{j}}}}}}0{{ABbABbcc}ABb{{Aj{j}}}}{{{b{CdACl}}AClB`}f}{{{b{ABb}}{ACf{ACd}}{ACf{ACh}}}f}{{ABbc}ABb{{Aj{j}}}}{{ABbce}ABb{{Aj{j}}}{{Aj{j}}}}{{ABbcAGd}{{AB`{f}}}{{Bb{AFh}}}}{{ABbcAGf}{{AB`{f}}}{{Bb{AFh}}}}{{ABbMd{Bl{AEf}}AGf}{{AB`{f}}}}{{ABbcAGh}{{AB`{f}}}{{Bb{AFh}}}}{{ABbcAGj}{{AB`{f}}}{{Bb{AFh}}}}{{ABbMd{Bl{AEf}}AGj}{{AB`{f}}}}`{{ABbClADf}ABb}{{ABbcDb}ABb{{Il{n}}}}{{ABbcDb}ABb{{Bb{{A`{j}}}}}}{{{b{AEd}}}{{b{AFl}}}}{{{b{ADl}}}{{b{AFl}}}}{{{b{AE`}}}{{b{AFl}}}}{{ABbId}ABb}{{AClACl}ACl}{{{b{CdACl}}ACl}f}{{ACnc}ACn{{Aj{n}}}}{ABbABb}3{{ABbADf}ABb}{{ACj{Bl{Ih}}}ABb}{ABb{{AB`{AGl}}}}0{{{b{ABb}}B`}{{AB`{Md}}}}{bc{}}000000007{{ABbADfcDb}ABb{{Bb{{A`{j}}}}}}{c{{Af{e}}}{}{}}000000000{{}{{Af{c}}}{}}000000000{bAAb}000000000<{{ABb{Bl{{Dn{Md}}}}AGn}ABb}{{ABb{Bl{e}}AGn}ABb{{Aj{Ah}}Eh}{{Bb{{A`{c}}}}}}{{ABb{Bl{{Dn{n}}}}AGn}ABb}1{{ABbe}ABb{{Aj{Ah}}Eh}{{Bb{{A`{c}}}}}}{{ABbHn}ABb}`{{ACnAH`}ACn}{{ABbId}ABb}{{}c{}}000000000{{ACnABb}ACn}{{AE`{Bl{AHb}}}AE`}{{ADlB`}ADl}{{ADl{Bl{AEf}}}ADl}{{AE`{Bl{AEf}}}AE`}{{ABbB`}ABb}{{ABbj}ABb}{{ABbc}ABb{{Bb{{A`{j}}}}}}022{{ADl{Bl{n}}}ADl}{{ABbc}ABb{{Bb{{A`{ABb}}}}}}7{{ADl{Bl{ADd}}}ADl}{{ADlAHd}ADl}{{ADlId}ADl}:::{{AE`B`}AE`}5{{AE`{Bl{n}}}AE`}{{ADl{Bl{Ih}}}ADl}>=={{AEdc}AEd{{Aj{{Bl{Ih}}}}}}{{ADlc}ADl{{Aj{{Bl{Ih}}}}}}2{{AE`c}AE`{{Aj{{Bl{Ih}}}}}}{{AE`{Bl{Ih}}}AE`}>{{ADl{Bl{AHf}}}ADl}{{ABbACl}ABb}{{AEd{Ab{{A`{AFj}}}}}AEd}0{{ABbB`}ABb}0{{ADl{Bl{Id}}}ADl}{{ADlB`}ADl}{{AEdB`}AEd}1=3{{AEdc}AEd{{Aj{{Bl{AFn}}}}}}{{ABbc{Bl{ADf}}}ABb{{Aj{n}}}}{{ADlc}ADl{{Aj{{Bl{AFn}}}}}}{{ADl{Bl{AFn}}}ADl}{{AE`c}AE`{{Aj{{Bl{AFn}}}}}}{{AE`{Bl{AFn}}}AE`}{{ADl{Bl{ADd}}}ADl}{{AE`{Bl{ADd}}}AE`}{{ADlc}{{AB`{ADl}}}{{Bn{AG`}{{Bj{{AB`{AG`}}}}}}}}1{{ADlId}ADl}={{ADlIh}ADl}0>{{AEdAFl}AEd}{{ADlAFl}ADl}{{AE`AFl}AE`}{{ABbB`}ABb}{{ADlB`}ADl}01{ABbABb}{{{b{AAn}}e{Bl{i}}{Bl{m}}B`{Bl{j}}{Bl{{b{E`}}}}}{{AB`{AAn}}}{{Aj{n}}}{{Ib{}{{I`{c}}}}}{{Aj{n}}}{{Ib{}{{I`{g}}}}}{{Aj{n}}}{{Ib{}{{I`{k}}}}}}0```````````````````````````````````````````````````````````````````````````````````{{bd}f}000000000000000{{{b{In}}Cl{Bl{{b{AHh}}}}}{{Af{ClAd}}}}00{{{b{AD`}}}B`}00{{{b{AD`}}}{{b{Dj}}}}`{b{{b{c}}}{}}00000000000000000{{{b{Cd}}}{{b{Cdc}}}{}}00000000000000000{{{b{AEj}}}AEj}{{{b{Oh}}}Oh}{{{b{In}}}In}{{{b{AFb}}}AFb}{{{b{AEl}}}AEl}{{{b{AH`}}}AH`}{{{b{AGd}}}AGd}{{{b{AGf}}}AGf}{{{b{AGh}}}AGh}{{{b{AHj}}}AHj}{{{b{Of}}}Of}{{{b{AGj}}}AGj}{{{b{AHl}}}AHl}{{{b{AHn}}}AHn}{{{b{ABf}}}ABf}{{{b{Jh}}}Jh}{{b{b{Cdc}}}f{}}000000000000000{bf}000000000000000``{{{b{In}}{b{In}}}AI`}`{{b{b{c}}}AI`{}}``{{{b{Jh}}}{{Af{{Ab{{Mh{Cn}}}}Ad}}}}`{{{b{In}}}Cl}{{{b{In}}}B`}{{}AEj}{{}Oh}{{}AFb}{{}AH`}{{}AGd}{{}AGf}{{}AGh}{{}Of}{{}AGj}{{}AHn}{{}ABf}{{}Jh}{Ih{{b{c}}}{}}00000000000000000{Ih{{b{Cdc}}}{}}00000000000000000`{{{b{Jh}}}{{Af{MdAd}}}}0{c{{Af{AEj}}}Jf}{c{{Af{Oh}}}Jf}{c{{Af{In}}}Jf}{c{{Af{AFb}}}Jf}{c{{Af{AEl}}}Jf}{c{{Af{AH`}}}Jf}{c{{Af{AGd}}}Jf}{c{{Af{AGf}}}Jf}{c{{Af{AGh}}}Jf}{c{{Af{AHj}}}Jf}{c{{Af{Of}}}Jf}{c{{Af{AGj}}}Jf}{c{{Af{AHl}}}Jf}{c{{Af{AHn}}}Jf}{c{{Af{ABf}}}Jf}{c{{Af{Jh}}}Jf}`{{{b{Jh}}}{{Af{{`{Nb}}Ad}}}}{Ihf}00000000000000000{{{b{AEj}}{b{AEj}}}B`}{{{b{Oh}}{b{Oh}}}B`}{{{b{In}}{b{In}}}B`}{{{b{AFb}}{b{AFb}}}B`}{{{b{AEl}}{b{AEl}}}B`}{{{b{AH`}}{b{AH`}}}B`}{{{b{AGd}}{b{AGd}}}B`}{{{b{AGf}}{b{AGf}}}B`}{{{b{AGh}}{b{AGh}}}B`}{{{b{AHj}}{b{AHj}}}B`}{{{b{Of}}{b{Of}}}B`}{{{b{AGj}}{b{AGj}}}B`}{{{b{AHl}}{b{AHl}}}B`}{{{b{AHn}}{b{AHn}}}B`}{{{b{ABf}}{b{ABf}}}B`}{{b{b{c}}}B`{}}00000000000000000000000000000000000`{{{b{AEj}}{b{CdKh}}}{{Af{fKj}}}}{{{b{Oh}}{b{CdKh}}}{{Af{fKj}}}}{{{b{In}}{b{CdKh}}}{{Af{fKj}}}}0{{{b{AD`}}{b{CdKh}}}{{Af{fKj}}}}{{{b{AFb}}{b{CdKh}}}{{Af{fKj}}}}{{{b{AEl}}{b{CdKh}}}{{Af{fKj}}}}0{{{b{AH`}}{b{CdKh}}}{{Af{fKj}}}}0{{{b{AGd}}{b{CdKh}}}{{Af{fKj}}}}{{{b{AGf}}{b{CdKh}}}{{Af{fKj}}}}{{{b{AGh}}{b{CdKh}}}{{Af{fKj}}}}{{{b{AHj}}{b{CdKh}}}{{Af{fKj}}}}{{{b{Of}}{b{CdKh}}}{{Af{fKj}}}}{{{b{AGj}}{b{CdKh}}}{{Af{fKj}}}}{{{b{AHl}}{b{CdKh}}}{{Af{fKj}}}}{{{b{AHn}}{b{CdKh}}}{{Af{fKj}}}}{{{b{ABf}}{b{CdKh}}}{{Af{fKj}}}}`{cc{}}0000{AElAFb}1111111111111`{{{b{AHl}}}Cn}{{{b{AIb}}{Dn{Bh}}{b{AEj}}}{{Af{{Ob{Bh{Dn{Bh}}AId}}Ad}}}}{{{b{AEj}}{b{Cdc}}}fMl}{{{b{Oh}}{b{Cdc}}}fMl}{{{b{In}}{b{Cdc}}}fMl}{{{b{AFb}}{b{Cdc}}}fMl}{{{b{AEl}}{b{Cdc}}}fMl}{{{b{AH`}}{b{Cdc}}}fMl}{{{b{AGd}}{b{Cdc}}}fMl}{{{b{AGf}}{b{Cdc}}}fMl}{{{b{AGh}}{b{Cdc}}}fMl}{{{b{AHj}}{b{Cdc}}}fMl}{{{b{Of}}{b{Cdc}}}fMl}{{{b{AGj}}{b{Cdc}}}fMl}{{{b{AHl}}{b{Cdc}}}fMl}{{{b{AHn}}{b{Cdc}}}fMl}{{{b{ABf}}{b{Cdc}}}fMl}``````{{}Ih}00000000000000000{{}c{}}00000000000000000{{{b{Jh}}}}{{{b{AEl}}}B`}{{{b{In}}{Bl{{b{E`}}}}}B`}{{{b{In}}}B`}{{{b{AHl}}}B`}{{{b{AH`}}{b{AEl}}}{{Af{fAd}}}}2``{Nhj}{Inj}{AIfj}{AHlj}````{AHlAHl}`{{{b{In}}}Cl}8{{InCl}In}`1{{{b{AH`}}}B`}{In};{ClIn}{AElAFb}{{{b{AD`}}AIh}{{Af{{Bl{AAn}}Ad}}}}````{{{b{E`}}}In}`{{{b{In}}{b{In}}}{{Bl{AI`}}}}```{Jh{{Af{{Dn{Id}}Ad}}}}`{{{b{AIb}}{Dn{Bh}}{b{Oh}}}{{Af{{Ob{Bh{Dn{Bh}}AId}}Ad}}}}`{{{b{AD`}}AIh}{{Af{AAnAd}}}}{{{b{AD`}}{Bl{Ih}}}{{Af{{Ab{{Mh{Cn}}}}Ad}}}}`{{{b{AEj}}c}AfA@f}{{{b{Oh}}c}AfA@f}{{{b{In}}c}AfA@f}{{{b{AFb}}c}AfA@f}{{{b{AEl}}c}AfA@f}{{{b{AH`}}c}AfA@f}{{{b{AGd}}c}AfA@f}{{{b{AGf}}c}AfA@f}{{{b{AGh}}c}AfA@f}{{{b{AHj}}c}AfA@f}{{{b{Of}}c}AfA@f}{{{b{AGj}}c}AfA@f}{{{b{AHl}}c}AfA@f}{{{b{AHn}}c}AfA@f}{{{b{ABf}}c}AfA@f}{{{b{Jh}}c}AfA@f}`{{{b{AFb}}}B`}````{{{b{AFb}}}{{b{n}}}}`{Jh{{Af{AGlAd}}}}{{{b{AHl}}}{{Bl{AIj}}}}{bc{}}000000000000000{bMd}00`{{{b{AGf}}c}{{AIl{c}}}AIn}{{{b{AGj}}c}{{AJ`{c}}}AIn}{{{b{In}}Cl{Bl{{b{AHh}}}}ceg}{{Af{ClAd}}}{{Bn{Cl}{{Bj{Cl}}}}}{{Bn{Cl}{{Bj{AJb}}}}}{{Bn{AJb}{{Bj{Cl}}}}}}{{{b{In}}Cl{Bl{{b{AHh}}}}}{{Af{ClAd}}}}00{c{{Af{e}}}{}{}}0000000000000{AIj{{Af{AHlAd}}}}1111{{}{{Af{c}}}{}}00000000000000000{b{{Af{A@nAA`}}}}00{bAAb}00000000000000000`{{}c{}}00000000000000000{{{b{In}}}Cl}{{{b{In}}}B`}{{AFbAEh}AFb}`{{AFb{Bl{n}}}AFb}{{{b{AGf}}AAnc}{{Af{fAd}}}AIn}{{{b{AGj}}AAnc}{{Af{fAd}}}AIn}``````````````````````````````````````````````````````","D":"GJ`","p":[[1,"reference"],[5,"Private",3582],[1,"unit"],[5,"MetaNameSpace",5,3583],[6,"Expr",5,3584],[5,"StructNameSpace",5,3585],[5,"PlSmallStr",3586],[1,"slice"],[5,"Arc",3587],[6,"PolarsError",3588],[6,"Result",3589],[6,"Selector",5,3590],[10,"Into",3591],[5,"ArrayNameSpace",5,3592],[5,"ListNameSpace",5,3593],[1,"bool"],[10,"AsRef",3591],[10,"FunctionOutputField",5,3594],[5,"SpecialEq",5,3594],[6,"Column",3595],[17,"Output"],[6,"Option",3596],[10,"Fn",3597],[10,"Send",3598],[10,"Sync",3598],[0,"mut"],[6,"VisitRecursion",3599],[10,"FnMut",3597],[6,"FunctionExpr",5,3600],[1,"i64"],[6,"DataType",3601],[5,"SortOptions",3602],[5,"SortMultipleOptions",3602],[5,"FieldsMapper",5,3603],[5,"Field",3604],[10,"ColumnsUdf",5,3594],[10,"Any",3605],[6,"AggExpr",5,3584],[5,"Vec",3606],[1,"str"],[1,"u64"],[5,"BinaryNameSpace",1733,3607],[6,"Operator",5,3584],[10,"Clone",3608],[1,"array"],[1,"i32"],[10,"RenameAliasFn",5,3594],[5,"UserDefinedFunction",5,3609],[10,"ColumnBinaryUdf",5,3594],[6,"CastOptions",3610],[5,"CategoricalNameSpace",5,3611],[5,"When",5,3612],[5,"Then",5,3612],[5,"ChainedWhen",5,3612],[5,"ChainedThen",5,3612],[6,"Excluded",5,3584],[6,"BooleanFunction",5,3613],[6,"CategoricalFunction",5,3614],[6,"TemporalFunction",5,3615],[6,"PowFunction",5,3616],[6,"StringFunction",5,3617],[6,"StructFunction",5,3618],[5,"DatetimeArgs",5,3619],[5,"DurationArgs",5,3619],[5,"RollingCovOptions",5,3620],[5,"StrptimeOptions",5,3620],[5,"JoinOptions",5,3620],[6,"WindowType",5,3620],[6,"WindowMapping",5,3620],[6,"NestedType",5,3620],[5,"UnpivotArgsDSL",5,3620],[17,"Item"],[10,"IntoIterator",3621],[1,"u8"],[10,"ExprEvalExtension",5,3622],[1,"usize"],[1,"f64"],[10,"IntoVec",3623],[5,"Duration",2905,3624],[6,"ClosedWindow",3625],[6,"TimeUnit",3626],[10,"BinaryUdfOutputField",5,3594],[10,"Deserializer",3627],[6,"DslPlan",2905,3628],[5,"Series",3629],[6,"NullBehavior",3630],[5,"DateLikeNameSpace",1755,3631],[10,"Sized",3598],[10,"ListNameSpaceExtension",5,3632],[5,"EWMOptions",3633],[6,"FillNullStrategy",3634],[5,"Formatter",3635],[5,"Error",3635],[10,"UdfSchema",5,3636],[1,"u16"],[1,"i16"],[1,"i8"],[1,"u32"],[1,"f32"],[6,"InequalityOperator",3637],[6,"BusinessFunction",3638],[6,"RangeFunction",3639],[6,"ListFunction",3640],[6,"ArrayFunction",3641],[6,"BinaryFunction",3642],[5,"String",3643],[5,"FunctionOptions",3644],[5,"Schema",3645],[6,"Context",3628],[10,"Hasher",3646],[6,"InterpolationMethod",3647],[10,"IntoListNameSpace",5,3632],[10,"Display",3635],[6,"ClosedInterval",3648],[5,"ExprNameNameSpace",5,3649],[10,"Literal",2905,3650],[10,"FnOnce",3597],[5,"SuperTypeOptions",3651],[5,"PythonUdfExpression",2290,3652],[5,"UnitVec",3653],[1,"tuple"],[6,"QuantileInterpolOptions",3654],[5,"RankOptions",2905,3655],[5,"RollingGroupOptions",2905,3656],[5,"RollingOptionsFixedWindow",3657],[5,"Float64Type",3658],[5,"ChunkedArray",3659],[10,"Copy",3598],[5,"RollingOptionsDynamicWindow",3660],[6,"SearchSortedSide",3661],[10,"Serializer",3662],[6,"IsSorted",3663],[5,"StringNameSpace",2352,3664],[6,"ListToStructWidthStrategy",3665],[5,"CompactString",3666],[6,"ToCompactStringError",3666],[5,"TypeId",3605],[6,"Roll",3667],[6,"NonExistent",3668],[6,"RollingFunction",2104,3669],[6,"RollingFunctionBy",2138,3670],[6,"TrigonometricFunction",2171,3671],[5,"DataFrame",3672],[8,"PolarsResult",3588],[5,"LazyFrame",2419],[10,"IntoParallelIterator",3673],[5,"UnionArgs",2905,3644],[5,"PythonFunction",2290,3652],[5,"PyAny",3674],[5,"Py",3675],[5,"PythonGetOutput",2290,3652],[1,"char"],[5,"Node",3676],[6,"IR",3677],[5,"Arena",3676],[6,"AExpr",3678],[5,"LazyGroupBy",2419],[5,"OptFlags",2419,3679],[5,"JoinBuilder",2419],[10,"AnonymousScan",2905,3680],[5,"ScanArgsAnonymous",2419,3681],[8,"SchemaRef",3682],[8,"IdxSize",3683],[5,"InProcessQuery",2419,3684],[8,"PlHashMap",3685],[5,"LazyCsvReader",2419,3686],[5,"ScanArgsIpc",2419,3687],[5,"LazyJsonLineReader",2419,3688],[5,"ScanArgsParquet",2419,3689],[10,"LazyFileListReader",2419,3690],[5,"CloudOptions",3691],[6,"JoinCoalesce",3692],[5,"DynamicGroupOptions",2905,3656],[6,"JoinType",2905,3692],[5,"Iter",3693],[5,"IterNames",3693],[5,"JoinArgs",2905,3692],[10,"IntoLazy",2419],[8,"AllowedOptimizations",2419,3679],[5,"Path",3694],[5,"PathBuf",3694],[6,"ScanSources",3695],[5,"RowIndex",3696],[8,"Schema",3682],[8,"PyObject",3675],[5,"CsvWriterOptions",2905,3697],[5,"IpcWriterOptions",2905,3698],[5,"JsonWriterOptions",2905,3699],[5,"ParquetWriteOptions",2905,3700],[5,"IRPlan",3677],[6,"UniqueKeepStrategy",3672],[6,"JoinValidation",2905,3692],[8,"NonZeroUsize",3701],[6,"CsvEncoding",3702],[6,"NullValues",3702],[6,"Tz",3703],[6,"RankMethod",2905,3655],[6,"LiteralValue",2905,3650],[5,"AnonymousScanOptions",2905,3644],[6,"Ordering",3704],[10,"PolarsTemporalGroupby",2905,3656],[6,"GroupsProxy",3705],[5,"Null",2905,3650],[5,"AnonymousScanArgs",2905,3680],[6,"AnyValue",3706],[5,"IpcWriter",3698],[10,"Write",3707],[5,"ParquetWriter",3708],[5,"NaiveDateTime",3709],[15,"Quantile",1621],[15,"Min",1621],[15,"Max",1621],[15,"IsBetween",2028],[15,"Any",2028],[15,"All",2028],[15,"SortBy",1631],[15,"Filter",1631],[15,"Cast",1631],[15,"Sort",1631],[15,"Gather",1631],[15,"RenameAlias",1631],[15,"Ternary",1631],[15,"Function",1631],[15,"Window",1631],[15,"AnonymousFunction",1631],[15,"Slice",1631],[15,"BinaryExpr",1631],[15,"QCut",2031],[15,"Entropy",2031],[15,"Log",2031],[15,"Hist",2031],[15,"Cut",2031],[15,"Correlation",2031],[15,"Round",2031],[15,"TopK",2031],[15,"TopKBy",2031],[15,"RoundSF",2031],[15,"EwmMeanBy",2031],[15,"Clip",2031],[15,"BackwardFill",2031],[15,"ForwardFill",2031],[15,"Random",2031],[15,"GatherEvery",2031],[15,"ValueCounts",2031],[15,"Rank",2031],[15,"EwmMean",2031],[15,"EwmStd",2031],[15,"EwmVar",2031],[15,"ReplaceStrict",2031],[15,"CumCount",2031],[15,"CumSum",2031],[15,"CumProd",2031],[15,"CumMin",2031],[15,"CumMax",2031],[15,"ConcatHorizontal",2076],[15,"ConcatVertical",2076],[15,"ExtractGroups",2076],[15,"JsonDecode",2076],[15,"PadStart",2076],[15,"PadEnd",2076],[15,"SplitExact",2076],[15,"Contains",2076],[15,"Find",2076],[15,"Replace",2076],[15,"DatetimeFunction",2096],[15,"GroupBy",3528],[15,"Union",3528],[15,"Sort",3528],[15,"ExtContext",3528],[15,"DataFrameScan",3528],[15,"IR",3528],[15,"Select",3528],[15,"HStack",3528],[15,"Scan",3528],[15,"MapFunction",3528],[15,"Cache",3528],[15,"Filter",3528],[15,"Distinct",3528],[15,"Slice",3528],[15,"Sink",3528],[15,"Join",3528],[15,"HConcat",3528],[15,"PythonScan",3528],[15,"Range",3579]],"r":[[8,3584],[22,3592],[31,3594],[33,3613],[38,3614],[39,3611],[43,3612],[44,3612],[48,3594],[50,3594],[69,3619],[79,3619],[89,3584],[94,3584],[95,3622],[96,3649],[104,3603],[105,3649],[115,3600],[116,3594],[122,3594],[137,3632],[153,3620],[165,3593],[166,3632],[181,3583],[200,3620],[207,3584],[218,3616],[230,3594],[241,3620],[250,3590],[262,3594],[270,3617],[277,3620],[279,3618],[280,3585],[288,3615],[290,3612],[310,3636],[313,3620],[316,3609],[321,3612],[324,3620],[325,3620],[369,3710],[373,3711],[380,3711],[383,3712],[387,3713],[389,3714],[404,3715],[406,3715],[412,3716],[413,3717],[415,3713],[417,3612],[490,3718],[497,3717],[500,3713],[588,3711],[589,3710],[590,3710],[591,3719],[592,3719],[593,3719],[602,3720],[604,3711],[608,3711],[613,3714],[614,3619],[615,3714],[616,3714],[766,3713],[768,3710],[769,3710],[770,3619],[865,3713],[907,3711],[910,3719],[982,3713],[1028,3710],[1064,3714],[1065,3714],[1119,3717],[1121,3717],[1131,3713],[1134,3713],[1138,3650],[1148,3712],[1159,3713],[1162,3713],[1169,3717],[1173,3711],[1174,3717],[1177,3711],[1178,3717],[1186,3717],[1190,3711],[1217,3717],[1219,3713],[1232,3720],[1239,3713],[1242,3717],[1246,3711],[1250,3721],[1263,3720],[1264,3720],[1341,3720],[1349,3713],[1355,3717],[1359,3711],[1366,3612],[1369,3714],[1538,3713],[1590,3612],[1733,3607],[1754,3611],[1755,3631],[1828,3613],[1832,3614],[1879,3600],[1941,3616],[1980,3617],[1988,3618],[1993,3615],[2023,3600],[2024,3600],[2025,3600],[2026,3600],[2027,3600],[2098,3614],[2102,3616],[2108,3669],[2142,3670],[2186,3671],[2215,3619],[2216,3619],[2217,3710],[2218,3711],[2220,3711],[2221,3712],[2222,3714],[2223,3715],[2224,3715],[2225,3716],[2226,3717],[2227,3717],[2228,3711],[2229,3710],[2231,3710],[2233,3719],[2236,3719],[2237,3719],[2238,3720],[2239,3711],[2240,3711],[2241,3714],[2242,3714],[2243,3619],[2244,3714],[2245,3714],[2248,3710],[2249,3710],[2250,3619],[2251,3711],[2252,3719],[2255,3710],[2256,3714],[2257,3714],[2258,3717],[2259,3717],[2260,3712],[2261,3717],[2262,3717],[2263,3717],[2267,3717],[2272,3717],[2273,3720],[2274,3717],[2275,3711],[2276,3721],[2277,3720],[2278,3720],[2281,3720],[2282,3717],[2283,3714],[2284,3714],[2290,3652],[2291,3652],[2292,3652],[2293,3652],[2294,3652],[2352,3664],[2413,3609],[2419,3679],[2426,3684],[2429,3686],[2430,3690],[2433,3688],[2435,3679],[2442,3681],[2443,3687],[2444,3689],[2905,3680],[2906,3680],[2907,3644],[2915,3697],[2922,3628],[2923,3624],[2925,3656],[2943,3698],[2945,3692],[2946,3692],[2947,3692],[2948,3699],[2950,3650],[2951,3650],[2957,3650],[2958,3650],[2964,3700],[2965,3656],[2968,3655],[2969,3655],[2971,3656],[2987,3644],[3385,3722]],"b":[[621,"impl-Default-for-SpecialEq%3CArc%3Cdyn+BinaryUdfOutputField%3E%3E"],[622,"impl-Default-for-SpecialEq%3CArc%3Cdyn+FunctionOutputField%3E%3E"],[623,"impl-Default-for-SpecialEq%3CArc%3Cdyn+ColumnBinaryUdf%3E%3E"],[705,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CArc%3Cdyn+FunctionOutputField%3E%3E"],[706,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CArc%3CDslPlan%3E%3E"],[707,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CArc%3Cdyn+RenameAliasFn%3E%3E"],[708,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CSeries%3E"],[709,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[773,"impl-Expr"],[774,"impl-PartialEq-for-Expr"],[777,"impl-PartialEq-for-SpecialEq%3CArc%3CT%3E%3E"],[778,"impl-PartialEq-for-SpecialEq%3CSeries%3E"],[876,"impl-Display-for-Expr"],[877,"impl-Debug-for-Expr"],[879,"impl-Debug-for-Operator"],[880,"impl-Display-for-Operator"],[882,"impl-Debug-for-BooleanFunction"],[883,"impl-Display-for-BooleanFunction"],[884,"impl-Debug-for-CategoricalFunction"],[885,"impl-Display-for-CategoricalFunction"],[886,"impl-Debug-for-TemporalFunction"],[887,"impl-Display-for-TemporalFunction"],[888,"impl-Debug-for-PowFunction"],[889,"impl-Display-for-PowFunction"],[890,"impl-Display-for-StringFunction"],[891,"impl-Debug-for-StringFunction"],[892,"impl-Debug-for-StructFunction"],[893,"impl-Display-for-StructFunction"],[894,"impl-Debug-for-FunctionExpr"],[895,"impl-Display-for-FunctionExpr"],[924,"impl-From%3C%26str%3E-for-Expr"],[925,"impl-From%3Cu8%3E-for-Expr"],[926,"impl-From%3Cu16%3E-for-Expr"],[928,"impl-From%3Ci16%3E-for-Expr"],[929,"impl-From%3Ci8%3E-for-Expr"],[930,"impl-From%3Cu32%3E-for-Expr"],[931,"impl-From%3Cbool%3E-for-Expr"],[932,"impl-From%3Cf64%3E-for-Expr"],[933,"impl-From%3Ci32%3E-for-Expr"],[934,"impl-From%3Ci64%3E-for-Expr"],[935,"impl-From%3Cf32%3E-for-Expr"],[936,"impl-From%3Cu64%3E-for-Expr"],[937,"impl-From%3CAggExpr%3E-for-Expr"],[941,"impl-From%3CBusinessFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[942,"impl-From%3CBooleanFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[943,"impl-From%3CTemporalFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[944,"impl-From%3CStructFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[945,"impl-From%3CStringFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[946,"impl-From%3CRangeFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[947,"impl-From%3CListFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[948,"impl-From%3CArrayFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[949,"impl-From%3CCategoricalFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[951,"impl-From%3CBinaryFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[952,"impl-From%3CFunctionExpr%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[959,"impl-From%3CBooleanFunction%3E-for-FunctionExpr"],[960,"impl-From%3CStringFunction%3E-for-FunctionExpr"],[961,"impl-From%3CCategoricalFunction%3E-for-FunctionExpr"],[962,"impl-From%3CBinaryFunction%3E-for-FunctionExpr"],[974,"impl-From%3C%26str%3E-for-Selector"],[976,"impl-From%3CExpr%3E-for-Selector"],[977,"impl-From%3CPlSmallStr%3E-for-Selector"],[978,"impl-From%3CString%3E-for-Selector"],[1002,"impl-Expr"],[1003,"impl-Hash-for-Expr"],[1301,"impl-Serialize-for-SpecialEq%3CArc%3Cdyn+RenameAliasFn%3E%3E"],[1302,"impl-Serialize-for-SpecialEq%3CSeries%3E"],[1303,"impl-Serialize-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[1304,"impl-Serialize-for-SpecialEq%3CArc%3Cdyn+FunctionOutputField%3E%3E"],[1305,"impl-Serialize-for-SpecialEq%3CArc%3CDslPlan%3E%3E"],[2124,"impl-Debug-for-RollingFunction"],[2125,"impl-Display-for-RollingFunction"],[2157,"impl-Display-for-RollingFunctionBy"],[2158,"impl-Debug-for-RollingFunctionBy"],[2201,"impl-Display-for-TrigonometricFunction"],[2202,"impl-Debug-for-TrigonometricFunction"],[2467,"impl-OptFlags"],[2468,"impl-Flags-for-OptFlags"],[2605,"impl-LowerHex-for-OptFlags"],[2606,"impl-UpperHex-for-OptFlags"],[2607,"impl-Binary-for-OptFlags"],[2608,"impl-Octal-for-OptFlags"],[2609,"impl-Debug-for-OptFlags"],[2613,"impl-From%3CDslPlan%3E-for-LazyFrame"],[2615,"impl-From%3CLazyGroupBy%3E-for-LazyFrame"],[2624,"impl-OptFlags"],[2625,"impl-Flags-for-OptFlags"],[2863,"impl-LazyFileListReader-for-LazyCsvReader"],[2864,"impl-LazyCsvReader"],[2865,"impl-LazyFileListReader-for-LazyJsonLineReader"],[2866,"impl-LazyJsonLineReader"],[2882,"impl-LazyFileListReader-for-LazyCsvReader"],[2883,"impl-LazyCsvReader"],[2884,"impl-LazyFileListReader-for-LazyJsonLineReader"],[2885,"impl-LazyJsonLineReader"],[3248,"impl-Debug-for-Duration"],[3249,"impl-Display-for-Duration"],[3252,"impl-Display-for-JoinType"],[3253,"impl-Debug-for-JoinType"],[3254,"impl-Display-for-JoinValidation"],[3255,"impl-Debug-for-JoinValidation"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAC4KCAEEABIAGAAPACkAAgAuAAIAMgAAADQAEQBHAAgAUQAHAFoAAwBgAAAAYgAZAH0AGwCaAAMAnwAGAKcADgC3ABUAzgAEANQAJwD9AAkACAEQABoBBwAkARgAPgEDAEMBAABFAScAbgEBAHQBAAB3AQEAewEAAIEBAACDAQAAjgEAAJEBAACYAQEAmwEBAKABAACjAUUA6wEAAO0BAADvAQEA9QEAAPwBUABQAgAAagINAHkCXADYAgAA2gIhAP0CAAD/AgAABQMAAAcDEwAcAzIAVwMAAFoDAQBgAwAAZgMAAGkDIgCNAwAAnQMCAKEDCQCtAwkAuAMBAMADAwDLAwAAzwMAANEDAgDVAwAA1wMAANwDAQDhAwUA6gMAAOwDEQABBAEABAQAAAYEIQBPBAIAUwQBAFcEAABpBAAAcQQAAH4EAACBBAUAigQAAI0EAACdBAAAoAQCAKgEAgCsBAMAtQQBALkEAgC+BAAAwAQBAMYEAADNBAAAzwQBANYEAADYBAAA4AQBAOYEAADoBAAA6gQAAO8EAgAJBQUAEAUZADMFAAA6BQAAQQUAAEYFAABIBQEASwUAAFEFAQBXBQAAWQUAAFsFAgBiBRsAfwUJAI0FQwDTBQAA1QUuAA8GAAARBgAAEwYjADoGAQA/BgAATAYAAFAGAQBVBhMAawYAAG0GAABvBgEAcgYBAHUGBgB9BkgAxwYDAMwGAgDRBgIA1wYDAN8GAQDoBgIA7gYAAPAGAAD9BgAADAcDABQHOgFQCAEAUwgcAHEIAQB0CCcAnQgBAKAIBwCsCAAAuggAAMcIAQDOCAEA2QgCAN0IAwDmCAMA7ggHAPcIGwAWCQUAHwkRADIJAwA5CQIAPwkAAEQJAgBJCQEAaQkDAHsJAwCCCQEAiwkCAI8JCQCdCQAApQkAAKgJFAC+CQEAwwkaAOIJAQDmCQAA6wkAAO8JGAANCgMAEgoGACkKAAArCgEALgoEADYKAAA4CgAAQgoAAEgKAgBQCgEAUwoMAG4KAAB2CgAAeAoBAH0KAQCACgAAggoAAIYKAACLCgMAkAoFAJkKAQCfCgMAqwoDALAKAQC1CgIAuQoAALwKAADFCgAAygoBANQKAQDXCggA4QoeAAILAAAECwAABwsBAAoLCQAVCwAAFwsBACALAQApCwEAMAsAADILAAA0CwAAQwsAAEULAABRCwEAWAsHAGMLAABmCwEAaQsAAGsLAwBxCwAAdAsAAHgLAwCACwAAggsGAIwLAgCQCwAAkwsKAJ8LAgCkCwAApgsAAKwLEwDDC1oAIgyLAK8MEwDIDAAA1gwAANgMEQDrDAAA7gwRABINAgAWDQEAGQ0AABwNAwAjDQUAKg0BAC4NAAAxDQIANQ0BADkNAAA7DQEAQA0VAFcNpwA="}],["polars_ops",{"t":"CCCCKKKMNNNNNNNNCMNNNNNNCKKMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKMKKCMIIPPKKPPIFGKPGGPPIPPPPPKNNNNHNNENNHNNNNNNNNNNNNNNNNNNNNNONNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNONNNHNONONNNNNNNNNNNNNNNNNNNNONNEEPKPPGKKNMMMNNHHHNNNHHNNNNNNNNNNNNNNNHNNHHHHHHHNNNNNN","n":["chunked_array","frame","prelude","series","AsBinary","BinaryNameSpaceImpl","ChunkedSet","as_binary","contains","","contains_chunked","","ends_with","","ends_with_chunked","","list","scatter","size_bytes","","starts_with","","starts_with_chunked","","strings","AsList","ListNameSpaceImpl","as_list","join_literal","","join_many","","lst_arg_max","","lst_arg_min","","lst_concat","","lst_get","","lst_join","","lst_lengths","","lst_max","","lst_mean","","lst_median","","lst_min","","lst_n_unique","","lst_reverse","","lst_shift","","lst_slice","","lst_sort","","lst_std","","lst_sum","","lst_unique","","lst_unique_stable","","lst_var","","same_type","","AsString","as_string","DataFrameOps","IntoDf","join","to_df","ChunkJoinIds","ChunkJoinOptIds","CoalesceColumns","Cross","CrossJoin","DataFrameJoinOps","Full","Inner","InnerJoinIds","JoinArgs","JoinCoalesce","JoinDispatch","JoinSpecific","JoinType","JoinValidation","KeepColumns","Left","LeftJoinIds","ManyToMany","ManyToOne","OneToMany","OneToOne","Right","SeriesJoin","__clone_box","","","","_coalesce_full_join","_create_left_df_from_slice","","_finish_join","_full_join_from_series","","_join_suffix_name","borrow","","","","borrow_mut","","","","clone","","","","clone_into","","","","clone_to_uninit","","","","coalesce","","cross_join","","cross_join_dfs","","default","","","default_join_ids","deref","","","","deref_mut","","","","drop","","","","eq","","","","equivalent","","","","","","","","","","","","fmt","","","","","","from","","","","","full_join","hash","","","","hash_join_inner","","hash_join_outer","","how","init","","","","inner_join","into","","","","is_asof","is_valid_join","join","join_nulls","left_join","needs_checks","new","private_left_join_multiple_keys","should_coalesce","slice","suffix","","to_owned","","","","to_string","","try_from","","","","try_into","","","","try_to_compact_string","","type_id","","","","validation","with_coalesce","with_suffix","DataFrameJoinOps","DataFrameOps","Any","ArgAgg","Left","Right","SearchSortedSide","SeriesMethods","SeriesSealed","__clone_box","arg_max","arg_min","as_series","borrow","borrow_mut","clip","clip_max","clip_min","clone","clone_into","clone_to_uninit","coalesce_columns","convert_to_unsigned_index","default","deref","deref_mut","drop","ensure_sorted_arg","","eq","equivalent","","","fmt","from","hash","init","into","is_positive_idx_uncertain","is_sorted","","max_horizontal","mean_horizontal","min_horizontal","negate","negate_bitwise","new_int_range","sum_horizontal","to_owned","try_from","try_into","type_id","value_counts",""],"q":[[0,"polars_ops"],[4,"polars_ops::chunked_array"],[25,"polars_ops::chunked_array::list"],[74,"polars_ops::chunked_array::strings"],[76,"polars_ops::frame"],[80,"polars_ops::frame::join"],[238,"polars_ops::prelude"],[240,"polars_ops::series"],[292,"polars_ops::chunked_array::binary"],[293,"polars_core::datatypes"],[294,"polars_ops::chunked_array::binary::namespace"],[295,"polars_ops::chunked_array::scatter"],[296,"polars_utils::index"],[297,"polars_core::series"],[298,"polars_error"],[299,"core::marker"],[300,"core::option"],[301,"core::iter::traits::collect"],[302,"polars_ops::chunked_array::list::namespace"],[303,"polars_core::datatypes::aliases"],[304,"polars_core::frame::column"],[305,"polars_core::chunked_array::ops::sort::options"],[306,"polars_core::frame"],[307,"dyn_clone::sealed"],[308,"polars_utils::pl_str"],[309,"polars_ops::frame::join::hash_join"],[310,"polars_ops::frame::join::args"],[311,"polars_ops::frame::join::cross_join"],[312,"core::fmt"],[313,"core::convert"],[314,"core::hash"],[315,"polars_ops::frame::join::hash_join::single_keys_dispatch"],[316,"polars_arrow::array::primitive"],[317,"alloc::string"],[318,"core::result"],[319,"compact_str"],[320,"core::any"],[321,"polars_ops::series::ops::arg_min_max"],[322,"polars_ops::series::ops"],[323,"polars_core::chunked_array::ops::search_sorted"],[324,"polars_ops::series::ops::various"],[325,"polars_ops::frame::join::general"],[326,"polars_ops::series::ops::clip"],[327,"polars_ops::series::ops::horizontal"],[328,"polars_ops::series::ops::index"],[329,"polars_ops::series::ops::negate"],[330,"polars_ops::series::ops::not"],[331,"polars_ops::series::ops::int_range"]],"i":"```````bh0000000`A`111111```BbBf000000000000000000000000000000000000000000000`Ch```Cj``DjDl``00````1``10`Dn0001`Df321`Dd0`00`1432143214321432143241E`000253`254325432543254322255544433325443322543Ej3654F`00044765147656514154`444447656547654765654765444``Gf`00```0Gb0Gd22```222``2222Gh0333333333`00```````333300","f":"```````{{{d{b}}}{{d{f}}}}{{{d{h}}{d{{l{j}}}}}n}0{{{d{h}}{d{f}}}n}01100`{{A`{d{{l{Ab}}}}e}{{Af{Ad}}}Ah{{An{}{{Aj{{Al{c}}}}}}}}{{{d{h}}}B`}03322```{{{d{Bb}}}{{d{Bd}}}}{{{d{Bf}}{d{Bh}}Bj}{{Af{Bl}}}}0{{{d{Bf}}{d{Bl}}Bj}{{Af{Bl}}}}0{{{d{Bf}}}Bn}000{{{d{Bf}}{d{{l{C`}}}}}{{Af{Bd}}}}0{{{d{Bf}}CbBj}{{Af{Ad}}}}03322{{{d{Bf}}}{{Af{Ad}}}}0{{{d{Bf}}}Ad}00011{{{d{Bf}}}{{Af{Bn}}}}0{{{d{Bf}}}Bd}0{{{d{Bf}}{d{C`}}}{{Af{Bd}}}}0{{{d{Bf}}CbCd}Bd}0{{{d{Bf}}Cf}{{Af{Bd}}}}0{{{d{Bf}}j}Ad}077{{{d{Bf}}}{{Af{Bd}}}}00011{{{d{Bf}}Bd}Bd}0`{{{d{Ch}}}{{d{Bl}}}}```{{{d{Cj}}}{{d{Cl}}}}````````````````````````{{dCn}D`}000{{Cl{d{{l{Db}}}}{d{{l{Db}}}}{Al{Db}}{d{Cl}}}Cl}{{{d{Dd}}{d{{l{Ab}}}}BjBj}Cl}0`{{{d{Dd}}{d{Cl}}{d{Ad}}{d{Ad}}Df}{{Af{Cl}}}}0{{{d{Bh}}{d{Bh}}}Db}{d{{d{c}}}{}}000{{{d{Dh}}}{{d{Dhc}}}{}}000{{{d{Df}}}Df}{{{d{Dj}}}Dj}{{{d{Dl}}}Dl}{{{d{Dn}}}Dn}{{d{d{Dhc}}}D`{}}000{dD`}000{{{d{Dj}}{d{Dl}}}Bj}`{{{d{E`}}{d{Cl}}{Al{Db}}{Al{{Eb{CbCd}}}}}{{Af{Cl}}}}0{{{d{E`}}{d{Cl}}{Al{{Eb{CbCd}}}}Bj}{{Af{{Eb{ClCl}}}}}}0{{}Df}{{}Dj}{{}Dn}{{}Ed}{Cd{{d{c}}}{}}000{Cd{{d{Dhc}}}{}}000{CdD`}000{{{d{Df}}{d{Df}}}Bj}{{{d{Dj}}{d{Dj}}}Bj}{{{d{Dl}}{d{Dl}}}Bj}{{{d{Dn}}{d{Dn}}}Bj}{{d{d{c}}}Bj{}}00000000000{{{d{Df}}{d{DhEf}}}Eh}{{{d{Dj}}{d{DhEf}}}Eh}{{{d{Dl}}{d{DhEf}}}Eh}0{{{d{Dn}}{d{DhEf}}}Eh}0{cc{}}{DlDf}111{{{d{Ej}}{d{Cl}}ei}{{Af{Cl}}}{{El{Db}}}{{An{}{{Aj{c}}}}}{{El{Db}}}{{An{}{{Aj{g}}}}}}{{{d{Df}}{d{Dhc}}}D`En}{{{d{Dj}}{d{Dhc}}}D`En}{{{d{Dl}}{d{Dhc}}}D`En}{{{d{Dn}}{d{Dhc}}}D`En}{{{d{F`}}{d{Ad}}DnBj}{{Af{{Eb{FbBj}}}}}}0{{{d{F`}}{d{Ad}}DnBj}{{Af{{Eb{{Fd{Ab}}{Fd{Ab}}}}}}}}0`{{}Cd}0007{{}c{}}000{{{d{Dl}}}Bj}{{{d{Dn}}{d{Dl}}}{{Af{D`}}}}{{{d{Ej}}{d{Cl}}eiDf}{{Af{Cl}}}{{El{Db}}}{{An{}{{Aj{c}}}}}{{El{Db}}}{{An{}{{Aj{g}}}}}}`;{{{d{Dn}}}Bj}={{{d{Cl}}{d{Cl}}Bj}{{Af{Ff}}}}{{{d{Df}}}Bj}`{{{d{Df}}}{{d{Db}}}}`{dc{}}000{dFh}0{c{{Fj{e}}}{}{}}000{{}{{Fj{c}}}{}}000{d{{Fj{FlFn}}}}0{dG`}000`{{DfDj}Df}{{Df{Al{Db}}}Df}`````````{{dCn}D`}{{{d{Gb}}}{{Al{Cd}}}}0{{{d{Gd}}}{{d{Ad}}}}{d{{d{c}}}{}}{{{d{Dh}}}{{d{Dhc}}}{}}{{{d{Ad}}{d{Ad}}{d{Ad}}}{{Af{Ad}}}}{{{d{Ad}}{d{Ad}}}{{Af{Ad}}}}0{{{d{Gf}}}Gf}{{d{d{Dhc}}}D`{}}{dD`}{{{d{{l{C`}}}}}{{Af{C`}}}}{{{d{Ad}}Cd}{{Af{Bn}}}}{{}Gf}{Cd{{d{c}}}{}}{Cd{{d{Dhc}}}{}}{CdD`}{{{d{Gh}}{d{Bh}}}{{Af{D`}}}}0{{{d{Gf}}{d{Gf}}}Bj}{{d{d{c}}}Bj{}}00{{{d{Gf}}{d{DhEf}}}{{Fj{D`Gj}}}}{cc{}}{{{d{Gf}}{d{Dhc}}}D`En}{{}Cd}{{}c{}}{{{d{Ad}}}Bj}{{{d{Gh}}Cf}{{Af{Bj}}}}0{{{d{{l{C`}}}}}{{Af{{Al{C`}}}}}}00{{{d{Ad}}}{{Af{Ad}}}}0{{CbDb}{{Af{Ad}}}}2{dc{}}{c{{Fj{e}}}{}{}}{{}{{Fj{c}}}{}}{dG`}{{{d{Gh}}BjBjDbBj}{{Af{Cl}}}}0","D":"El","p":[[10,"AsBinary",4,292],[1,"reference"],[8,"BinaryChunked",293],[10,"BinaryNameSpaceImpl",4,294],[1,"u8"],[1,"slice"],[8,"BooleanChunked",293],[10,"ChunkedSet",4,295],[8,"IdxSize",296],[5,"Series",297],[8,"PolarsResult",298],[10,"Copy",299],[17,"Item"],[6,"Option",300],[10,"IntoIterator",301],[8,"UInt32Chunked",293],[10,"AsList",25],[8,"ListChunked",293],[10,"ListNameSpaceImpl",25,302],[1,"str"],[1,"bool"],[8,"StringChunked",293],[8,"IdxCa",303],[6,"Column",304],[1,"i64"],[1,"usize"],[5,"SortOptions",305],[10,"AsString",74],[10,"IntoDf",76],[5,"DataFrame",306],[5,"Private",307],[1,"unit"],[5,"PlSmallStr",308],[10,"JoinDispatch",80,309],[5,"JoinArgs",80,310],[0,"mut"],[6,"JoinCoalesce",80,310],[6,"JoinType",80,310],[6,"JoinValidation",80,310],[10,"CrossJoin",80,311],[1,"tuple"],[8,"ChunkJoinOptIds",80,310],[5,"Formatter",312],[8,"Result",312],[10,"DataFrameJoinOps",80],[10,"Into",313],[10,"Hasher",314],[10,"SeriesJoin",80,315],[8,"InnerJoinIds",80,310],[5,"PrimitiveArray",316],[8,"LeftJoinIds",80,310],[5,"String",317],[6,"Result",318],[5,"CompactString",319],[6,"ToCompactStringError",319],[5,"TypeId",320],[10,"ArgAgg",240,321],[10,"SeriesSealed",240,322],[6,"SearchSortedSide",240,323],[10,"SeriesMethods",240,324],[5,"Error",312]],"r":[[4,292],[5,294],[6,295],[26,302],[80,310],[81,310],[84,311],[88,310],[89,310],[90,310],[91,309],[93,310],[94,310],[97,310],[103,315],[108,325],[111,325],[114,325],[144,309],[238,80],[239,76],[241,321],[244,323],[245,324],[246,322],[253,326],[254,326],[255,326],[259,327],[260,328],[276,328],[279,327],[280,327],[281,327],[282,329],[283,330],[284,331],[285,327]],"b":[[175,"impl-Debug-for-JoinType"],[176,"impl-Display-for-JoinType"],[177,"impl-Display-for-JoinValidation"],[178,"impl-Debug-for-JoinValidation"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAPYAEgAAAAgACwABAA8AAgAXAA8AKwA3AGcABgBwABkAjAAnALUAAAC6AAwAzAABAM8AAADRACAA8wAFAPsAAgABAQ8AEgEBABgBCgA="}],["polars_sql",{"t":"FNNNNNNNNNNNNCNNNNCNNNNNHNNNNNNNPGPFFKNNNNNNNNONONNNNNNOMNNNNNNNNNNNNNNNONNONNNMNNNNNNNNNNMNNNNNNNNNNNNNNNHH","n":["SQLContext","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","execute","from","function_registry","get_table_map","get_tables","init","into","keywords","new","new_from_table_map","register","registry","registry_mut","sql_expr","to_owned","try_from","try_into","type_id","unregister","vzip","with_function_registry","Aggregation","Context","Default","DefaultFunctionRegistry","FunctionOptions","FunctionRegistry","__clone_box","","borrow","","","borrow_mut","","","cast_to_supertypes","check_lengths","","clone","","clone_into","","clone_to_uninit","","collect_groups","contains","","default","deref","","","deref_mut","","","drop","","","eq","equivalent","","","flags","fmt","","fmt_str","from","","","get_udf","","hash","init","","","into","","","is_elementwise","is_groups_sensitive","register","","to_owned","","try_from","","","try_into","","","type_id","","","vzip","","","all_functions","all_keywords"],"q":[[0,"polars_sql"],[32,"polars_sql::function_registry"],[106,"polars_sql::keywords"],[108,"dyn_clone::sealed"],[109,"polars_sql::context"],[110,"polars_lazy::frame"],[111,"polars_error"],[112,"alloc::string"],[113,"polars_utils::aliases"],[114,"alloc::vec"],[115,"alloc::sync"],[116,"polars_plan::dsl::expr"],[117,"core::convert"],[118,"core::result"],[119,"core::any"],[120,"polars_plan::plans::options"],[121,"polars_plan::plans"],[122,"core::fmt"],[123,"polars_plan::dsl::udf"],[124,"core::option"],[125,"core::hash"],[126,"polars_sql::sql_expr"]],"i":"`j00000000000`0000`00000`0000000Bj`0```Bf1Bl120121111212121Aj1212312312322222232123012123123220123123123123123``","f":"`{{bd}f}{b{{b{c}}}{}}{{{b{h}}}{{b{hc}}}{}}{{{b{j}}}j}{{b{b{hc}}}f{}}{bf}{{}j}{l{{b{c}}}{}}{l{{b{hc}}}{}}{lf}{{{b{hj}}{b{n}}}{{Ab{A`}}}}{cc{}}`{{{b{j}}}{{Af{AdA`}}}}{{{b{j}}}{{Ah{Ad}}}}{{}l}{{}c{}}`9{{{Af{AdA`}}}j}{{{b{hj}}{b{n}}A`}f}{{{b{j}}}{{b{{Al{Aj}}}}}}{{{b{hj}}}{{b{hAj}}}}{c{{Ab{An}}}{{B`{n}}}}{bc{}}{c{{Bb{e}}}{}{}}{{}{{Bb{c}}}{}}{bBd}{{{b{hj}}{b{n}}}f}:{{j{Al{Aj}}}j}``````{{bd}f}0{b{{b{c}}}{}}00{{{b{h}}}{{b{hc}}}{}}00`{{{b{Bf}}}Bh}`{{{b{Bf}}}Bf}{{{b{Bj}}}Bj}{{b{b{hc}}}f{}}0{bf}0`{{{b{Aj}}{b{n}}}Bh}{{{b{Bl}}{b{n}}}Bh}{{}Bf}{l{{b{c}}}{}}00{l{{b{hc}}}{}}00{lf}00{{{b{Bf}}{b{Bf}}}Bh}{{b{b{c}}}Bh{}}00`{{{b{Bf}}{b{hBn}}}{{Bb{fC`}}}}{{{b{Bj}}{b{hBn}}}{{Bb{fC`}}}}`{cc{}}00{{{b{Aj}}{b{n}}}{{Ab{{Cd{Cb}}}}}}{{{b{Bl}}{b{n}}}{{Ab{{Cd{Cb}}}}}}{{{b{Bf}}{b{hc}}}fCf}{{}l}00{{}c{}}00{{{b{Bf}}}Bh}0{{{b{hAj}}{b{n}}Cb}{{Ab{f}}}}{{{b{hBl}}{b{n}}Cb}{{Ab{f}}}}{bc{}}0{c{{Bb{e}}}{}{}}00{{}{{Bb{c}}}{}}00{bBd}00777{{}{{Ah{{b{n}}}}}}0","D":"Dd","p":[[1,"reference"],[5,"Private",108],[1,"unit"],[0,"mut"],[5,"SQLContext",0,109],[1,"usize"],[1,"str"],[5,"LazyFrame",110],[8,"PolarsResult",111],[5,"String",112],[8,"PlHashMap",113],[5,"Vec",114],[10,"FunctionRegistry",32],[5,"Arc",115],[6,"Expr",116],[10,"AsRef",117],[6,"Result",118],[5,"TypeId",119],[5,"FunctionOptions",32,120],[1,"bool"],[6,"Context",32,121],[5,"DefaultFunctionRegistry",32],[5,"Formatter",122],[5,"Error",122],[5,"UserDefinedFunction",123],[6,"Option",124],[10,"Hasher",125]],"r":[[0,109],[24,126],[33,121],[36,120]],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAEoACwACAAkAEQAAABoAAwAfAAAAIgAAACUAAAAnABAAOgASAFEABABZAAAAXAAOAA=="}],["polars_time",{"t":"PGFPPKKKPFCHHOOCMCHMMMECKPPPPPGKNMNNNNNNNNNNNNNNNCNNNNNNNFRKKNNNNNNNNNNHNNONMONNMNNPFFGPPFPGPPPPPPPGPEPPPFPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKKMNNNNNNNNNNNNNNNNNN","n":["Both","ClosedWindow","Duration","Left","None","PolarsRound","PolarsTruncate","PolarsUpsample","Right","Window","chunkedarray","date_range","in_nanoseconds_window","offset","parsed_int","prelude","round","series","time_range","truncate","upsample","upsample_stable","StringMethods","string","AsString","DateDMY","DateYMD","DatetimeDMY","DatetimeYMD","DatetimeYMDZ","Pattern","StringMethods","__clone_box","as_string","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","eq","equivalent","","","fmt","from","hash","infer","init","into","is_inferable","to_owned","try_from","try_into","type_id","DatetimeInfer","Error","StrpTimeParser","TryFromWithUnit","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","from","infer_pattern_single","init","into","logical_type","parse","parse_bytes","pattern","to_owned","try_from","try_from_with_unit","try_into","type_id","Both","Bounds","BoundsIter","ClosedWindow","DataPoint","","Duration","Friday","Label","Left","","Monday","None","Right","","Saturday","StartBy","Sunday","TemporalMethods","Thursday","Tuesday","Wednesday","Window","WindowBound","__clone_box","","","","","","add_ms","add_ns","add_us","borrow","","","","","","","borrow_mut","","","","","","","clone","","","","","","clone_into","","","","","","clone_to_uninit","","","","","","cmp","compare","days","days_only","default","deref","","","","","","","deref_mut","","","","","","","drop","","","","","","","ensure_duration_matches_dtype","ensure_is_constant_duration","eq","","","","equivalent","","","","","","","","","","","","fmt","","","","","","from","","","","","","","get_earliest_bounds_ms","get_earliest_bounds_ns","get_earliest_bounds_us","get_overlapping_bounds_iter","group_by_values","group_by_windows","hash","","","","init","","","","","","","into","","","","","","","into_iter","is_constant_duration","is_full_days","is_zero","months","months_only","mul","nanoseconds","neg","negative","new","","next","offset","parse","parsed_int","partial_cmp","round_ms","round_ns","round_us","to_owned","","","","","","to_string","truncate_impl","truncate_ms","","truncate_ns","","truncate_us","","try_from","","","","","","","try_into","","","","","","","try_to_compact_string","type_id","","","","","","","weekday","weeks","weeks_only","AsSeries","TemporalMethods","as_series","century","day","hour","is_leap_year","iso_year","millennium","minute","month","nanosecond","ordinal_day","ordinal_year","quarter","second","strftime","to_string","week","weekday","year"],"q":[[0,"polars_time"],[22,"polars_time::chunkedarray"],[24,"polars_time::chunkedarray::string"],[57,"polars_time::chunkedarray::string::infer"],[83,"polars_time::prelude"],[288,"polars_time::series"],[309,"polars_utils::pl_str"],[310,"chrono::naive::datetime"],[311,"polars_time::windows::duration"],[312,"polars_time::windows::group_by"],[313,"polars_core::datatypes::time_unit"],[314,"polars_arrow::legacy::time_zone"],[315,"core::option"],[316,"polars_core::chunked_array::logical::datetime"],[317,"polars_error"],[318,"polars_time::round"],[319,"polars_core::datatypes"],[320,"chrono::naive::time"],[321,"polars_core::chunked_array::logical::time"],[322,"polars_time::truncate"],[323,"polars_time::upsample"],[324,"polars_core::frame"],[325,"polars_core::utils"],[326,"dyn_clone::sealed"],[327,"polars_time::chunkedarray::string::patterns"],[328,"core::fmt"],[329,"core::hash"],[330,"core::result"],[331,"core::any"],[332,"core::clone"],[333,"polars_time::windows::bounds"],[334,"polars_time::windows::window"],[335,"core::cmp"],[336,"polars_core::datatypes::dtype"],[337,"polars_core::frame::group_by::proxy"],[338,"alloc::vec"],[339,"alloc::string"],[340,"core::ops::function"],[341,"compact_str"],[342,"polars_core::series"],[343,"polars_time::date_range"]],"i":"h``00```0````Ehf`Ah``B`Bb0```Cb0000``0Bn111111111111111`1111111`Dn``D`000000000`0000Df111211:```EdEf`0`<10<<10`0`000`0Eb;=21<;;;En1<>32=01<>32=1<>32=1<>32=1<>32=<<<<201<>32=01<>32=01<>32=``<>32<<<>>>3332221<<>3201<>32=====``<>3201<>32=01<>32=0<<<<<<<<<<=0=<<<===1<>32=<<<=<=<=01<>32=01<>32=<01<>32=2<<``GdGh00000000000000000","f":"```````````{{bddfhj{A`{{n{l}}}}}{{Ad{Ab}}}}{{{n{d}}}Af}```{{{n{Ah}}{n{Aj}}{A`{{n{l}}}}}{{Ad{Ah}}}}`{{bAlAlfh}{{Ad{An}}}}{{{n{B`}}{A`{{n{l}}}}{n{Aj}}}{{Ad{B`}}}}{{{n{Bb}}c{n{Bd}}f}{{Ad{Bf}}}{{Bh{b}}}}0``````````{{nBj}Bl}{{{n{Bn}}}{{n{Aj}}}}{n{{n{c}}}{}}{{{n{C`}}}{{n{C`c}}}{}}{{{n{Cb}}}Cb}{{n{n{C`c}}}Bl{}}{nBl}{Cd{{n{c}}}{}}{Cd{{n{C`c}}}{}}{CdBl}{{{n{Cb}}{n{Cb}}}Af}{{n{n{c}}}Af{}}00{{{n{Cb}}{n{C`Cf}}}Ch}{cc{}}{{{n{Cb}}{n{C`c}}}BlCj}`{{}Cd}{{}c{}}{{{n{Cb}}{n{Bd}}}Af}{nc{}}{c{{Cl{e}}}{}{}}{{}{{Cl{c}}}{}}{nCn}````{{nBj}Bl}{n{{n{c}}}{}}{{{n{C`}}}{{n{C`c}}}{}}{{{n{{D`{c}}}}}{{D`{c}}}{DbDd}}{{n{n{C`c}}}Bl{}}{nBl}{Cd{{n{c}}}{}}{Cd{{n{C`c}}}{}}{CdBl}{cc{}}{{{n{Bd}}}{{A`{Cb}}}}{{}Cd}{{}c{}}`{{{n{C`{D`{c}}}}{n{Bd}}}A`Dd}{{{n{C`Df}}{n{{Dj{Dh}}}}{A`{j}}}{{A`{c}}}{}}`{nc{}}{c{{Cl{e}}}{}{}}{{c{A`{j}}}{{Ad{{Dn{}{{Dl{e}}}}}}}{}{}}{{}{{Cl{c}}}{}}{nCn}````````````````````````{{nBj}Bl}00000{{{n{f}}E`{A`{{n{l}}}}}{{Ad{E`}}}}00{n{{n{c}}}{}}000000{{{n{C`}}}{{n{C`c}}}{}}000000{{{n{Eb}}}Eb}{{{n{f}}}f}{{{n{h}}}h}{{{n{Ed}}}Ed}{{{n{Ef}}}Ef}{{{n{Eh}}}Eh}{{n{n{C`c}}}Bl{}}00000{nBl}00000{{{n{f}}{n{f}}}Ej}{{n{n{c}}}Ej{}}{{{n{f}}}E`}{{{n{f}}}Af}{{}Ef}{Cd{{n{c}}}{}}000000{Cd{{n{C`c}}}{}}000000{CdBl}000000{{f{n{El}}{n{Bd}}}{{Ad{Bl}}}}{{f{A`{{n{Bd}}}}{n{Bd}}}{{Ad{Bl}}}}{{{n{f}}{n{f}}}Af}{{{n{h}}{n{h}}}Af}{{{n{Ed}}{n{Ed}}}Af}{{{n{Ef}}{n{Ef}}}Af}{{n{n{c}}}Af{}}00000000000{{{n{Eb}}{n{C`Cf}}}Ch}{{{n{f}}{n{C`Cf}}}Ch}0{{{n{h}}{n{C`Cf}}}Ch}{{{n{Ed}}{n{C`Cf}}}Ch}{{{n{Ef}}{n{C`Cf}}}Ch}{cc{}}000000{{{n{Eh}}E`h{A`{{n{l}}}}}{{Ad{Eb}}}}00{{{n{Eh}}Ebhj{A`{{n{l}}}}Ef}{{Ad{En}}}}{{ff{n{{Dj{E`}}}}hj{A`{l}}}{{Ad{F`}}}}{{Eh{n{{Dj{E`}}}}hj{n{{A`{Fb}}}}AfAfEf}{{Ff{F`{Fd{E`}}{Fd{E`}}}}}}{{{n{f}}{n{C`c}}}BlCj}{{{n{h}}{n{C`c}}}BlCj}{{{n{Ed}}{n{C`c}}}BlCj}{{{n{Ef}}{n{C`c}}}BlCj}{{}Cd}000000{{}c{}}0000000{{{n{f}}{A`{{n{Bd}}}}}Af}{{{n{f}}}Af}0{{{n{f}}}E`}1{{fE`}f}1{fc{}}3{E`f}{{fff}Eh}{{{n{C`En}}}{{A`{c}}}{}}`{{{n{Bd}}}f}`{{{n{f}}{n{f}}}{{A`{Ej}}}}{{{n{Eh}}E`{A`{{n{l}}}}}{{Ad{E`}}}}00{nc{}}00000{nFh}{{{n{f}}E`{A`{{n{l}}}}ceg}{{Ad{E`}}}{{Fl{E`}{{Fj{E`}}}}}{{Fl{E`}{{Fj{d}}}}}{{Fl{d}{{Fj{E`}}}}}}{{{n{f}}E`{A`{{n{l}}}}}{{Ad{E`}}}}40404{c{{Cl{e}}}{}{}}000000{{}{{Cl{c}}}{}}000000{n{{Cl{FnG`}}}}{nCn}000000{{{n{Ef}}}{{A`{Gb}}}}{{{n{f}}}E`}{{{n{f}}}Af}``{{{n{Gd}}}{{n{Gf}}}}{{{n{Gh}}}{{Ad{Gj}}}}{{{n{Gh}}}{{Ad{Gl}}}}0{{{n{Gh}}}{{Ad{Gn}}}}22112{{{n{Gh}}}{{Ad{H`}}}}322{{{n{Gh}}{n{Bd}}}{{Ad{Gf}}}}0334","D":"Gd","p":[[5,"PlSmallStr",309],[5,"NaiveDateTime",310],[5,"Duration",83,311],[6,"ClosedWindow",83,312],[6,"TimeUnit",313],[6,"Tz",314],[1,"reference"],[6,"Option",315],[8,"DatetimeChunked",316],[8,"PolarsResult",317],[1,"bool"],[10,"PolarsRound",0,318],[8,"StringChunked",319],[5,"NaiveTime",320],[8,"TimeChunked",321],[10,"PolarsTruncate",0,322],[10,"PolarsUpsample",0,323],[1,"str"],[5,"DataFrame",324],[10,"IntoVec",325],[5,"Private",326],[1,"unit"],[10,"AsString",24],[0,"mut"],[6,"Pattern",24,327],[1,"usize"],[5,"Formatter",328],[8,"Result",328],[10,"Hasher",329],[6,"Result",330],[5,"TypeId",331],[5,"DatetimeInfer",57],[10,"Clone",332],[10,"PolarsNumericType",319],[10,"StrpTimeParser",57],[1,"u8"],[1,"slice"],[17,"Error"],[10,"TryFromWithUnit",57],[1,"i64"],[5,"Bounds",83,333],[6,"Label",83,312],[6,"StartBy",83,312],[5,"Window",83,334],[6,"Ordering",335],[6,"DataType",336],[5,"BoundsIter",83,334],[8,"GroupsSlice",337],[8,"TimeZone",336],[5,"Vec",338],[1,"tuple"],[5,"String",339],[17,"Output"],[10,"Fn",340],[5,"CompactString",341],[6,"ToCompactStringError",341],[1,"u32"],[10,"AsSeries",288],[5,"Series",342],[10,"TemporalMethods",288],[8,"Int32Chunked",319],[8,"Int8Chunked",319],[8,"BooleanChunked",319],[8,"Int16Chunked",319]],"r":[[1,312],[2,311],[5,318],[6,322],[7,323],[9,334],[11,343],[12,343],[18,343],[22,24],[30,327],[84,333],[85,334],[86,312],[89,311],[91,312],[99,312],[101,288],[105,334],[174,311],[175,311],[209,312],[210,312]],"b":[[193,"impl-Debug-for-Duration"],[194,"impl-Display-for-Duration"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAPsAFwAAAAkADQAFABQAAAAXABgAMQACADUAEQBIAAEASwATAGAACQBrAFsAzgAAANAAAQDUAAoA5gABAOoAAgDuAAAA8QACAPUAAQD6AAgABAEAAAYBAAAIARsAKAEAAA=="}],["polars_utils",{"t":"EECCCCCCCCCCCCCCQQQQCCCCCCCQCCCQCCCCCCCCCCQQCCRKMMRKIIIIIIMNNNNMNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNKMHHNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNHHHHFNNNNNNNNNNNNNNHHFNNNNNNNNNNNNNNNNNNNNNNKNNNNNKMHHHHFKNNNNNNNMNNNNNNNNNHNNNNNNNNNNNNNIFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKFIKRKIFKNNNNHNNNNNNNNNNNNNNNNNNNNNNMMNNNONNNNNNNMNNNNMNNNNNNNNNHHHKNNCNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNHHHHHKNNNNMMTFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNTRKMMHHFNNNNNNNNNNNNNNNNNNTTFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNKKKKKMMMMHMMMMHHFNNNNNNNNNNNNNNNNNNNNNNNNNNNJFNNNNNNNNNNNNRKKKKRFNNHHNNNNNNNNNNNNNNNNNNNNNNNNMNMMMNNMNNNNNNNNKMKKKRKKMMMHMMMM","n":["IdxSize","NullableIdxSize","abs_diff","aliases","arena","atomic","binary_search","cache","cell","clmul","contention_pool","cpuid","fixedringbuffer","float","floor_divmod","fmt","format_list","format_list_container","format_pl_smallstr","format_tuple","functions","hashing","idx_vec","index","io","itertools","macros","matches_any_order","mem","min_max","mmap","no_call_const","nulls","ord","partitioned","pl_str","priority","slice","sort","sync","sys","total_ord","unitvec","unreachable_unchecked_release","unwrap","vec","Abs","AbsDiff","abs_diff","max_abs_diff","HashMap","InitHashMaps","PlHashMap","PlHashSet","PlIndexMap","PlIndexSet","PlRandomState","PlRandomStateQuality","new","","","","","with_capacity","","","","","Arena","Node","add","borrow","","borrow_mut","","clear","clone","","clone_into","","clone_to_uninit","","cmp","compare","default","","deref","","deref_mut","","deserialize","","drop","","duplicate","eq","equivalent","","","fmt","","from","","get","get_many_mut","get_mut","get_node","get_unchecked","hash","init","","into","","is_empty","len","new","partial_cmp","pop","replace","replace_with","serialize","","swap","take","to_owned","","try_from","","try_into","","try_replace_with","type_id","","version","with_capacity","SyncCounter","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","","deref_mut","","drop","from","init","into","manual_drop","new","to_owned","try_from","try_into","type_id","ExponentialSearch","exponential_search_by","find_first_ge_index","find_first_gt_index","partition_point_exponential","FastCachedFunc","FastFixedCache","borrow","","borrow_mut","","clone","clone_into","clone_to_uninit","default","deref","","deref_mut","","drop","","eval","from","","get","get_mut","get_or_insert_with","init","","insert","into","","new","","to_owned","try_from","","try_get_or_insert_with","try_into","","type_id","","SyncUnsafeCell","borrow","borrow_mut","default","deref","deref_mut","drop","from","","","get","get_mut","init","into","into_inner","new","raw_get","try_from","try_into","type_id","clmul64","portable_clmul64","portable_prefix_xorsum","prefix_xorsum","LowContentionPool","borrow","borrow_mut","deref","deref_mut","drop","from","get","init","into","new","set","try_from","try_into","type_id","has_fast_bmi2","is_avx512_enabled","FixedRingBuffer","as_slices","borrow","borrow_mut","capacity","deref","deref_mut","drop","","fill_repeat","from","init","into","is_empty","is_full","len","new","pop_front","push","remaining_capacity","try_from","try_into","type_id","IsFloat","is_f32","is_f64","is_finite","is_float","is_nan","FloorDivMod","wrapping_floor_div_mod","arc_map","flatten","range_portion","try_arc_map","BytesHash","DirtyHash","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","dirty_hash","","drop","eq","equivalent","","","fmt","from","hash","hash_to_partition","init","into","is_null","new","peel_total_ord","to_owned","to_total_ord","tot_eq","tot_hash","try_from","try_into","type_id","unwrap_inner","IdxVec","UnitVec","as_mut","as_mut_slice","as_ref","as_slice","borrow","borrow_mut","capacity","clone","clone_into","clone_to_uninit","default","deref","","deref_mut","drop","","eq","equivalent","","","extend","fmt","from","","","from_iter","init","into","is_empty","iter","iter_mut","len","new","pop","push","push_unchecked","reserve","to_owned","try_from","try_into","type_id","with_capacity","Bounded","ChunkId","IdxSize","Indexable","Item","NullCount","NullableChunkId","NullableIdxSize","ToIdx","borrow","","borrow_mut","","check_bounds","clone","","clone_into","","clone_to_uninit","","deref","","deref_mut","","drop","","eq","equivalent","","","extract","fmt","","from","","","get","get_unchecked","idx","init","","inner","inner_mut","into","","is_empty","is_null","is_null_idx","is_valid_bit_pattern","len","null","","null_count","store","to_idx","to_opt","to_owned","","try_from","","try_into","","type_id","","_limit_path_len_io_err","create_file","open_file","Itertools","all_equal","collect_vec","enumerate_idx","","enumerate_u32","eq_by_","partial_cmp_by_","try_collect","try_collect_vec","EnumerateIdx","borrow","borrow_mut","clone","clone_into","clone_to_uninit","count","deref","deref_mut","drop","fmt","from","init","into","into_iter","len","new","next","next_back","nth","nth_back","size_hint","to_owned","try_from","try_into","type_id","madvise_populate_read","madvise_sequential","madvise_willneed","prefetch_l2","to_mutable_slice","MinMax","max_ignore_nan","max_propagate_nan","min_ignore_nan","min_propagate_nan","nan_max_lt","nan_min_lt","EMPTY","MMapSemaphore","MemReader","MemSlice","Mmap","advise","advise_range","as_ptr","as_ref","","","borrow","","","","borrow_mut","","","","clone","","clone_into","","clone_to_uninit","","default","deref","","","","","","deref_mut","","","","drop","","","","","ensure_not_mapped","fmt","","","","from","","","","","from_bytes","","from_file","from_mmap","from_reader","from_slice","from_static","from_vec","","init","","","","into","","","","lock","make_mut","map","new","new_from_file","new_from_file_with_options","position","prefetch","read","read_slice","remaining_len","remap","seek","slice","to_owned","","to_vec","total_len","try_from","","","","try_into","","","","type_id","","","","unlock","HAS_NULLS","Inner","IsNull","is_null","unwrap_inner","compare_fn_nan_max","compare_fn_nan_min","PartitionedHashMap","borrow","borrow_mut","deref","deref_mut","drop","from","init","inner","inner_mut","into","new","raw_entry","raw_entry_and_partition","raw_entry_and_partition_mut","raw_entry_mut","try_from","try_into","type_id","EMPTY","EMPTY_REF","PlSmallStr","as_ref","","","","as_str","borrow","","borrow_mut","clone","clone_into","clone_to_uninit","cmp","compare","default","deref","","deref_mut","deserialize","drop","eq","equivalent","","","fmt","","from","","","","","from_iter","","","","","","","","from_static","from_str","from_string","hash","init","into","into_string","partial_cmp","serialize","to_owned","to_string","try_from","try_into","try_to_compact_string","type_id","write_char","write_fmt","write_str","Priority","borrow","borrow_mut","clone","clone_into","clone_to_uninit","cmp","compare","deref","deref_mut","drop","eq","equivalent","","","fmt","from","init","into","partial_cmp","to_owned","try_from","try_into","type_id","Extrema","GetSaferUnchecked","Slice2Uninit","SliceAble","SortedSlice","as_uninit","get_unchecked_release","get_unchecked_release_mut","is_sorted_ascending","load_padded_le_u64","max_value","min_value","slice","slice_unchecked","arg_sort_ascending","perfect_sort","SyncPtr","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","deref_unchecked","drop","eq","equivalent","","","fmt","from","","from_const","get","init","into","is_null","new","new_null","to_owned","try_from","try_into","type_id","MEMINFO","MemInfo","borrow","borrow_mut","deref","deref_mut","drop","free","from","init","into","try_from","try_into","type_id","SourceItem","ToTotalOrd","TotalEq","TotalHash","TotalOrd","TotalOrdItem","TotalOrdWrap","borrow","borrow_mut","canonical_f32","canonical_f64","clone","clone_into","clone_to_uninit","cmp","compare","deref","deref_mut","dirty_hash","drop","eq","equivalent","","","from","ge","gt","hash","init","into","is_null","le","lt","ne","partial_cmp","peel_total_ord","to_owned","to_total_ord","tot_cmp","tot_eq","tot_ge","tot_gt","tot_hash","tot_hash_slice","tot_le","tot_lt","tot_ne","try_from","try_into","type_id","unwrap_inner","UnwrapUncheckedRelease","unwrap_unchecked_release","CapacityByFactor","ConvertVec","IntoRawParts","ItemIn","PushUnchecked","ResizeFaster","convert","convert_owned","fill_or_alloc","inplace_zip_filtermap","into_raw_parts","push_unchecked","raw_parts","with_capacity_by_factor"],"q":[[0,"polars_utils"],[46,"polars_utils::abs_diff"],[50,"polars_utils::aliases"],[68,"polars_utils::arena"],[135,"polars_utils::atomic"],[156,"polars_utils::binary_search"],[161,"polars_utils::cache"],[198,"polars_utils::cell"],[218,"polars_utils::clmul"],[222,"polars_utils::contention_pool"],[237,"polars_utils::cpuid"],[239,"polars_utils::fixedringbuffer"],[262,"polars_utils::float"],[268,"polars_utils::floor_divmod"],[270,"polars_utils::functions"],[274,"polars_utils::hashing"],[307,"polars_utils::idx_vec"],[351,"polars_utils::index"],[415,"polars_utils::io"],[418,"polars_utils::itertools"],[428,"polars_utils::itertools::enumerate_idx"],[454,"polars_utils::mem"],[459,"polars_utils::min_max"],[466,"polars_utils::mmap"],[565,"polars_utils::nulls"],[570,"polars_utils::ord"],[572,"polars_utils::partitioned"],[591,"polars_utils::pl_str"],[650,"polars_utils::priority"],[674,"polars_utils::slice"],[688,"polars_utils::sort"],[690,"polars_utils::sync"],[718,"polars_utils::sys"],[732,"polars_utils::total_ord"],[783,"polars_utils::unwrap"],[785,"polars_utils::vec"],[799,"num_traits"],[800,"core::cmp"],[801,"core::marker"],[802,"core::fmt"],[803,"core::clone"],[804,"core::result"],[805,"serde::de"],[806,"core::option"],[807,"core::hash"],[808,"core::default"],[809,"core::ops::function"],[810,"serde::ser"],[811,"core::any"],[812,"core::borrow"],[813,"alloc::sync"],[814,"alloc::vec"],[815,"core::convert"],[816,"core::ops::range"],[817,"core::iter::traits::collect"],[818,"core::slice::iter"],[819,"polars_error"],[820,"std::path"],[821,"std::io::error"],[822,"std::fs"],[823,"core::iter::traits::iterator"],[824,"core::ops::arith"],[825,"num_traits::cast"],[826,"num_traits::identities"],[827,"core::iter::traits::exact_size"],[828,"core::iter::traits::double_ended"],[829,"memmap2"],[830,"memmap2::advice"],[831,"polars_utils::mmap::private"],[832,"bytes::bytes"],[833,"std::io"],[834,"hashbrown::map"],[835,"std::ffi::os_str"],[836,"alloc::string"],[837,"compact_str"],[838,"alloc::borrow"],[839,"alloc::boxed"],[840,"core::mem::maybe_uninit"],[841,"core::slice::index"],[842,"rayon_core::thread_pool"]],"i":"``````````````````````````````````````````````d`00ABf```````0AdAfABhABj43210``AjAn101101010100010101010110000010111111001011110111011101010110111`Dh0000000000000000000`Dj``0``EfE`100000101010110000100101001001010`El000000000000000000`````Fb0000000000000```Fd000000000000000000000`Fh0000`Fj``````Gd000000Gf111111111`1111111111111``Gj00000000000000000000000000000000000000000````Hn````HjHl10`1010101010101111010110221101010Ib122021Id2If443434343````J`0`000000`Jb000000000000000000000000``````Kd00000Kl````Kf0Kj12012Kn123013030303223301230123011`230123001303300330230123012220110300020330302301230123012I`0`00```Md00000000000000000Ml0`00000000000000000000000000000000000000000000000000000000`O`0000000000000000000000`````ObOf0Oj`Ol0On0```A@d00000000000000000000000000``A@f00000000000AAf````0`A@l0``000000000000000000000000101A@`A@n11AA`02213333`AAh```AAl``00AAn`AB`ABb1ABd","f":"````````````````````````````````````````````````{{{d{}{{b{c}}}}{d{}{{b{c}}}}}c{fhjlnA`}}{{}c{}}````````00000{Abc{}}{Ab{{Ad{ce}}}{}{}}{Ab{{Af{c}}}{}}22``{{{Al{Ah{Aj{c}}}}c}An{}}{Al{{Al{c}}}{}}0{{{Al{Ah}}}{{Al{Ahc}}}{}}0{{{Al{Ah{Aj{c}}}}}B`{}}{{{Al{An}}}An}{{{Al{{Aj{c}}}}}{{Aj{c}}}Bb}{{Al{Al{Ahc}}}B`{}}0{AlB`}0{{{Al{An}}{Al{An}}}Bd}{{Al{Al{c}}}Bd{}}{{}An}{{}{{Aj{c}}}{}}{Ab{{Al{c}}}{}}0{Ab{{Al{Ahc}}}{}}0{c{{Bf{An}}}Bh}{c{{Bf{{Aj{e}}}}}BhBj}{AbB`}0{{{Al{Ah{Aj{c}}}}An}AnBb}{{{Al{An}}{Al{An}}}Bl}{{Al{Al{c}}}Bl{}}00{{{Al{An}}{Al{AhBn}}}C`}{{{Al{{Aj{c}}}}{Al{AhBn}}}C`l}{cc{}}0{{{Al{{Aj{c}}}}An}{{Al{c}}}{}}{{{Al{Ah{Aj{c}}}}{Cb{An}}}{{Cb{{Al{Ahc}}}}}{}}{{{Al{Ah{Aj{c}}}}An}{{Al{Ahc}}}{}}{{{Al{{Aj{c}}}}{Al{c}}}{{Cd{An}}}{}}3{{{Al{An}}{Al{Ahc}}}B`Cf}{{}Ab}0{{}c{}}0{{{Al{{Aj{c}}}}}Bl{}}{{{Al{{Aj{c}}}}}Ab{}}{{}{{Aj{c}}}{}}{{{Al{An}}{Al{An}}}{{Cd{Bd}}}}{{{Al{Ah{Aj{c}}}}}{{Cd{c}}}{}}{{{Al{Ah{Aj{c}}}}Anc}c{}}{{{Al{Ah{Aj{c}}}}Ane}B`Ch{{Cl{c}{{Cj{c}}}}}}{{{Al{An}}c}BfCn}{{{Al{{Aj{c}}}}e}BfD`Cn}{{{Al{Ah{Aj{c}}}}AnAn}B`{}}{{{Al{Ah{Aj{c}}}}An}cCh}{Alc{}}0{c{{Bf{e}}}{}{}}0{{}{{Bf{c}}}{}}0{{{Al{Ah{Aj{c}}}}Ane}{{Bf{B``}}}Ch{{Db{c}{{Cj{{Bf{c`}}}}}}}}{AlDd}0{{{Al{{Aj{c}}}}}Df{}}{Ab{{Aj{c}}}{}}`{Al{{Al{c}}}{}}{{{Al{Ah}}}{{Al{Ahc}}}{}}{{{Al{Dh}}}Dh}{{Al{Al{Ahc}}}B`{}}{AlB`}{{}Dh}{Ab{{Al{c}}}{}}{{{Al{Dh}}}{{Al{c}}}{}}{{{Al{AhDh}}}{{Al{Ahc}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{cc{}}{{}Ab}{{}c{}}{{{Al{AhDh}}}B`}{AbDh}{Alc{}}{c{{Bf{e}}}{}{}}{{}{{Bf{c}}}{}}{AlDd}`{{{Al{Dj}}e}{{Bf{AbAb}}}{}{{Db{{Al{c}}}{{Cj{Bd}}}}}}{{{Al{{Dl{c}}}}c}AbDn}0{{{Al{Dj}}e}Ab{}{{Db{{Al{c}}}{{Cj{Bl}}}}}}``{Al{{Al{c}}}{}}0{{{Al{Ah}}}{{Al{Ahc}}}{}}0{{{Al{{E`{ce}}}}}{{E`{ce}}}BbBb}{{Al{Al{Ahc}}}B`{}}{AlB`}{{}{{E`{ce}}}{EbEd}{}}{Ab{{Al{c}}}{}}0{Ab{{Al{Ahc}}}{}}0{AbB`}0{{{Al{Ah{Ef{ceg}}}}cBl}e{EbEdBb}j{{Db{c}{{Cj{e}}}}}}{cc{}}0{{{Al{{E`{eg}}}}{Al{c}}}{{Cd{{Al{g}}}}}{EbEdEh}{{Ej{c}}EbEd}{}}{{{Al{Ah{E`{eg}}}}{Al{c}}}{{Cd{{Al{Ahg}}}}}{EbEdEh}{{Ej{c}}EbEd}{}}{{{Al{Ah{E`{eg}}}}{Al{c}}i}{{Al{Ahg}}}{}{{Ej{c}}EbEd}{}{{Cl{{Al{e}}}{{Cj{g}}}}}}{{}Ab}0{{{Al{Ah{E`{ce}}}}ce}{{Al{Ahe}}}{EbEd}{}}{{}c{}}0{{gAb}{{Ef{ceg}}}{EbEdBb}j{{Db{c}{{Cj{e}}}}}}{Ab{{E`{ce}}}{EbEd}{}}{Alc{}}{c{{Bf{e}}}{}{}}0{{{Al{Ah{E`{eg}}}}{Al{c}}k}{{Bf{{Al{Ahg}}i}}}{}{{Ej{c}}EbEd}{}{}{{Cl{{Al{e}}}{{Cj{{Bf{gi}}}}}}}}{{}{{Bf{c}}}{}}0{AlDd}0`{Al{{Al{c}}}{}}{{{Al{Ah}}}{{Al{Ahc}}}{}}{{}{{El{c}}}Ch}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{cc{}}{Enc{}}{c{{El{c}}}{}}{{{Al{{El{c}}}}}{}Eh}{{{Al{Ah{El{c}}}}}{{Al{Ahc}}}Eh}{{}Ab}{{}c{}}{{{El{c}}}c{}}5{{}}{c{{Bf{e}}}{}{}}{{}{{Bf{c}}}{}}{AlDd}{{F`F`}F`}0{F`F`}0`{Al{{Al{c}}}{}}{{{Al{Ah}}}{{Al{Ahc}}}{}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{cc{}}{{{Al{{Fb{c}}}}}cCh}?>{Ab{{Fb{c}}}Ch}{{{Al{{Fb{c}}}}c}B`Ch}=<;{{}Bl}0`{{{Al{{Fd{c}}}}}{{Ff{{Al{{Dl{c}}}}{Al{{Dl{c}}}}}}}{}}:9{{{Al{{Fd{c}}}}}Ab{}}98{{{Al{Ah{Fd{c}}}}}B`{}}8{{{Al{Ah{Fd{c}}}}cAb}Abj}8{{}Ab}{{}c{}}{{{Al{{Fd{c}}}}}Bl{}}05{Ab{{Fd{c}}}{}}{{{Al{Ah{Fd{c}}}}}{{Cd{c}}}{}}{{{Al{Ah{Fd{c}}}}c}{{Cd{B`}}}{}}8{c{{Bf{e}}}{}{}}{{}{{Bf{c}}}{}}{AlDd}`=={{{Al{Fh}}}Bl}>0`{{FjFj}{{Ff{FjFj}}}}{{{Fl{c}}e}{{Fl{c}}}Bb{{Db{c}{{Cj{c}}}}}}{{{Al{{Dl{e}}}}{Cd{Ab}}}{{Fn{c}}}Bb{{G`{{Dl{c}}}}}}{{AbAb{Gb{Ab}}}{{Gb{Ab}}}}{{{Fl{c}}g}{{Bf{{Fl{c}}e}}}Bb{}{{Db{c}{{Cj{{Bf{ce}}}}}}}}``{Al{{Al{c}}}{}}{{{Al{Ah}}}{{Al{Ahc}}}{}}{{{Al{Gd}}}Gd}{{Al{Al{Ahc}}}B`{}}{AlB`}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{{{Al{Gf}}}F`}{{{Al{Gd}}}F`}{AbB`}{{{Al{Gd}}{Al{Gd}}}Bl}{{Al{Al{c}}}Bl{}}00{{{Al{Gd}}{Al{AhBn}}}C`}{cc{}}{{{Al{Gd}}{Al{Ahc}}}B`Cf}{{F`Ab}Ab}{{}Ab}{{}c{}}{{{Al{Gd}}}Bl}{{{Cd{{Al{{Dl{Gh}}}}}}F`}Gd}{ce{}{}}{Alc{}}{{{Al{Gd}}}c{}}<8{c{{Bf{e}}}{}{}}{{}{{Bf{c}}}{}}{AlDd}{Gdc{}}``{{{Al{Ah{Gj{c}}}}}{{Al{Ah{Dl{c}}}}}{}}0{{{Al{{Gj{c}}}}}{{Al{{Dl{c}}}}}{}}0{Al{{Al{c}}}{}}{{{Al{Ah}}}{{Al{Ahc}}}{}}{{{Al{{Gj{c}}}}}Ab{}}{{{Al{{Gj{c}}}}}{{Gj{c}}}{}}{{Al{Al{Ahc}}}B`{}}{AlB`}{{}{{Gj{c}}}{}}{{{Al{{Gj{c}}}}}{{Al{e}}}{}{}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{{{Al{Ah{Gj{c}}}}}B`{}}{AbB`}{{{Al{{Gj{c}}}}{Al{{Gj{c}}}}}BlGl}{{Al{Al{c}}}Bl{}}00{{{Al{Ah{Gj{c}}}}e}B`{}{{H`{}{{Gn{c}}}}}}{{{Al{{Gj{c}}}}{Al{AhBn}}}C`l}{cc{}}{{{Fn{c}}}{{Gj{c}}}{}}{{{Al{{Dl{c}}}}}{{Gj{c}}}Bb}{e{{Gj{c}}}{}{{H`{}{{Gn{c}}}}}}{{}Ab}{{}c{}}{{{Al{{Gj{c}}}}}Bl{}}{{{Al{{Gj{c}}}}}{{Hb{c}}}{}}{{{Al{Ah{Gj{c}}}}}{{Hd{c}}}{}}{{{Al{{Gj{c}}}}}Ab{}}{{}{{Gj{c}}}{}}{{{Al{Ah{Gj{c}}}}}{{Cd{c}}}{}}{{{Al{Ah{Gj{c}}}}c}B`{}}0{{{Al{Ah{Gj{c}}}}Ab}B`{}}{Alc{}}{c{{Bf{e}}}{}{}}{{}{{Bf{c}}}{}}{AlDd}{Ab{{Gj{c}}}{}}`````````{Al{{Al{c}}}{}}0{{{Al{Ah}}}{{Al{Ahc}}}{}}0{{{Al{{Dl{Hf}}}}Hf}{{Hh{B`}}}}{{{Al{Hj}}}Hj}{{{Al{Hl}}}Hl}{{Al{Al{Ahc}}}B`{}}0{AlB`}0{Ab{{Al{c}}}{}}0{Ab{{Al{Ahc}}}{}}0{AbB`}0{{{Al{Hj}}{Al{Hj}}}Bl}{{Al{Al{c}}}Bl{}}00{Hl{{Ff{HfHf}}}}{{{Al{Hj}}{Al{AhBn}}}C`}{{{Al{Hl}}{Al{AhBn}}}C`}{HfHj}{cc{}}0{{{Al{{Hn{}{{Gn{c}}}}}}Ab}cI`}0{{{Al{Hj}}}Hf}{{}Ab}0`{{{Al{AhHl}}}{{Al{AhF`}}}}{{}c{}}0{{{Al{Ib}}}Bl}{{{Al{Hl}}}Bl}{{{Al{Hj}}}Bl}{{{Al{c}}}Bl{}}{{{Al{Ib}}}Ab}{{}Hj}{{}Hl}{{{Al{Id}}}Ab}{{HfHf}Hl}{{IfF`}Hf}{{{Al{Hj}}}{{Cd{Hf}}}}{Alc{}}0{c{{Bf{e}}}{}{}}0{{}{{Bf{c}}}{}}0{AlDd}0{{{Al{Ih}}Ij}Il}{{{Al{Ih}}}{{Hh{In}}}}0`{J`Bl}{J`{{Fn{c}}}{}}`{J`{{Jb{J`Hf}}}}{J`{{Jb{J`Df}}}}{{J`cg}BlH`{}{{Db{e}{{Cj{Bl}}}}}}{{J`cg}{{Cd{Bd}}}H`{}{{Db{e}{{Cj{{Cd{Bd}}}}}}}}{J`{{Bf{ce}}}{}{}}{J`{{Bf{{Fn{c}}e}}}{}{}}`{Al{{Al{c}}}{}}{{{Al{Ah}}}{{Al{Ahc}}}{}}{{{Al{{Jb{ce}}}}}{{Jb{ce}}}BbBb}{{Al{Al{Ahc}}}B`{}}{AlB`}{{{Jb{ce}}}AbJd{{Jf{}{{Cj{}}}}JhJjJlj}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{{{Al{{Jb{ce}}}}{Al{AhBn}}}C`ll}{cc{}}{{}Ab}{{}c{}}0{{{Al{{Jb{ce}}}}}AbJn{{Jf{}{{Cj{}}}}JhJjJlj}}{c{{Jb{ce}}}{}K`}{{{Al{Ah{Jb{ce}}}}}{{Cd{g}}}Jd{{Jf{}{{Cj{}}}}JhJjJlj}{}}{{{Al{Ah{Jb{ce}}}}}{{Cd{{Ff{e}}}}}{JnKb}{{Jf{}{{Cj{}}}}JhJjJlj}}{{{Al{Ah{Jb{ce}}}}Ab}{{Cd{g}}}Jd{{Jf{}{{Cj{}}}}JhJjJlj}{}}{{{Al{Ah{Jb{ce}}}}Ab}{{Cd{{Ff{e}}}}}{JnKb}{{Jf{}{{Cj{}}}}JhJjJlj}}{{{Al{{Jb{ce}}}}}{{Ff{Ab{Cd{Ab}}}}}Jd{{Jf{}{{Cj{}}}}JhJjJlj}}{Alc{}}{c{{Bf{e}}}{}{}}{{}{{Bf{c}}}{}}{AlDd}{{{Al{{Dl{Gh}}}}}B`}000{{{Al{{Dl{c}}}}}{{Al{Ah{Dl{c}}}}}j}`{{KdKd}Kd}000{{{Al{Kd}}{Al{Kd}}}Bl}0`````{{{Al{Kf}}Kh}{{Bf{B`Ij}}}}{{{Al{Kf}}KhAbAb}{{Bf{B`Ij}}}}{{{Al{Kj}}}Gh}{{{Al{Kf}}}{{Al{{Dl{Gh}}}}}}{{{Al{Kl}}}{{Al{{Dl{Gh}}}}}}{{{Al{Kj}}}{{Al{{Dl{Gh}}}}}}{Al{{Al{c}}}{}}000{{{Al{Ah}}}{{Al{Ahc}}}{}}000{{{Al{Kl}}}Kl}{{{Al{Kn}}}Kn}{{Al{Al{Ahc}}}B`{}}0{AlB`}0{{}Kl}{Ab{{Al{c}}}{}}:0{{{Al{Kl}}}{{Al{c}}}{}}11{Ab{{Al{Ahc}}}{}}000{AbB`}00{{{Al{AhKj}}}B`}1{{{Al{In}}}{{Hh{B`}}}}{{{Al{Kf}}{Al{AhBn}}}{{Bf{B`L`}}}}{{{Al{Kl}}{Al{AhBn}}}C`}{{{Al{Kn}}{Al{AhBn}}}C`}{{{Al{Kj}}{Al{AhBn}}}C`}{cc{}}0{KlKn}11{LbKl}{LbKn}{{{Al{In}}}{{Hh{Kl}}}}{{{Fl{Kj}}}Kl}{c{{Ld{Kn}}}Lf}{{{Al{{Dl{Gh}}}}}Kn}{{{Al{{Dl{Gh}}}}}Kl}{{{Fn{Gh}}}Kl}{{{Fn{Gh}}}Kn}{{}Ab}000{{}c{}}000{{{Al{Kf}}}{{Bf{B`Ij}}}}{Kf{{Bf{LhIj}}}}{c{{Bf{KfIj}}}Lj}>{{{Al{In}}}{{Hh{Kj}}}}{{{Al{In}}Ll}{{Hh{Kj}}}}{{{Al{Kn}}}Ab}{{{Al{Kl}}}B`}{{{Al{AhKn}}{Al{Ah{Dl{Gh}}}}}{{Ld{Ab}}}}{{{Al{AhKn}}Ab}Kl}3{{{Al{AhKf}}AbLn}{{Bf{B`Ij}}}}{{{Al{AhKn}}M`}{{Ld{F`}}}}{{{Al{Kl}}{Gb{Ab}}}Kl}{Alc{}}0{Kl{{Fn{Gh}}}}8{c{{Bf{e}}}{}{}}000{{}{{Bf{c}}}{}}000{AlDd}000{{{Al{Kf}}}{{Bf{B`Ij}}}}```{{{Al{{I`{}{{Mb{c}}}}}}}Bl{}}{{{I`{}{{Mb{c}}}}}c{}}{{{Al{c}}{Al{c}}}Bd{hFh}}0`{Al{{Al{c}}}{}}{{{Al{Ah}}}{{Al{Ahc}}}{}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{cc{}}{{}Ab}{{{Al{{Md{ceg}}}}}{{Al{{Dl{{Mf{ceg}}}}}}}{}{}{}}{{{Al{Ah{Md{ceg}}}}}{{Al{Ah{Fn{{Mf{ceg}}}}}}}{}{}{}}{{}c{}}{{{Fn{{Mf{ceg}}}}}{{Md{ceg}}}{}{}{}}{{{Al{{Md{ceg}}}}F`}{{Mh{ceg}}}{}{}{}}{{{Al{{Md{ceg}}}}F`}{{Ff{{Mh{ceg}}Ab}}}{}{}{}}{{{Al{Ah{Md{ceg}}}}F`}{{Ff{{Mj{ceg}}Ab}}}{}{}{}}{{{Al{Ah{Md{ceg}}}}F`}{{Mj{ceg}}}{}{}{}}{c{{Bf{e}}}{}{}}{{}{{Bf{c}}}{}}{AlDd}```{{{Al{Ml}}}{{Al{Ih}}}}{{{Al{Ml}}}{{Al{Mn}}}}{{{Al{Ml}}}{{Al{N`}}}}{{{Al{Ml}}}{{Al{{Dl{Gh}}}}}}22{Al{{Al{c}}}{}}{{{Al{Ah}}}{{Al{Ahc}}}{}}{{{Al{Ml}}}Ml}{{Al{Al{Ahc}}}B`{}}{AlB`}{{{Al{Ml}}{Al{Ml}}}Bd}{{Al{Al{c}}}Bd{}}{{}Ml}{Ab{{Al{c}}}{}}{{{Al{Ml}}}{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{c{{Bf{Ml}}}Bh}{AbB`}{{{Al{Ml}}{Al{c}}}Bl{{G`{Mn}}Eh}}{{Al{Al{c}}}Bl{}}00{{{Al{Ml}}{Al{AhBn}}}C`}0{NbMl}{cc{}}{{{Al{Mn}}}Ml}{NdMl}{{{Al{Nb}}}Ml}{cMl{{H`{}{{Gn{{Nf{Mn}}}}}}}}{cMl{{H`{}{{Gn{Nh}}}}}}{cMl{{H`{}{{Gn{{Al{Nh}}}}}}}}{cMl{{H`{}{{Gn{{Al{Mn}}}}}}}}{cMl{{H`{}{{Gn{Nb}}}}}}{cMl{{H`{}{{Gn{{Nj{Mn}}}}}}}}{cMl{{H`{}{{Gn{{Al{Ml}}}}}}}}{cMl{{H`{}{{Gn{Ml}}}}}}::<{{{Al{Ml}}{Al{Ahc}}}B`Cf}{{}Ab}{{}c{}}{MlNb}{{{Al{Ml}}{Al{Ml}}}{{Cd{Bd}}}}{{{Al{Ml}}c}BfCn}{Alc{}}{AlNb}{c{{Bf{e}}}{}{}}{{}{{Bf{c}}}{}}{Al{{Bf{NdNl}}}}{AlDd}{{{Al{AhMl}}Nh}C`}{{{Al{AhMl}}Nn}C`}{{{Al{AhMl}}{Al{Mn}}}C`}`{Al{{Al{c}}}{}}{{{Al{Ah}}}{{Al{Ahc}}}{}}{{{Al{{O`{ce}}}}}{{O`{ce}}}BbBb}{{Al{Al{Ahc}}}B`{}}{AlB`}{{{Al{{O`{ce}}}}{Al{{O`{ce}}}}}Bd{DnEd}{}}{{Al{Al{c}}}Bd{}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{{{Al{{O`{ce}}}}{Al{{O`{ce}}}}}BlEd{}}{{Al{Al{c}}}Bl{}}00{{{Al{{O`{ce}}}}{Al{AhBn}}}C`ll}{cc{}}{{}Ab}{{}c{}}{{{Al{{O`{ce}}}}{Al{{O`{ce}}}}}{{Cd{Bd}}}{DnEd}{}}{Alc{}}{c{{Bf{e}}}{}{}}{{}{{Bf{c}}}{}}{AlDd}`````{{{Al{Ob}}}{{Al{{Dl{{Od{c}}}}}}}{}}{{{Al{Of}}e}Al{}{{Oh{{Dl{c}}}}}}{{{Al{AhOf}}e}{{Al{Ah}}}{}{{Oh{{Dl{c}}}}}}{{{Al{Oj}}}Bl}{{{Al{{Dl{Gh}}}}}F`}{{{Al{Ol}}}{{Cd{{Al{c}}}}}{}}0{{{Al{On}}{Gb{Ab}}}On}0{{e{Al{Ah{Fn{Gh}}}}Ab}{{Al{Ah{Dl{g}}}}}{A@`j}{{H`{}{{Gn{c}}}}}{Jhj}}{{{Al{A@b}}{Al{{Dl{{Ff{HfHf}}}}}}{Al{Ah{Fn{Hf}}}}}B`}`{Al{{Al{c}}}{}}{{{Al{Ah}}}{{Al{Ahc}}}{}}{{{Al{{A@d{c}}}}}{{A@d{c}}}{}}{{Al{Al{Ahc}}}B`{}}{AlB`}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{{{Al{{A@d{c}}}}}{{Al{c}}}{}}{AbB`}{{{Al{{A@d{c}}}}{Al{{A@d{c}}}}}BlGl}{{Al{Al{c}}}Bl{}}00{{{Al{{A@d{c}}}}{Al{AhBn}}}C`l}{cc{}}{{}{{A@d{c}}}{}}0{{{Al{{A@d{c}}}}}{}{}}{{}Ab}{{}c{}}{{{Al{{A@d{c}}}}}Bl{}}44{Alc{}}{c{{Bf{e}}}{}{}}{{}{{Bf{c}}}{}}{AlDd}``{Al{{Al{c}}}{}}{{{Al{Ah}}}{{Al{Ahc}}}{}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{{{Al{A@f}}}F`}?<;876```````54{A@hA@h}{A@jA@j}{{{Al{{A@l{c}}}}}{{A@l{c}}}Bb}{{Al{Al{Ahc}}}B`{}}{AlB`}{{{Al{{A@l{c}}}}{Al{{A@l{c}}}}}BdA@`}{{Al{Al{c}}}Bd{}}:9{{{Al{{A@l{c}}}}}F`Gf}9{{{Al{{A@l{c}}}}{Al{{A@l{c}}}}}BlA@n}{{Al{Al{c}}}Bl{}}00{cc{}}{{{Al{{A@l{c}}}}{Al{{A@l{c}}}}}BlA@`}0{{{Al{{A@l{c}}}}{Al{Ahe}}}B`AA`Cf}{{}Ab}{{}c{}}{{{Al{{A@l{c}}}}}BlI`}447{{{Al{{A@l{c}}}}{Al{{A@l{c}}}}}{{Cd{Bd}}}A@`}{ce{}{}}{Alc{}}{{{Al{{AAf{}{{AAb{c}}{AAd{e}}}}}}}c{}{}}{{{Al{A@`}}{Al{A@`}}}Bd}{{{Al{A@n}}{Al{A@n}}}Bl}{{{Al{A@`}}{Al{A@`}}}Bl}0{{{Al{AA`}}{Al{Ahc}}}B`Cf}{{{Al{{Dl{AA`}}}}{Al{Ahc}}}B`Cf}223{c{{Bf{e}}}{}{}}{{}{{Bf{c}}}{}}{AlDd}{{{A@l{c}}}eI`{}}`{AAhc{}}``````{{{Al{{AAl{}{{AAj{c}}}}}}g}{{Fn{e}}}{}{}{{Db{{Al{c}}}{{Cj{e}}}}}}{{{AAl{}{{AAj{c}}}}g}{{Fn{e}}}{}{}{{Db{c}{{Cj{e}}}}}}{{{Al{AhAAn}}Abc}B`j}{{{Al{Ah{Fn{c}}}}{Al{Ah{Fn{e}}}}g}B`{}{}{{Db{ce}{{Cj{{Cd{{Ff{ce}}}}}}}}}}{AB`{{Ff{AbAb}}}}{{{Al{AhABb}}c}B`{}}{{{Al{AB`}}}{{Ff{AbAb}}}}{{AbA@j}ABd}","D":"Oj","p":[[17,"Abs"],[10,"AbsDiff",46],[10,"Num",799],[10,"PartialOrd",800],[10,"Copy",801],[10,"Debug",802],[10,"Send",801],[10,"Sync",801],[1,"usize"],[8,"PlHashMap",50],[8,"PlHashSet",50],[0,"mut"],[5,"Arena",68],[1,"reference"],[5,"Node",68],[1,"unit"],[10,"Clone",803],[6,"Ordering",800],[6,"Result",804],[10,"Deserializer",805],[10,"Deserialize",805],[1,"bool"],[5,"Formatter",802],[8,"Result",802],[1,"array"],[6,"Option",806],[10,"Hasher",807],[10,"Default",808],[17,"Output"],[10,"FnOnce",809],[10,"Serializer",810],[10,"Serialize",810],[10,"FnMut",809],[5,"TypeId",811],[1,"u32"],[5,"SyncCounter",135],[10,"ExponentialSearch",156],[1,"slice"],[10,"Ord",800],[5,"FastFixedCache",161],[10,"Hash",807],[10,"Eq",800],[5,"FastCachedFunc",161],[10,"Sized",801],[10,"Borrow",812],[5,"SyncUnsafeCell",198],[1,"never"],[1,"u64"],[5,"LowContentionPool",222],[5,"FixedRingBuffer",239],[1,"tuple"],[10,"IsFloat",262],[10,"FloorDivMod",268],[5,"Arc",813],[5,"Vec",814],[10,"AsRef",815],[5,"Range",816],[5,"BytesHash",274],[10,"DirtyHash",274],[1,"u8"],[5,"UnitVec",307],[10,"PartialEq",800],[17,"Item"],[10,"IntoIterator",817],[5,"Iter",818],[5,"IterMut",818],[8,"IdxSize",351],[8,"PolarsResult",819],[5,"NullableIdxSize",351],[5,"ChunkId",351],[10,"Indexable",351],[10,"IsNull",565],[10,"Bounded",351],[10,"NullCount",351],[10,"ToIdx",351],[5,"Path",820],[5,"Error",821],[6,"PolarsError",819],[5,"File",822],[10,"Itertools",418],[5,"EnumerateIdx",428],[10,"Iterator",823],[10,"Add",824],[10,"FromPrimitive",825],[10,"AddAssign",824],[10,"One",826],[10,"ExactSizeIterator",827],[10,"Zero",826],[10,"DoubleEndedIterator",828],[10,"MinMax",459],[5,"Mmap",466,829],[6,"Advice",830],[5,"MMapSemaphore",466],[5,"MemSlice",466,831],[5,"MemReader",466],[5,"Error",802],[5,"Bytes",832],[8,"Result",821],[10,"Read",833],[5,"MmapMut",829],[10,"MmapAsRawDesc",829],[5,"MmapOptions",829],[5,"RemapOptions",829],[6,"SeekFrom",833],[17,"Inner"],[5,"PartitionedHashMap",572],[5,"HashMap",834],[5,"RawEntryBuilder",834],[5,"RawEntryBuilderMut",834],[5,"PlSmallStr",591],[1,"str"],[5,"OsStr",835],[5,"String",836],[5,"CompactString",837],[6,"Cow",838],[1,"char"],[5,"Box",839],[6,"ToCompactStringError",837],[5,"Arguments",802],[5,"Priority",650],[10,"Slice2Uninit",674],[20,"MaybeUninit",840],[10,"GetSaferUnchecked",674],[10,"SliceIndex",841],[10,"SortedSlice",674],[10,"Extrema",674],[10,"SliceAble",674],[10,"TotalOrd",732],[5,"ThreadPool",842],[5,"SyncPtr",690],[5,"MemInfo",718],[1,"f32"],[1,"f64"],[5,"TotalOrdWrap",732],[10,"TotalEq",732],[10,"TotalHash",732],[17,"TotalOrdItem"],[17,"SourceItem"],[10,"ToTotalOrd",732],[10,"UnwrapUncheckedRelease",783],[17,"ItemIn"],[10,"ConvertVec",785],[10,"ResizeFaster",785],[10,"IntoRawParts",785],[10,"PushUnchecked",785],[10,"CapacityByFactor",785],[10,"InitHashMaps",50],[8,"PlIndexMap",50],[8,"PlIndexSet",50]],"r":[[0,351],[1,351],[469,831],[470,829]],"b":[[332,"impl-From%3CVec%3CT%3E%3E-for-UnitVec%3CT%3E"],[333,"impl-From%3C%26%5BT%5D%3E-for-UnitVec%3CT%3E"],[594,"impl-AsRef%3CPath%3E-for-PlSmallStr"],[595,"impl-AsRef%3Cstr%3E-for-PlSmallStr"],[596,"impl-AsRef%3COsStr%3E-for-PlSmallStr"],[597,"impl-AsRef%3C%5Bu8%5D%3E-for-PlSmallStr"],[617,"impl-Debug-for-PlSmallStr"],[618,"impl-Display-for-PlSmallStr"],[619,"impl-From%3CString%3E-for-PlSmallStr"],[621,"impl-From%3C%26str%3E-for-PlSmallStr"],[622,"impl-From%3CCompactString%3E-for-PlSmallStr"],[623,"impl-From%3C%26String%3E-for-PlSmallStr"],[624,"impl-FromIterator%3CCow%3C\'a,+str%3E%3E-for-PlSmallStr"],[625,"impl-FromIterator%3Cchar%3E-for-PlSmallStr"],[626,"impl-FromIterator%3C%26char%3E-for-PlSmallStr"],[627,"impl-FromIterator%3C%26str%3E-for-PlSmallStr"],[628,"impl-FromIterator%3CString%3E-for-PlSmallStr"],[629,"impl-FromIterator%3CBox%3Cstr%3E%3E-for-PlSmallStr"],[630,"impl-FromIterator%3C%26PlSmallStr%3E-for-PlSmallStr"],[631,"impl-FromIterator%3CPlSmallStr%3E-for-PlSmallStr"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAKICTwAAAAgACgBbAGgAAABqAAEAbQACAHIAFQCJAAoAlQAAAJgABgChAAAAowAPALUABQC9AAkAyAABAMsAAgDPAAAA0wAAANgADADmAAEA6QAGAPIABgD7AAAA/QADAAMBAwAIAQoAFAEPACUBAgApAQsANgEVAE0BAwBSAQYAWgEnAIQBAACGAQQAjQEVAKQBAACmAQQArgEJALkBAAC7AQIAvwEHAMwBCADaASYAAwIAAAgCAgAPAgMAGgIDAB8CAgAjAgAAJQIBACgCDAA2AgQAPQIFAEQCAgBIAgkAUwIZAG4CDwB/AgsAjAIOAJwCAACeAgoAqwIEALECAAC0AgYAvAIFAMMCAwDIAgAAygIFANECBADYAgAA2gIDAOICAwDoAgwA9gIDAPsCFQASAwQAGAMCABwDAAAeAwEA"}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[390179,193685,51019,81317,9273,3376,8569,26322]}